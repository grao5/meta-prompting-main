[
    {
        "name": "stagecompetitorstandings",
        "description": "Retrieve the competitor standings for a specific Motorsport stage using the given stage ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the stage for which to retrieve competitor's standings.",
                "type": "int",
                "default": 203968
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchschedules",
        "description": "Fetches the schedules of ice hockey matches for a specified date, including match timings, teams, and other relevant information.",
        "parameters": {
            "day": {
                "description": "The day of the month for which you want to retrieve the schedules (1-31).",
                "type": "int",
                "default": 28
            },
            "year": {
                "description": "The year for which you want to retrieve the schedules (e.g., 2022).",
                "type": "int",
                "default": 2022
            },
            "month": {
                "description": "The month for which you want to retrieve the schedules (1-12).",
                "type": "int",
                "default": 11
            }
        },
        "domain": "Sports"
    },
    {
        "name": "uniquestageimage",
        "description": "Retrieves the image for a specific Motorsport unique stage using the provided stage ID.",
        "parameters": {
            "is_id": {
                "description": "The unique stage ID for which to retrieve the image.",
                "type": "int",
                "default": 40
            }
        },
        "domain": "Sports"
    },
    {
        "name": "pitstopdataforarace",
        "description": "Retrieves pit stop data for a specific Formula 1 race using the provided year and round.",
        "parameters": {
            "year": {
                "description": "The season year of the Formula 1 race.",
                "type": "str",
                "default": "year"
            },
            "round": {
                "description": "The round number of the Formula 1 race.",
                "type": "str",
                "default": "round"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "search_team",
        "description": "Searches for a team using the provided team name and returns the response from the API.",
        "parameters": {
            "name": {
                "description": "The name of the team to search for.",
                "type": "str",
                "default": "New York Yankees"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "game_matrix_gamepk",
        "description": "Fetch detailed game information for a specific baseball game using its game ID (gamepk).",
        "parameters": {
            "gamepk": {
                "description": "The unique identifier for a specific baseball game.",
                "type": "str",
                "default": "633282"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ligue_1_standings",
        "description": "Fetches the Ligue 1 standings for a given season using the RapidAPI service.",
        "parameters": {
            "season": {
                "description": "The season for which to fetch the standings (e.g., '2022'). Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguehometeamevents",
        "description": "Retrieves the last 5 home events for a specific league and season using the Baseball API.",
        "parameters": {
            "seasonid": {
                "description": "The ID of the season for which to retrieve the home team events.",
                "type": "int",
                "default": 49349
            },
            "tournamentid": {
                "description": "The unique ID of the tournament for which to retrieve the home team events.",
                "type": "int",
                "default": 19442
            }
        },
        "domain": "Sports"
    },
    {
        "name": "prematch_event",
        "description": "Fetches pre-match event data from a sports betting API.",
        "parameters": {
            "lang": {
                "description": "The language code for the API response.",
                "type": "str",
                "default": "en"
            },
            "evt": {
                "description": "The event ID to fetch information for.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_id",
        "description": "Retrieves information about a specific competition using its ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the competition to be retrieved.",
                "type": "str",
                "default": "LAL"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_affiliates_teamids",
        "description": "Query baseball team affiliates by team ID using the RapidAPI service.",
        "parameters": {
            "teamids": {
                "description": "A comma-separated string of team IDs to query. Default is '145'.",
                "type": "str",
                "default": "145"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "games_esports",
        "description": "Fetches information about esports games for a given event ID using the SofaSport API.",
        "parameters": {
            "event_id": {
                "description": "The ID of the event to retrieve esports games for.",
                "type": "int",
                "default": "10289011"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "constructorstandingsafterarace",
        "description": "Fetches the constructor standings after a specific race in a given Formula 1 season.",
        "parameters": {
            "year": {
                "description": "The year of the Formula 1 season.",
                "type": "str",
                "default": "year"
            },
            "round": {
                "description": "The specific race round in the season.",
                "type": "str",
                "default": "round"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "players_photo",
        "description": "Retrieves the photo of a soccer player given the player's ID using the Soccerway API.",
        "parameters": {
            "player_id": {
                "description": "The unique identifier of the soccer player.",
                "type": "int",
                "default": "177208"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fighter",
        "description": "Fetches the details of a single fighter given their ID using the Spectation Sports Events API.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the fighter to fetch.",
                "type": "int",
                "default": "1182"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_supported_coins_handler",
        "description": "Fetches supported cryptocurrency coins from the RapidAPI Fan Crypto Coins endpoint.",
        "parameters": {
            "cursor": {
                "description": "Pagination string for fetching the next set of coins. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_scores_for_given_date",
        "description": "Fetches the list of football match scores for a given date using the specified API.",
        "parameters": {
            "date": {
                "description": "The date for which to fetch the football scores, in the format %Y-%m-%d (e.g., '2022-12-01').",
                "type": "str",
                "default": "2022-12-04"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "performance_stats_for_past_predictions",
        "description": "Returns the accuracy statistics of past predictions over various time frames and allows optional filtering by federation and market.",
        "parameters": {
            "federation": {
                "description": "Filter statistics by a specific federation. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "market": {
                "description": "Filter statistics based on the prediction market. Defaults to 'classic'.",
                "type": "str, optional",
                "default": "classic"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "constructors",
        "description": "Fetches the list of constructors for a given Formula 1 season using the specified API key.",
        "parameters": {
            "season_id": {
                "description": "The ID of the season for which to list constructors.",
                "type": "int",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fixtures_by_team_by_season",
        "description": "Retrieves fixtures and results for a given team within a specified season across all competitions they play in.",
        "parameters": {
            "season_id": {
                "description": "The ID of the season to retrieve fixtures and results for.",
                "type": "int",
                "default": "2023"
            },
            "team_id": {
                "description": "The ID of the team to retrieve fixtures and results for.",
                "type": "int",
                "default": "6167"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguetotalteamevents",
        "description": "Retrieve the total team events for a specific basketball league in a given tournament and season.",
        "parameters": {
            "seasonid": {
                "description": "The season ID for which you want to retrieve the league's total team events.",
                "type": "int",
                "default": 42914
            },
            "tournamentid": {
                "description": "The unique tournament ID for which you want to retrieve the league's total team events.",
                "type": "int",
                "default": 138
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_predictions",
        "description": "Fetches all betting tips from the API with configurable parameters for connection, content type, sorting, and API key.",
        "parameters": {
            "connection": {
                "description": "Specifies the connection type for the API request. Default is 'keep-alive'.",
                "type": "str",
                "default": "keep-alive"
            },
            "content_type": {
                "description": "Sets the content type for the API request. Default is 'application/json'.",
                "type": "str",
                "default": "application/json"
            },
            "sort": {
                "description": "Criterion for sorting the betting tips. Default is '-id' for descending order.",
                "type": "str",
                "default": "-id"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_schedule",
        "description": "Fetches the schedule for an NBA team.",
        "parameters": {
            "season": {
                "description": "The season year in YYYY format. Defaults to '2023'. Only '2022' and '2023' are valid.",
                "type": "str",
                "default": "2023"
            },
            "teamid": {
                "description": "The unique identifier for the team. Accepts values from 1 to 30.",
                "type": "str, optional",
                "default": ""
            },
            "teamabv": {
                "description": "The team's abbreviation, such as 'CHI' for the Chicago Bulls, 'BOS' for the Boston Celtics, or 'ATL' for the Atlanta Hawks. Defaults to 'GS'.",
                "type": "str",
                "default": "GS"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_scorecard",
        "description": "Fetches the full scorecard (updated live) for a given match ID using the RapidAPI service.",
        "parameters": {
            "match_id": {
                "description": "The ID of the cricket match for which to retrieve the live scorecard.",
                "type": "int",
                "default": "2432999"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "player_latest_media",
        "description": "Fetch the latest media for a given player using their player ID.",
        "parameters": {
            "player_id": {
                "description": "The unique identifier of the player for whom the latest media is to be fetched.",
                "type": "int",
                "default": "12994"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getteamstats",
        "description": "Retrieves the statistics of a specific NHL team using the given team ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the team.",
                "type": "int",
                "default": 28
            }
        },
        "domain": "Sports"
    },
    {
        "name": "home_team_last_10_matches",
        "description": "Fetches the statistics and list of the last 10 matches played by the home team for a given team ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the home team for which to fetch the last 10 matches.",
                "type": "int",
                "default": "81930"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "prediction_details",
        "description": "Fetches and returns detailed prediction information for a given football match.",
        "parameters": {
            "match_id": {
                "description": "The unique identifier for the football match.",
                "type": "str",
                "default": "62fb54c82c9a2e8d643c7965"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "daily_match_list_all",
        "description": "Fetches the daily match list including scheduled, live, and finished matches for a given date.",
        "parameters": {
            "date": {
                "description": "The date of the match in the format {dd/MM/yyyy}.",
                "type": "str",
                "default": "06/10/2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_champions",
        "description": "Fetches a list of all champions from the League of Legends API, optionally in a specified language.",
        "parameters": {
            "lang": {
                "description": "The language in which to retrieve the champion information. Defaults to None, which retrieves information in English.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "players_at_position",
        "description": "Fetches all players at a specified position from the National Football Players API.",
        "parameters": {
            "position": {
                "description": "The abbreviated position name to query players for (e.g., QB, RB, WR).",
                "type": "str",
                "default": "QB"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamnearmatches",
        "description": "Fetches the near matches for a specific baseball team using the team ID.",
        "parameters": {
            "is_id": {
                "description": "The team ID for which to retrieve the near matches.",
                "type": "int",
                "default": 3633
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_kara_france_vs_albazi_june_03_2023",
        "description": "Fetch details of UFC Fight Night: Kara-France vs. Albazi on June 03, 2023.",
        "parameters": {
            "offset": {
                "description": "The starting point of records to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of records to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "provider1_live_match_id",
        "description": "Fetch the live match data for the given match ID from provider1 using the RapidAPI endpoint.",
        "parameters": {
            "is_id": {
                "description": "The match ID to fetch data for.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "game_odds_by_site_schedule",
        "description": "Fetches the game schedule from a specified sports betting site using the provided API key.",
        "parameters": {
            "site": {
                "description": "The name of the sports betting site to fetch the schedule from. Case-insensitive. Valid options include:",
                "type": "str",
                "default": "draftkings"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getteamroster",
        "description": "Retrieves the roster of a hockey team for a given season using the RapidAPI NHL Stats and Live Data API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the team for which to retrieve the roster.",
                "type": "int",
                "default": 28
            },
            "season": {
                "description": "The season for which to retrieve the roster. Defaults to 20172018.",
                "type": "int, optional",
                "default": 20172018
            }
        },
        "domain": "Sports"
    },
    {
        "name": "eventstatistics",
        "description": "Fetch statistics for a specific MMA event using the given event ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the MMA event for which to fetch statistics.",
                "type": "int",
                "default": 11243946
            }
        },
        "domain": "Sports"
    },
    {
        "name": "prematch",
        "description": "Fetches the prematch list from the Sports Betting API.",
        "parameters": {
            "sp": {
                "description": "The sport ID.",
                "type": "int",
                "default": ""
            },
            "lang": {
                "description": "The language code.",
                "type": "str",
                "default": "en"
            },
            "lid": {
                "description": "The league ID.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matches_v2_list_live",
        "description": "Fetches a list of available live matches for a given sports category.",
        "parameters": {
            "category": {
                "description": "The sports category to retrieve live matches for. Options include 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.",
                "type": "str",
                "default": "soccer"
            },
            "timezone": {
                "description": "The timezone offset to be applied to match timings. Range includes -11 to 14 in 0.25 increments. Default is -7.",
                "type": "int, optional",
                "default": "-7"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchodds",
        "description": "Retrieves the odds for a specific cricket match using the given match ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the cricket match for which to retrieve odds.",
                "type": "int",
                "default": 11067865
            }
        },
        "domain": "Sports"
    },
    {
        "name": "basketball_match_statistics",
        "description": "Fetches statistics for a given basketball match using the RapidAPI sports live scores service.",
        "parameters": {
            "match_id": {
                "description": "The identifier for the basketball match. Match IDs can be retrieved from the Basketball Live Matches endpoint.",
                "type": "str",
                "default": "10314704"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "serie_a_standings",
        "description": "Fetches the Serie A football standings for a given season using the provided RapidAPI key.",
        "parameters": {
            "season": {
                "description": "The season year for which the standings are to be fetched (e.g., '2022'). Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_box_score",
        "description": "Retrieve NHL game box score data for a specific game using the given game ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the NHL game for which the box score data is to be retrieved.",
                "type": "str",
                "default": "401458986"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "goal_analysis_goal_minutes_in_between",
        "description": "Retrieves goal statistics of the teams in specified minute intervals for a given soccer match.",
        "parameters": {
            "matchid": {
                "description": "The ID of the soccer match for which goal statistics are requested.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_standings",
        "description": "Fetch the current standings for a specified competition using the Zeus API.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the competition.",
                "type": "str",
                "default": "PRL"
            },
            "year": {
                "description": "The year for which standings are to be retrieved. Defaults to '2020'.",
                "type": "str, optional",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_roster",
        "description": "Fetches the current or historical roster of an NBA team.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team, ranging from 1 to 30.",
                "type": "str, optional",
                "default": ""
            },
            "statstoget": {
                "description": "Specifies whether to fetch 'totals' or 'averages'. Defaults to 'averages'.",
                "type": "str, optional",
                "default": "averages"
            },
            "archivedate": {
                "description": "A specific date in the format YYYYMMDD to fetch historical data. Historical data is available from 20230505 onwards.",
                "type": "str, optional",
                "default": ""
            },
            "teamabv": {
                "description": "The abbreviation of the team, e.g., CHI, BOS, ATL. Defaults to 'SAC'.",
                "type": "str, optional",
                "default": "SAC"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "innings_cricket",
        "description": "Fetch innings data for a cricket event given the event ID.",
        "parameters": {
            "event_id": {
                "description": "The unique identifier of the cricket event.",
                "type": "int",
                "default": "10188874"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "eredivisie_standings",
        "description": "Fetches Eredivisie standings for a given season using the RapidAPI service.",
        "parameters": {
            "season": {
                "description": "The season for which to fetch the standings, e.g., '2022'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "stagedetails",
        "description": "Fetch the details of a specific Motorsport stage using the provided stage ID.",
        "parameters": {
            "stageid": {
                "description": "The ID of the Motorsport stage for which to retrieve the details.",
                "type": "int",
                "default": 203648
            }
        },
        "domain": "Sports"
    },
    {
        "name": "daily_match_list_scheduled",
        "description": "Retrieves the list of scheduled basketball matches for a given date.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve scheduled matches in the format 'dd/MM/yyyy'. Data can be retrieved for a period of \u00b1 7 days from the current date.",
                "type": "str",
                "default": "30/01/2021"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "today",
        "description": "Fetches the treasure of the day from the Uncovered Treasure API.",
        "parameters": {
            "callback": {
                "description": "Optional JSONP callback for the request. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "player_events",
        "description": "Fetch events for a specified player by their player ID.",
        "parameters": {
            "player_id": {
                "description": "The ID of the player for whom to fetch events.",
                "type": "int",
                "default": "12994"
            },
            "page": {
                "description": "The page number of events to fetch.",
                "type": "int",
                "default": "0"
            },
            "course_events": {
                "description": "Additional event details or filters to be applied.",
                "type": "str",
                "default": "last"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "select_race_based_on_race_number",
        "description": "Fetches the details for a Formula 1 race based on the provided race number.",
        "parameters": {
            "race_no": {
                "description": "The race number of the Formula 1 race to get details for.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "horse_stats",
        "description": "Fetches the racing statistics for a specified horse using the RapidAPI Horse Racing API.",
        "parameters": {
            "id_horse": {
                "description": "The unique identifier of the horse.",
                "type": "str",
                "default": "230380"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "shotmap",
        "description": "Fetches the shotmap data for a given event from the SofaSport API.",
        "parameters": {
            "event_id": {
                "description": "The unique identifier for the event.",
                "type": "int",
                "default": "10230638"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueawaystandings",
        "description": "Retrieve the league's away standings for a given tournament and season.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the tournament for which you want to retrieve the away standings.",
                "type": "int",
                "default": 7
            },
            "seasonid": {
                "description": "The ID of the season for which you want to retrieve the away standings.",
                "type": "int",
                "default": 36886
            }
        },
        "domain": "Sports"
    },
    {
        "name": "wnba_play_by_play",
        "description": "Retrieves the WNBA game play-by-play data for a specific game using the provided game ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the game for which play-by-play data is to be retrieved.",
                "type": "str",
                "default": "401244185"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "primeira_liga_standings",
        "description": "Fetches the standings for the Primeira Liga for a specified season.",
        "parameters": {
            "season": {
                "description": "The season for which the standings are to be fetched, e.g., '2022'. If not provided, the current season is assumed.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_list_wta",
        "description": "Retrieves the list of all WTA tournaments to be played in a given year, including basic information such as tournament venue, surface, and prizemoney.",
        "parameters": {
            "year": {
                "description": "The year for which to retrieve tournament data. Must be between 1960 and 2022.",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_image",
        "description": "Fetches the image of a soccer team using the given team ID and RapidAPI key.",
        "parameters": {
            "team_id": {
                "description": "The unique identifier of the soccer team whose image is to be fetched.",
                "type": "int",
                "default": "662"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "food_info",
        "description": "Retrieves information about a specific food item from the food database using its food ID.",
        "parameters": {
            "foodid": {
                "description": "The unique identifier for the food item.",
                "type": "str",
                "default": "SR25_1_1"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguelastmatches",
        "description": "Retrieve the last matches of an American Football league for a given tournament and season.",
        "parameters": {
            "page": {
                "description": "The zero-based page number for pagination.",
                "type": "int",
                "default": ""
            },
            "tournamentid": {
                "description": "The unique tournament ID for which you want to retrieve the last matches.",
                "type": "int",
                "default": 9464
            },
            "seasonid": {
                "description": "The season ID for which you want to retrieve the last matches.",
                "type": "int",
                "default": 36422
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguegroups",
        "description": "Fetches the groups in a specified basketball league tournament for a given season.",
        "parameters": {
            "seasonid": {
                "description": "The season ID for which to retrieve the league's groups.",
                "type": "int",
                "default": 22873
            },
            "tournamentid": {
                "description": "The unique tournament ID for which to retrieve the league's groups.",
                "type": "int",
                "default": 441
            }
        },
        "domain": "Sports"
    },
    {
        "name": "races",
        "description": "Retrieves a list of races and session details for a specified F1 season.",
        "parameters": {
            "season_id": {
                "description": "The ID of the F1 season for which to list races and session details.",
                "type": "int",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "categoryflag",
        "description": "Fetches the flag image of a specific category in PNG format from the Motorsport API.",
        "parameters": {
            "flag": {
                "description": "The name of the flag category to fetch.",
                "type": "str",
                "default": "jp"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_teams",
        "description": "Fetches the list of teams participating in a specific tournament using the provided tournament ID and RapidAPI key.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament for which to retrieve the list of teams.",
                "type": "int",
                "default": "25"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchh2hduel",
        "description": "Retrieves head-to-head duel information for a specific basketball match.",
        "parameters": {
            "is_id": {
                "description": "The ID of the basketball match for which to retrieve head-to-head duel information.",
                "type": "int",
                "default": 10066290
            }
        },
        "domain": "Sports"
    },
    {
        "name": "wnba_schedule",
        "description": "Fetches the WNBA schedule data for a specified date using the provided API key.",
        "parameters": {
            "month": {
                "description": "The month for which to retrieve the schedule, as a string.",
                "type": "str",
                "default": "05"
            },
            "day": {
                "description": "The day for which to retrieve the schedule, as a string.",
                "type": "str",
                "default": "05"
            },
            "year": {
                "description": "The year for which to retrieve the schedule, as a string.",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getallgames",
        "description": "Retrieve all games data using the RapidAPI service.",
        "parameters": {
            "cookie": {
                "description": "The cookie value to include in the query parameters. Default is 'i18next=es;'.",
                "type": "str",
                "default": "i18next=es;"
            },
            "host": {
                "description": "The host value to include in the query parameters. Default is 'www.mozzartbet.com.co'.",
                "type": "str",
                "default": "www.mozzartbet.com.co"
            },
            "referer": {
                "description": "The referer value to include in the query parameters. Default is 'https://www.mozzartbet.com.co/es'.",
                "type": "str",
                "default": "https://www.mozzartbet.com.co/es"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "drivers_standings",
        "description": "Retrieve F1 drivers' standings data for a specified year.",
        "parameters": {
            "year": {
                "description": "The championship year for which to retrieve drivers' standings. Defaults to 2020.",
                "type": "int, optional",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "provider3_live_match_id",
        "description": "Fetches live match details for a given match ID from Provider3 using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the match.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "managerlastmatches",
        "description": "Gets the list of the last matches played by a football manager, paginated by the given page number.",
        "parameters": {
            "is_id": {
                "description": "The ID of the manager whose last matches you want to retrieve.",
                "type": "int",
                "default": 787526
            },
            "page": {
                "description": "The zero-based page number of the results you want to retrieve.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "pitstop_summary",
        "description": "Retrieves the pitstop summary for a specific race given the year and location.",
        "parameters": {
            "year": {
                "description": "The year of the race.",
                "type": "int",
                "default": "2021"
            },
            "location": {
                "description": "The location of the race.",
                "type": "str",
                "default": "abu dhabi"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_list",
        "description": "Retrieves a list of all tennis tournaments to be played in a selected year, based on the specified category. It provides basic information about each tournament such as venue, surface, and winners.",
        "parameters": {
            "category": {
                "description": "The category of tournaments to retrieve. Options include:",
                "type": "str",
                "default": "atpgs"
            },
            "year": {
                "description": "The year for which to retrieve the list of tournaments.",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "result",
        "description": "This function retrieves the result of a sports event using the specified language and event ID, by querying the Sports Betting API.",
        "parameters": {
            "lang": {
                "description": "Language code for the results (e.g., 'en' for English).",
                "type": "str",
                "default": "en"
            },
            "evt": {
                "description": "Event ID for which the result is to be fetched.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "stats_performance",
        "description": "Fetches performance statistics of the AI prediction module for football matches.",
        "parameters": {
            "date": {
                "description": "The date for which to fetch the performance statistics, formatted as 'YYYY-MM-DD'. Defaults to '2022-08-13'.",
                "type": "str",
                "default": "2022-08-13"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "entry_list",
        "description": "Fetches the entry list for a given golf tournament using the specified RapidAPI key.",
        "parameters": {
            "tournament_id": {
                "description": "The ID of the tournament for which to fetch the entry list.",
                "type": "int",
                "default": "219"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaderboards",
        "description": "Fetch the most recent leaderboard for a given tournament ID, year, and optional round ID.",
        "parameters": {
            "orgid": {
                "description": "Identifier for the organizing body. Choose '1' for PGA Tour or '2' for LIV Tour.",
                "type": "str",
                "default": ""
            },
            "tournid": {
                "description": "The tournament ID for which the leaderboard is to be fetched.",
                "type": "str",
                "default": "475"
            },
            "year": {
                "description": "The year of the tournament.",
                "type": "str",
                "default": "2022"
            },
            "roundid": {
                "description": "The round ID to filter the leaderboard by a specific round. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "result_statistics_goals",
        "description": "Fetches the goal statistics for a given handball match within a 7-day period relative to the current date.",
        "parameters": {
            "matchid": {
                "description": "The ID of the handball match.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "inplay",
        "description": "Fetches the in-play sports betting data from the RapidAPI service.",
        "parameters": {
            "lang": {
                "description": "The language code for the response data.",
                "type": "str",
                "default": "en"
            },
            "sp": {
                "description": "The sport identifier for which to fetch in-play data.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonendconstructorstanding",
        "description": "Fetches the Constructor Standings at the end of the specified Formula 1 season.",
        "parameters": {
            "year": {
                "description": "The year for which to fetch the constructor standings.",
                "type": "str",
                "default": "year"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_summary",
        "description": "Fetch the game summary data for a specified NHL game using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The game ID for which the summary data is requested.",
                "type": "str",
                "default": "401458986"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fixtures_by_date",
        "description": "Fetches rugby match fixtures and results for a specific date using the RapidAPI service. If no date is provided, the default date is set to '2023-02-04'.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve fixtures and results, in the format 'YYYY-MM-DD'. Defaults to '2023-02-04' if not provided.",
                "type": "str",
                "default": "2023-02-04"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_latest_nba_articles",
        "description": "Fetches the latest NBA articles with optional filters for source, team, player, and limit.",
        "parameters": {
            "limit": {
                "description": "The maximum number of articles to retrieve. Default is `None`.",
                "type": "str, optional",
                "default": ""
            },
            "player": {
                "description": "The player's name for which to filter articles, use a dash to separate names (e.g., 'kevin-durant'). Default is `None`.",
                "type": "str, optional",
                "default": ""
            },
            "team": {
                "description": "The team name for which to filter articles (e.g., 'lakers'). Default is `None`.",
                "type": "str, optional",
                "default": ""
            },
            "source": {
                "description": "The source of the articles (e.g., 'bleacher-report', 'nba', 'espn'). Default is `None`.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "player_statistics_seasons",
        "description": "Fetch the season statistics for a given player using the SofaScores API.",
        "parameters": {
            "player_id": {
                "description": "The unique identifier for the player whose statistics are to be fetched.",
                "type": "int",
                "default": "12994"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_results_by_id_and_year_wta",
        "description": "Retrieves all the matches played in a selected WTA tournament for a given year.",
        "parameters": {
            "year": {
                "description": "The year of the tournament. Please note that not all tournaments are held every year.",
                "type": "int",
                "default": "2022"
            },
            "tournament_id": {
                "description": "The ID of the tournament. You can retrieve this list from the WTA endpoint.",
                "type": "str",
                "default": "709"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "drivers",
        "description": "Fetches a list of all drivers for a given season using the F1 Live Motorsport Data API.",
        "parameters": {
            "season_id": {
                "description": "The ID of the season for which to list the drivers.",
                "type": "int",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "clubs_list_by_competition",
        "description": "Fetches the list of clubs in a specific competition using the specified competition ID and domain.",
        "parameters": {
            "is_id": {
                "description": "The ID of the competition to fetch the list of clubs for. This value is returned from the .../search or .../competitions/list endpoints.",
                "type": "str",
                "default": "IT1"
            },
            "domain": {
                "description": "The domain to use for the request. It should be one of the following: 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', 'world'. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "wnba_team_info",
        "description": "Retrieve information for a specific WNBA team using the RapidAPI service.",
        "parameters": {
            "teamid": {
                "description": "The ID of the WNBA team for which information is being requested.",
                "type": "str",
                "default": "18"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "listofallcircuitswithinaraceinayear",
        "description": "Fetches a list of all circuits within a race for a given year from the Formula 1 API.",
        "parameters": {
            "round": {
                "description": "The round number/name of the race within the year.",
                "type": "str",
                "default": "round"
            },
            "year": {
                "description": "The year of the race season.",
                "type": "str",
                "default": "year"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournaments",
        "description": "Retrieves the scheduled tournaments for the specified region from the Rocket League API.",
        "parameters": {
            "region": {
                "description": "The region to search for tournaments. Valid options include:",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series_get_news",
        "description": "Retrieves news articles for a specified cricket series.",
        "parameters": {
            "seriesid": {
                "description": "The unique identifier for the cricket series.",
                "type": "int",
                "default": "3636"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "super_lig_standings",
        "description": "Fetches the standings of the Super Lig for a specific season using the RapidAPI service.",
        "parameters": {
            "season": {
                "description": "The season for which standings are required. Example: '2022'. If not provided, the current season's standings will be fetched.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "prematchform",
        "description": "Retrieve the pre-match form for a specific baseball match using its match ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the baseball match for which to retrieve the pre-match form.",
                "type": "int",
                "default": 9864379
            }
        },
        "domain": "Sports"
    },
    {
        "name": "staffs_list_by_club",
        "description": "Retrieves a list of staff members for a specific club from the Transfermarket API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the club whose staff members are to be retrieved.",
                "type": "int",
                "default": "631"
            },
            "domain": {
                "description": "The domain specification for the API request. One of the following: com, de, be, es, it, nl, pl, pt, com.tr, world. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getmatchesbyteam",
        "description": "Fetches all matches for a specified team using the RapidAPI IPL endpoint.",
        "parameters": {
            "team": {
                "description": "The name of the team for which to retrieve matches.",
                "type": "str",
                "default": "Kolkata Knight Riders"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getgamecontent",
        "description": "Fetches the content of a specific NHL game using its game ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the game. The first 4 digits identify the season of the game (e.g., 2017 for the 2017-2018 season). The next 2 digits indicate the type of game (01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star). The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7).",
                "type": "int",
                "default": 2017020851
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_game_lineup",
        "description": "Fetches the full lineup for a specific game, along with its confirmation status or forecast.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier for the game.",
                "type": "str",
                "default": "9576185"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_best_player",
        "description": "Retrieves the best player of each team for a given game, including their rating.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier for the game.",
                "type": "str",
                "default": "9576185"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguetotalstandings",
        "description": "Fetches the total standings for a specific E-Sports league given the season ID and tournament ID.",
        "parameters": {
            "seasonid": {
                "description": "The season ID for which to retrieve the league's total standings.",
                "type": "int",
                "default": 47832
            },
            "tournamentid": {
                "description": "The unique tournament ID for which to retrieve the league's total standings.",
                "type": "int",
                "default": 16026
            }
        },
        "domain": "Sports"
    },
    {
        "name": "qualifyingresults",
        "description": "Fetches the qualifying results for a specific year and round of the Formula 1 season.",
        "parameters": {
            "year": {
                "description": "The year of the Formula 1 season.",
                "type": "str",
                "default": "year"
            },
            "round": {
                "description": "The round of the Formula 1 season.",
                "type": "str",
                "default": "round"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "oldsort",
        "description": "Fetches and sorts data from the oldsort endpoint using the given RapidAPI host and key.",
        "parameters": {
            "host": {
                "description": "The host to be used in the request header. Defaults to 'www.mozzartbet.com.co'.",
                "type": "str",
                "default": "www.mozzartbet.com.co"
            },
            "referer": {
                "description": "The referer to be used in the request header. Defaults to 'https://www.mozzartbet.com.co/es'.",
                "type": "str",
                "default": "https://www.mozzartbet.com.co/es"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competition_image",
        "description": "Fetches the image associated with a given competition ID using the Soccerway RapidAPI service.",
        "parameters": {
            "competition_id": {
                "description": "The ID of the competition for which the image is requested.",
                "type": "int",
                "default": "8"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "bundesliga_standings",
        "description": "Fetches the Bundesliga standings for a given season using the provided RapidAPI key.",
        "parameters": {
            "season": {
                "description": "The specific season to fetch standings for (e.g., '2022'). If not provided, the current season standings will be fetched.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_game_statistics",
        "description": "Fetches statistics for a given game using the ViperScore RapidAPI.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier of the game for which the statistics are to be fetched.",
                "type": "str",
                "default": "9576185"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fixtures_and_results_by_team",
        "description": "Returns all fixtures and results for a given team by querying the \"rugby-live-data\" API.",
        "parameters": {
            "team_id": {
                "description": "The ID of the team for which to retrieve fixtures and results.",
                "type": "int",
                "default": "6167"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "channels_data",
        "description": "Fetches data from a specified TV channel for a given event using the provided RapidAPI key.",
        "parameters": {
            "channel_id": {
                "description": "The unique identifier for the TV channel.",
                "type": "int",
                "default": "2707"
            },
            "event_id": {
                "description": "The unique identifier for the event.",
                "type": "int",
                "default": "10253769"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "superoffer",
        "description": "Fetches the super offer data from the bet sports API.",
        "parameters": {
            "cookie": {
                "description": "Cookie string for the request header. Default is 'i18next=es;'.",
                "type": "str",
                "default": "i18next=es;"
            },
            "host": {
                "description": "Host string for the request header. Default is 'www.mozzartbet.com.co'.",
                "type": "str",
                "default": "www.mozzartbet.com.co"
            },
            "referer": {
                "description": "Referer string for the request header. Default is 'https://www.mozzartbet.com.co/es'.",
                "type": "str",
                "default": "https://www.mozzartbet.com.co/es"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "playerstatisticsseasons",
        "description": "Fetches the statistics for all seasons for a specific basketball player.",
        "parameters": {
            "is_id": {
                "description": "The ID of the player for whom the statistics are being retrieved.",
                "type": "int",
                "default": 846936
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_fixture",
        "description": "Fetches the full match list with periods and final scores for a given tournament.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament to retrieve the fixture for.",
                "type": "int",
                "default": "25"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "footballersbyname",
        "description": "Returns a list of footballers that match the given name using the Premier League Stats API.",
        "parameters": {
            "name": {
                "description": "The name of the footballer to search for.",
                "type": "str",
                "default": "Ryan Yates"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchdetails",
        "description": "Retrieve detailed information for a specific ice hockey match using the provided match ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the ice hockey match for which to retrieve details.",
                "type": "int",
                "default": 10745629
            }
        },
        "domain": "Sports"
    },
    {
        "name": "staffs_get_short_info",
        "description": "Fetch short information for one or more staff members given their IDs.",
        "parameters": {
            "ids": {
                "description": "Comma-separated list of staff IDs. Example: `60805,39208,17455`.",
                "type": "str",
                "default": "60805,39208,17455,38756,72819,48174"
            },
            "domain": {
                "description": "Specifies the domain. One of the following: `com`, `de`, `be`, `es`, `it`, `nl`, `pl`, `pt`, `com.tr`, `world`. Defaults to `de`.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamplayers",
        "description": "Retrieve the players for a specific baseball team using the team ID.",
        "parameters": {
            "is_id": {
                "description": "The team ID for which players need to be retrieved.",
                "type": "int",
                "default": 3633
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_info",
        "description": "Retrieves comprehensive information about a team, including player details, events, results, and more, using the VLR.gg team ID.",
        "parameters": {
            "teamid": {
                "description": "The team ID from VLR.gg for which information is being retrieved.",
                "type": "str",
                "default": "1001"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "under_over_analysis",
        "description": "Fetches the under/over score analysis and statistics for a specific basketball match.",
        "parameters": {
            "matchid": {
                "description": "The ID of the basketball match for which the analysis is to be fetched.",
                "type": "int",
                "default": "350279"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "event_data",
        "description": "Fetches event data for a given event ID using the Toolbench RapidAPI.",
        "parameters": {
            "event_id": {
                "description": "The unique identifier for the event.",
                "type": "int",
                "default": "10277254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "race_detail_info",
        "description": "Fetch detailed race information and odds comparator using the Race ID and RapidAPI key.",
        "parameters": {
            "id_race": {
                "description": "The unique identifier of the race to get details for.",
                "type": "str",
                "default": "207660"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getcompetitionsid",
        "description": "Fetches competition details by unique identifier from the list of televised football matches in Spain.",
        "parameters": {
            "is_id": {
                "description": "Unique identifier of the competition to be fetched.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "players",
        "description": "Fetches information about a PGA Tour player based on provided search parameters such as last name, first name, or player ID.",
        "parameters": {
            "lastname": {
                "description": "The last name of the player. Default is 'Morikawa'.",
                "type": "str, optional",
                "default": "Morikawa"
            },
            "playerid": {
                "description": "The ID of the player. Default is '50525'.",
                "type": "str, optional",
                "default": "50525"
            },
            "firstname": {
                "description": "The first name of the player. Default is 'Collin'.",
                "type": "str, optional",
                "default": "Collin"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "baseball_match_statistics",
        "description": "Fetches and returns statistics for a specified baseball match.",
        "parameters": {
            "match_id": {
                "description": "The unique identifier for the baseball match to retrieve statistics for.",
                "type": "str",
                "default": "9863520"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_players",
        "description": "Retrieves all players from all seasons using the Free NBA API.",
        "parameters": {
            "page": {
                "description": "The page number for pagination. Defaults to '0'.",
                "type": "str",
                "default": "0"
            },
            "per_page": {
                "description": "The number of results returned per call for pagination. Defaults to '25'.",
                "type": "str",
                "default": "25"
            },
            "search": {
                "description": "A string to filter players based on their name. For example, `search=\"davis\"` will return players that have 'davis' in their first or last name. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_info",
        "description": "Fetch detailed information about a specific tournament, including current season, stage structure (divisions, conferences, etc.), and country.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament to fetch information for.",
                "type": "int",
                "default": "25"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series_get_venues",
        "description": "Fetches and returns the venues associated with a specific series from the Cricbuzz API.",
        "parameters": {
            "seriesid": {
                "description": "The ID of the series for which to fetch the venues.",
                "type": "int",
                "default": "3718"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "top_athletes",
        "description": "Fetches the top athletes based on the provided parameters by making a request to the allscores API.",
        "parameters": {
            "langid": {
                "description": "The language id to use in the request.",
                "type": "int",
                "default": 1
            },
            "timezone": {
                "description": "The timezone name.",
                "type": "str",
                "default": "America/Chicago"
            },
            "limit": {
                "description": "The number of athletes to return.",
                "type": "int",
                "default": 10
            },
            "sporttype": {
                "description": "The sport type for which to fetch top athletes.",
                "type": "int",
                "default": 2
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fixtures_by_series",
        "description": "Fetches fixtures and results for a given cricket series using the RapidAPI service.",
        "parameters": {
            "series_id": {
                "description": "The unique identifier for the cricket series.",
                "type": "int",
                "default": "606"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_coupons_endpoint",
        "description": "Fetches daily AI-analyzed betting coupons with a high win rate from the specified endpoint.",
        "parameters": {
            "content_type": {
                "description": "The content type for the request header. Defaults to 'application/json'.",
                "type": "str",
                "default": "application/json"
            },
            "connection": {
                "description": "The connection type for the request header. Defaults to 'keep-alive'.",
                "type": "str",
                "default": "keep-alive"
            },
            "sort": {
                "description": "The sorting order for the betting coupons; use '-id' for ascending order. Defaults to '-id'.",
                "type": "str",
                "default": "-id"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "gettodaysforecast",
        "description": "Fetches today's surf forecast for a given spot using the Simple Surf Forecast API.",
        "parameters": {
            "spotid": {
                "description": "The unique identifier for the surf spot.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamdetails",
        "description": "Retrieves the details of a specific basketball team using the given team ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the team for which details are to be retrieved.",
                "type": "int",
                "default": 3436
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_recent_form",
        "description": "Fetches and returns the recent form of a sports team using the given team ID.",
        "parameters": {
            "team_id": {
                "description": "The ID of the team for which the recent form is to be retrieved.",
                "type": "int",
                "default": "2817"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "runner_up",
        "description": "Fetches the runner-up team data for the given identifying parameter from the NCAA Final Four API.",
        "parameters": {
            "identifier": {
                "description": "The identifier (e.g., year) to fetch the runner-up team data for.",
                "type": "str",
                "default": "1959"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_287_pereira_vs_adesanya_2_april_08_2023",
        "description": "Fetches the details of UFC 287: Pereira vs. Adesanya 2 held on April 08, 2023, including a range of information about each fighter.",
        "parameters": {
            "limit": {
                "description": "The number of results to retrieve. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "offset": {
                "description": "The number of results to skip. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "categorytournaments",
        "description": "Retrieves all handball tournaments by category using the given category ID.",
        "parameters": {
            "is_id": {
                "description": "The category ID for which you want to retrieve all tournaments.",
                "type": "int",
                "default": 71
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series_list_archives",
        "description": "Fetch archived series from the CricBuzz API based on the specified type and optional parameters for pagination and year.",
        "parameters": {
            "type": {
                "description": "The type of series to fetch. Must be one of the following: 'international', 'league', 'domestic', 'women'.",
                "type": "str",
                "default": "international"
            },
            "lastid": {
                "description": "For pagination purposes. Specify `None` to load the first page or provide the ID of the last item from the previous page.",
                "type": "int, optional",
                "default": ""
            },
            "year": {
                "description": "The year for which the series archives are to be fetched. Defaults to `None`.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "v4_sports",
        "description": "Returns a list of available sports and tournaments using the RapidAPI Odds API.",
        "parameters": {
            "all": {
                "description": "When True, includes all available sports. When excluded or False, only shows recently updated (in-season) sports. Default is None.",
                "type": "bool, optional",
                "default": "true"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getmatchbywinner",
        "description": "Retrieves all cricket matches won by the specified team from the IPL API.",
        "parameters": {
            "winner": {
                "description": "The name of the team to filter matches by. Defaults to 'Kolkata Knight Riders'.",
                "type": "str",
                "default": "Kolkata Knight Riders"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "daily_match_list_live",
        "description": "Fetches the list of daily live matches for a specific date within a \u00b17 days period.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve the match list. Format should be {dd/MM/yyyy}.",
                "type": "str",
                "default": "28/01/2021"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teammedia",
        "description": "Fetches media information for a specific baseball team using the given team ID.",
        "parameters": {
            "is_id": {
                "description": "The team ID for which to retrieve the media.",
                "type": "int",
                "default": 3633
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matches_get_leanback",
        "description": "Fetches leanback information for a given cricket match using the match ID.",
        "parameters": {
            "matchid": {
                "description": "The match ID obtained from endpoints such as \u2026/matches/list, \u2026/schedules/list, \u2026/series/get-matches, \u2026/teams/get-schedules, \u2026/teams/get-results, or \u2026/venues/get-matches.",
                "type": "int",
                "default": "40381"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "recent_unique_tournaments",
        "description": "Fetches the recent unique tournaments associated with a given team ID using the RapidAPI service.",
        "parameters": {
            "team_id": {
                "description": "The ID of the team for which recent unique tournaments are to be retrieved.",
                "type": "int",
                "default": "14486"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "result_statistics",
        "description": "Retrieves the result statistics of a specific match, including overall, home, and away filters, for the last 20 matches between the two teams.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match to retrieve statistics for.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "standings",
        "description": "Fetches and returns the standings for a specified season and competition.",
        "parameters": {
            "season_id": {
                "description": "The ID of the season for which the standings are to be fetched.",
                "type": "int",
                "default": "2020"
            },
            "comp_id": {
                "description": "The ID of the competition for which the standings are to be fetched.",
                "type": "int",
                "default": "1236"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions",
        "description": "Fetches information about football competitions using the Premier League Upcoming Matches API.",
        "parameters": {
            "abbr": {
                "description": "Abbreviation of the league (default is 'EN_PR').",
                "type": "str",
                "default": "EN_PR"
            },
            "name": {
                "description": "Name of the league (default is 'Premier League').",
                "type": "str",
                "default": "Premier League"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguepowerrankingrounds",
        "description": "Fetches the power ranking rounds for the specified tournament and season in a football league.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the tournament for which to retrieve the power ranking rounds.",
                "type": "int",
                "default": 16
            },
            "seasonid": {
                "description": "The season ID for which to retrieve the power ranking rounds.",
                "type": "int",
                "default": 41087
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagues",
        "description": "Retrieves a list of sports leagues using the provided RapidAPI key.",
        "parameters": {
            "lang": {
                "description": "Language code for the response (e.g., 'en' for English).",
                "type": "str",
                "default": "en"
            },
            "sp": {
                "description": "Sport identifier.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamnextmatches",
        "description": "Retrieve upcoming matches for a specific American Football team using its ID and page number.",
        "parameters": {
            "is_id": {
                "description": "ID of the team for which to retrieve upcoming matches.",
                "type": "int",
                "default": 4294
            },
            "page": {
                "description": "Zero-based page number for pagination of results.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournamentnextmainevents",
        "description": "This function retrieves the next main events for a specified MMA tournament using the Toolbench RapidAPI service.",
        "parameters": {
            "page": {
                "description": "Zero-based page number to retrieve.",
                "type": "int",
                "default": ""
            },
            "tournamentid": {
                "description": "Unique identifier for the MMA tournament.",
                "type": "int",
                "default": 19906
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_list_default",
        "description": "Retrieves the list of most popular competitions from the TransferMarket API for a specified domain.",
        "parameters": {
            "domain": {
                "description": "The domain for which to list competitions. Can be one of the following: 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', 'world'. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fixtures_by_team",
        "description": "Fetches upcoming and in-play fixtures for a given rugby team.",
        "parameters": {
            "team_id": {
                "description": "The ID of the rugby team for which to fetch fixtures.",
                "type": "int",
                "default": "9317"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchvotes",
        "description": "Fetches the votes for a specific baseball match using the given match ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the match for which to fetch votes.",
                "type": "int",
                "default": 9864379
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fight",
        "description": "Fetches details of a single fight by its ID using the Spectation Sports Events API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the fight to fetch details for.",
                "type": "int",
                "default": "728"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_goal_analysis_scoring_first",
        "description": "Provides the scoring first goal statistics for a given match within specific minute intervals (0-10, 11-20, 21-30, etc.).",
        "parameters": {
            "matchid": {
                "description": "The ID of the match for which to retrieve the scoring first goal statistics.",
                "type": "int",
                "default": "1456548"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_scorers",
        "description": "Fetches the list of current top scorers for a specified league and year.",
        "parameters": {
            "is_id": {
                "description": "The identifier for the league.",
                "type": "str",
                "default": "BUN"
            },
            "year": {
                "description": "The year for which the top scorers are being requested. Defaults to '2021'.",
                "type": "str, optional",
                "default": "2021"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_passing_data",
        "description": "Fetches passing data for NFL teams for a specified year and side (offense or defense).",
        "parameters": {
            "year": {
                "description": "The year for which the data is to be fetched. Should be between 1920 and the current year.",
                "type": "int",
                "default": "2021"
            },
            "side": {
                "description": "The year for which the data is to be fetched. Should be between 1920 and the current year.",
                "type": "str",
                "default": "offense"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamlastevents",
        "description": "Fetches the last events for a specific team using the MMA RapidAPI.",
        "parameters": {
            "page": {
                "description": "Zero-based page number to paginate through the events.",
                "type": "int",
                "default": ""
            },
            "is_id": {
                "description": "The ID of the team for which the last events are to be retrieved.",
                "type": "int",
                "default": 465171
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_boxscore",
        "description": "Fetches the live, detailed team and player statistics for a specified basketball match using the RapidAPI service.",
        "parameters": {
            "matchid": {
                "description": "The ID of the basketball match for which the statistics are to be retrieved.",
                "type": "int",
                "default": "350275"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_goal_analysis_goal_minutes",
        "description": "Analyzes the goal statistics of the teams in a specified match, broken down into specific minute intervals (e.g., 0-10, 11-20, etc.). The data is retrieved from the Soccer Match List or Fixture API endpoints within a -+7 days period from the match date.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match for which to retrieve goal statistics.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "goal_analysis_scoring_first_in_between",
        "description": "Fetches the scoring first goal statistics for a match within specified minute intervals.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match for which to fetch the scoring first goal statistics.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamtournaments",
        "description": "Retrieves the unique tournaments in which an Ice Hockey team has participated.",
        "parameters": {
            "is_id": {
                "description": "The ID of the team for which tournaments will be retrieved.",
                "type": "int",
                "default": 3682
            }
        },
        "domain": "Sports"
    },
    {
        "name": "attribute_overviews",
        "description": "Fetches attribute overviews for a given player using the SofaScores API.",
        "parameters": {
            "player_id": {
                "description": "The unique identifier for the player whose attribute overviews are to be retrieved.",
                "type": "int",
                "default": "12994"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "schedule_by_date",
        "description": "Fetches the event schedule for a given date and sport ID using the specified API key.",
        "parameters": {
            "date": {
                "description": "The date for which the event schedule is requested, in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2022-05-11"
            },
            "sport_id": {
                "description": "The ID of the sport for which the schedule is requested.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "baseball_league_rankings",
        "description": "Fetches and returns the baseball league standings for a given league ID.",
        "parameters": {
            "league_id": {
                "description": "The ID of the baseball league for which rankings are to be fetched. League IDs can be retrieved from the Baseball Live Matches endpoint.",
                "type": "str",
                "default": "41276"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_rozenstruik_vs_almeida_may_13_2023",
        "description": "Fetch details for UFC Fight Night: Rozenstruik vs. Almeida held on May 13, 2023.",
        "parameters": {
            "offset": {
                "description": "The number of records to skip before starting to return results.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of records to return.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getteams",
        "description": "Fetches NHL team data for a given season with optional expanded information.",
        "parameters": {
            "season": {
                "description": "The specific season to return team data for. Defaults to 20172018.",
                "type": "int, optional",
                "default": 20172018
            },
            "expand": {
                "description": "A parameter to expand the response with additional data, such as team rosters. Defaults to 'team.roster'.",
                "type": "str, optional",
                "default": "team.roster"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "list_of_archive_events",
        "description": "Fetch a list of archived sports events using pagination.",
        "parameters": {
            "sport_id": {
                "description": "The ID of the sport for which to fetch archived events.",
                "type": "int",
                "default": 1
            },
            "page_num": {
                "description": "The page number to fetch in the paginated results.",
                "type": "int",
                "default": 1
            },
            "league_ids": {
                "description": "The ID of the league to filter results by. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_team_statistics",
        "description": "Fetches and returns team statistics for a given football match.",
        "parameters": {
            "matchid": {
                "description": "The unique identifier of the match.",
                "type": "int",
                "default": "21587"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "multi_search",
        "description": "Performs a multi-search on Genius based on the given query, returning paginated results.",
        "parameters": {
            "q": {
                "description": "The search query string.",
                "type": "str",
                "default": ""
            },
            "per_page": {
                "description": "The number of results to return per request. Defaults to 3.",
                "type": "int, optional",
                "default": "3"
            },
            "page": {
                "description": "The number of results to return per request. Defaults to 3.",
                "type": "int, optional",
                "default": "1"
            },
            "text_format": {
                "description": "The format for text bodies related to the document. Can be one or more of `dom`, `plain`, `markdown`, and `html`, separated by commas. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fights",
        "description": "Fetches fights for either upcoming or previous events from the Spectation Sports Events API.",
        "parameters": {
            "outcome": {
                "description": "The outcome of the fights to filter by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "sport": {
                "description": "The type of sport to filter the fights by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "type": {
                "description": "The type of fights to fetch (e.g., 'upcoming' or 'previous'). Defaults to 'upcoming'.",
                "type": "str, optional",
                "default": "upcoming"
            },
            "category": {
                "description": "The category or weight division of the fights. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "event": {
                "description": "The ID of the event to fetch fights for. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "page": {
                "description": "The page number of results to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "fighter": {
                "description": "The ID of the fighter to fetch fights for. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_standings_short",
        "description": "Fetch the team standings based on the given team ID.",
        "parameters": {
            "timezone": {
                "description": "Time offset from UTC.",
                "type": "int",
                "default": "0"
            },
            "locale": {
                "description": "The locale code to localize the response.",
                "type": "str",
                "default": "EN"
            },
            "team_id": {
                "description": "The unique identifier for the team.",
                "type": "int",
                "default": "12633"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "event_details",
        "description": "Fetch the details and history odds of a specified event using the Pinnacle Odds API.",
        "parameters": {
            "event_id": {
                "description": "The unique identifier for the event.",
                "type": "int",
                "default": 1419211461
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_get_results",
        "description": "Retrieve match results for a given team ID from the Unofficial Cricbuzz API.",
        "parameters": {
            "teamid": {
                "description": "The unique identifier for the team whose match results are to be retrieved.",
                "type": "int",
                "default": "2"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "provider2_live_match_id",
        "description": "Fetches live match details from the provider2 API for a given match ID.",
        "parameters": {
            "is_id": {
                "description": "The match ID for which to fetch the live details.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "playerdetails",
        "description": "Fetches the details of a specific E-Sports player by their player ID using the provided API key.",
        "parameters": {
            "is_id": {
                "description": "The ID of the player for which to retrieve the details.",
                "type": "int",
                "default": 1078255
            }
        },
        "domain": "Sports"
    },
    {
        "name": "daily_predictions",
        "description": "Fetches daily football predictions using various filters and pagination support.",
        "parameters": {
            "league": {
                "description": "The league identifier for filtering predictions. Example: '1'.",
                "type": "str, optional",
                "default": ""
            },
            "page": {
                "description": "The page number for pagination. Example: '1'.",
                "type": "str, optional",
                "default": "1"
            },
            "market": {
                "description": "The market type for filtering predictions. Example: '1X2', 'OU25', 'bts'.",
                "type": "str, optional",
                "default": ""
            },
            "date": {
                "description": "The date for filtering predictions in the format 'YYYY-MM-DD'. Example: '2022-08-13'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_transfers",
        "description": "Retrieves all incoming and outgoing transfers for a specified team.",
        "parameters": {
            "teamid": {
                "description": "The identifier of the team for which to retrieve transfer data.",
                "type": "str",
                "default": "17"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "game_odds_by_category_schedule",
        "description": "Fetches the schedule of game odds for a given sport and category from the sportsbook-odds API.",
        "parameters": {
            "category": {
                "description": "The category of the odds. For example, 0 for moneylines, 1 for spreads, 2 for over/under, etc.",
                "type": "str",
                "default": "0"
            },
            "sport": {
                "description": "The sport for which to fetch the game odds schedule.",
                "type": "str",
                "default": "Baseball"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "wnba_standings",
        "description": "Fetches the WNBA team standings for a given year, with optional grouping.",
        "parameters": {
            "year": {
                "description": "The year for which the standings are to be fetched.",
                "type": "str",
                "default": "2022"
            },
            "group": {
                "description": "The group name for standings, either 'league' or 'conference'. Defaults to 'league'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "clubs",
        "description": "Retrieves information about clubs participating in the First Premier League Competition.",
        "parameters": {
            "abbr": {
                "description": "The abbreviation of the club. Default is 'ARS'.",
                "type": "str",
                "default": "ARS"
            },
            "name": {
                "description": "The name of the club. Default is 'Arsenal'.",
                "type": "str",
                "default": "Arsenal"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchstreakodds",
        "description": "Fetch odds data related to streaks for a specific football match using its ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the match for which the streaks odds data is to be retrieved.",
                "type": "int",
                "default": 10114139
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_matches_by_date",
        "description": "Retrieves all matches for a specified tournament on a given date using the Tennis Live Data API.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve the matches, formatted as 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2020-01-06"
            },
            "tournament_id": {
                "description": "The ID of the tournament.",
                "type": "int",
                "default": "1143"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_stats",
        "description": "Fetches team statistics for the NBA. By default, it provides stats for the current league year. Optionally, you can supply a specific `leagueyear` or `team` to get results for those parameters.",
        "parameters": {
            "leagueyear": {
                "description": "The league year for which to fetch team stats. Defaults to None, which retrieves stats for the current league year.",
                "type": "str, optional",
                "default": ""
            },
            "team": {
                "description": "The team for which to fetch stats. Defaults to None, which retrieves stats for all teams.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ranking_current",
        "description": "Retrieves the current ranking from the SofaScores API using the given ranking type and RapidAPI key.",
        "parameters": {
            "ranking": {
                "description": "The type of ranking to retrieve.",
                "type": "str",
                "default": "fifa"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_picks",
        "description": "Retrieves the NHL PickCenter data for a specified game using the NHL API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the NHL game for which PickCenter data is requested.",
                "type": "str",
                "default": "401458986"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "constructors_standings",
        "description": "Retrieve constructor standings for a specified F1 championship year.",
        "parameters": {
            "year": {
                "description": "The year of the F1 championship to retrieve standings for. Defaults to 2005.",
                "type": "int, optional",
                "default": "2005"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tour_rankings",
        "description": "Fetches the player rankings for a specific golf tour and season.",
        "parameters": {
            "tour_id": {
                "description": "The identifier for the particular golf tour.",
                "type": "int",
                "default": "2"
            },
            "season": {
                "description": "The year representing the season of the golf tour.",
                "type": "int",
                "default": "2021"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_win_data",
        "description": "Returns the win/loss data for all NFL teams for a specified year.",
        "parameters": {
            "year": {
                "description": "The year for which to retrieve the win/loss data. Must be between 1920 and the current year.",
                "type": "int",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "data_country",
        "description": "Fetch data related to sports odds based on the provided parameters.",
        "parameters": {
            "package": {
                "description": "The package to use in the query string.",
                "type": "str",
                "default": "4a788ec11cd42226e2fdcbd62253379c"
            },
            "typeodds": {
                "description": "The type of odds (e.g., 'line', 'live').",
                "type": "str",
                "default": "line"
            },
            "sportid": {
                "description": "The ID of the sport (e.g., 1, 2, 3) or 0 for all sports.",
                "type": "int",
                "default": "1"
            },
            "langodds": {
                "description": "The language for the odds (e.g., 'en', 'ru', 'fr').",
                "type": "str",
                "default": "en"
            },
            "typeparams": {
                "description": "The type of parameters (e.g., 'sports', 'countries', 'tournaments').",
                "type": "str",
                "default": "countries"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_live_games",
        "description": "Fetches the list of all live games for a given sport along with their current status and score using the ViperScore API.",
        "parameters": {
            "sport": {
                "description": "The type of sport for which to retrieve live games (e.g., 'football', 'basketball').",
                "type": "str",
                "default": "football"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getlivenow",
        "description": "Fetches live sports betting data from the specified API.",
        "parameters": {
            "skinname": {
                "description": "The name of the skin to filter the live data (default is 'betbiga').",
                "type": "str",
                "default": "betbiga"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "premier_league_standings",
        "description": "Fetches the Premier League standings data for a given season using the RapidAPI Premier League Standings API.",
        "parameters": {
            "season": {
                "description": "The season for which the standings are to be retrieved, specified as a string (e.g., '2022'). If not provided, the current season's standings will be fetched.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_play_by_play",
        "description": "Fetch the NHL game play-by-play data for a specified game.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the NHL game.",
                "type": "str",
                "default": "401458986"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_schedules",
        "description": "Retrieves NHL schedule data for a specified date.",
        "parameters": {
            "day": {
                "description": "The day of the desired schedule in 'DD' format.",
                "type": "str",
                "default": "11"
            },
            "month": {
                "description": "The month of the desired schedule in 'MM' format.",
                "type": "str",
                "default": "05"
            },
            "year": {
                "description": "The year of the desired schedule in 'YYYY' format.",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "racecards",
        "description": "Fetches the list of races for a given date from the Greyhound Racing UK API.",
        "parameters": {
            "date": {
                "description": "The date for which to fetch the racecards in 'YYYY-MM-DD' format. Defaults to '2021-06-05' if not provided.",
                "type": "str",
                "default": "2021-06-05"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_player_details",
        "description": "Retrieves player details based on the provided username and region.",
        "parameters": {
            "name": {
                "description": "The username of the player. This is case sensitive.",
                "type": "str",
                "default": "CoreJJ"
            },
            "region": {
                "description": "The region of the player.",
                "type": "str",
                "default": "na"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchmanagers",
        "description": "Retrieve the managers for a specific Ice Hockey match using the match ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the match for which to retrieve managers.",
                "type": "int",
                "default": 10745761
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_details_by_id",
        "description": "Retrieves match details for a given Match ID using the RapidAPI endpoint. Match IDs can be obtained through the Matches List endpoint, including live matches and those played since 1990.",
        "parameters": {
            "match_id": {
                "description": "The unique identifier for a specific match.",
                "type": "str",
                "default": "2022-34-INTROM"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "form",
        "description": "Retrieve the pregame team form data for a given event using the SofaSport API.",
        "parameters": {
            "event_id": {
                "description": "The ID of the event for which to retrieve the team form.",
                "type": "int",
                "default": "10236820"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_matches_on_a_specific_date",
        "description": "Fetches the matches scheduled on a specific date, considering the provided UTC offset.",
        "parameters": {
            "date": {
                "description": "The date for which to query the matches, in the format 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2022-11-22"
            },
            "utc_offset": {
                "description": "The UTC offset to cater to the required timezone. Default is 8. Must be between -12 to 14.",
                "type": "int, optional",
                "default": "8"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ideal_weight",
        "description": "Calculate the ideal weight based on gender and height using four different well-known equations (Hamwi, Devine, Miller, Robinson).",
        "parameters": {
            "gender": {
                "description": "The gender of the individual ('male' or 'female').",
                "type": "str",
                "default": "male"
            },
            "height": {
                "description": "The height of the individual in centimeters.",
                "type": "int",
                "default": "180"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_list",
        "description": "Fetches a list of cricket teams based on the specified type from the Cricbuzz API.",
        "parameters": {
            "type": {
                "description": "The type of teams to list. Valid options are `international`, `league`, `domestic`, or `women`.",
                "type": "str",
                "default": "international"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "major_league_soccer_standings",
        "description": "Fetches the Major League Soccer standings for a given season using the RapidAPI service.",
        "parameters": {
            "season": {
                "description": "The season year for which to retrieve standings. Defaults to None, in which case the latest season's standings are fetched.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_holloway_vs_allen_april_15_2023",
        "description": "Fetch details about UFC Fight Night: Holloway vs. Allen held on April 15, 2023.",
        "parameters": {
            "limit": {
                "description": "The number of records to return. Default is None.",
                "type": "int, optional",
                "default": ""
            },
            "offset": {
                "description": "The number of records to skip before starting to return results. Default is None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "last_year_summary",
        "description": "Retrieve the last year's performance summary for a given player using the RapidAPI service.",
        "parameters": {
            "player_id": {
                "description": "The ID of the player whose summary is to be retrieved.",
                "type": "int",
                "default": "12994"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_get_short_info",
        "description": "Fetches short information about one or more competitions based on the provided IDs and domain from the TransferMarket API.",
        "parameters": {
            "ids": {
                "description": "The IDs of the competitions to fetch information for. Multiple IDs should be separated by commas (e.g., 'L1,L2,L3,GB1,ES1,IT1').",
                "type": "str",
                "default": "L1,L2,L3,GB1,ES1,IT1,TR1,FR1,NL1,A1,C1,MLS1"
            },
            "domain": {
                "description": "The domain for the request, which can be one of 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', or 'world'. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "laliga_standings",
        "description": "Fetches the standings for LaLiga for a given season.",
        "parameters": {
            "season": {
                "description": "The season to retrieve the standings for, e.g., '2022'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_statistics_quarter_analysis",
        "description": "Fetches and returns the seasonal quarter analysis and statistics for a specific basketball team using the RapidAPI.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team for which the analysis and statistics are to be retrieved.",
                "type": "int",
                "default": "1442"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "game",
        "description": "Fetch details of a specific baseball game using its game ID.",
        "parameters": {
            "gamepk": {
                "description": "The unique identifier for the baseball game.",
                "type": "str",
                "default": "633282"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series",
        "description": "Fetches details about a series and its episodes from the specified API.",
        "parameters": {
            "series_slug": {
                "description": "The unique identifier slug for the series.",
                "type": "str",
                "default": ""
            },
            "is_id": {
                "description": "The ID associated with the series.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series_get_players",
        "description": "Fetches the list of players in a given squad for a specified series.",
        "parameters": {
            "seriesid": {
                "description": "The ID of the series. This value is obtained from the endpoints /series/list or /series/list-archives.",
                "type": "int",
                "default": "3718"
            },
            "squadid": {
                "description": "The ID of the squad. This value is obtained from the endpoint /series/get-squads.",
                "type": "int",
                "default": "12021"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "results_by_date",
        "description": "Fetches cricket match results for a specified date using the RapidAPI service.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve cricket match results, in YYYY-MM-DD format.",
                "type": "str",
                "default": "2020-09-20"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_song_vs_simon_april_28_2023",
        "description": "Fetches fight details for UFC Fight Night: Song vs. Simon held on April 28, 2023.",
        "parameters": {
            "offset": {
                "description": "The number of records to skip before starting to collect the result set. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of records to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "player_stats_by_id_and_year",
        "description": "Retrieves official updated statistics for a given WTA (Women's Tennis Association) player for a specified year. The data is fetched from the Ultimate Tennis API.",
        "parameters": {
            "player_id": {
                "description": "The unique identifier for the WTA player. The ID can be retrieved from the Official WTA Players Rankings endpoint.",
                "type": "str",
                "default": "326408"
            },
            "year": {
                "description": "The year for which to retrieve the player's statistics (e.g., 2022, 2021).",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "headtoheadmatches",
        "description": "Fetches head-to-head match data for a specific E-Sports event using the provided custom ID.",
        "parameters": {
            "customid": {
                "description": "The custom ID of the E-Sports event for which head-to-head match data is required.",
                "type": "str",
                "default": "jTVcsXcZc"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "event_managers",
        "description": "Fetch team managers by event ID using the Sofasport API.",
        "parameters": {
            "event_id": {
                "description": "The ID of the event for which to retrieve managers.",
                "type": "int",
                "default": "10236820"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "list_of_leagues",
        "description": "Fetches a list of leagues for a given sport using the provided RapidAPI key.",
        "parameters": {
            "sport_id": {
                "description": "The ID of the sport for which to fetch the leagues.",
                "type": "int",
                "default": 1
            }
        },
        "domain": "Sports"
    },
    {
        "name": "v4_sports_sport_odds",
        "description": "Fetches a list of live and upcoming games for a given sport, displaying bookmaker odds for the specified regions and markets.",
        "parameters": {
            "sport": {
                "description": "The sport key for which to return games and odds. If `sport` is set to 'upcoming', it will return the next 8 upcoming games across all sports and any live games.",
                "type": "str",
                "default": "upcoming"
            },
            "regions": {
                "description": "Comma-delimited list of regions to determine which bookmakers appear in the response. Each region will count as 1 request against the usage quota for each market.",
                "type": "str",
                "default": "us"
            },
            "oddsformat": {
                "description": "Format of the returned odds. Defaults to 'decimal'.",
                "type": "str, optional",
                "default": "decimal"
            },
            "markets": {
                "description": "Comma-delimited list of odds markets to return. Defaults to 'h2h,spreads'. Note that each market counts as 1 request against the usage quota.",
                "type": "str, optional",
                "default": "h2h,spreads"
            },
            "dateformat": {
                "description": "Format of the returned timestamps. Can be 'iso' (ISO8601) or 'unix' timestamp (seconds since epoch). Defaults to 'iso'.",
                "type": "str, optional",
                "default": "iso"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "bet365_upcoming_events",
        "description": "Retrieves upcoming sports events from Bet365 based on the given parameters.",
        "parameters": {
            "sport_id": {
                "description": "The ID of the sport to get upcoming events for.",
                "type": "int",
                "default": ""
            },
            "day": {
                "description": "The specific day to get events for. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "league_id": {
                "description": "The ID of the league to filter events. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "page": {
                "description": "The page number for pagination. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getfavouriteschamps",
        "description": "Fetches the favorite champions data from the specified RapidAPI endpoint.",
        "parameters": {
            "skinname": {
                "description": "The skin name to include in the query parameters. Defaults to 'betbiga'.",
                "type": "str, optional",
                "default": "betbiga"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "query_horses",
        "description": "Queries horses by name using the Horse Racing API and returns the results.",
        "parameters": {
            "name": {
                "description": "The name of the horse to search for. Must be a minimum of 3 characters.",
                "type": "str",
                "default": "ZANAHIYR"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "prediction",
        "description": "Predict the next periods of a time series using given dates and values.",
        "parameters": {
            "periods": {
                "description": "Number of future periods to predict.",
                "type": "int",
                "default": "1"
            },
            "values": {
                "description": "Historical values of the time series data in a comma-separated string.",
                "type": "str",
                "default": "[281.5,244.8,382.1]"
            },
            "dates": {
                "description": "Corresponding dates of the historical values in a comma-separated string.",
                "type": "str",
                "default": "['2023-01-01', '2023-01-02', '2023-01-03'] "
            }
        },
        "domain": "Sports"
    },
    {
        "name": "raceresult",
        "description": "Fetches the result for a specific Formula 1 race in a given season.",
        "parameters": {
            "round": {
                "description": "The round number or name of the race in the F1 season.",
                "type": "str",
                "default": "round"
            },
            "year": {
                "description": "The year of the F1 season.",
                "type": "str",
                "default": "year"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_vettori_vs_cannonier_june_17_2023",
        "description": "Accesses information about the UFC Fight Night: Vettori vs. Cannonier held on June 17, 2023, including details like win-loss record, height, weight, reach, and age of the fighters. The function retrieves this data from the MMA Stats API.",
        "parameters": {
            "offset": {
                "description": "The starting point for the range of data to fetch. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of records to fetch. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueplayersstatistics",
        "description": "Fetches player statistics for a specific Football league and season based on the given parameters.",
        "parameters": {
            "limit": {
                "description": "Number of players to include per page.",
                "type": "int",
                "default": 20
            },
            "page": {
                "description": "One-based page number.",
                "type": "int",
                "default": 1
            },
            "seasonid": {
                "description": "ID of the season to retrieve player statistics for.",
                "type": "int",
                "default": 36886
            },
            "tournamentid": {
                "description": "Unique ID of the tournament to retrieve player statistics for.",
                "type": "int",
                "default": 7
            },
            "minapps": {
                "description": "If set to True, only includes players with a minimum number of appearances.",
                "type": "bool, optional",
                "default": ""
            },
            "order": {
                "description": "Sorting order of the response properties. Default is '-rating'. Prefix with '-' for descending order, leave as is for ascending.",
                "type": "str, optional",
                "default": "-rating"
            },
            "filters": {
                "description": "Filters to apply, such as player position, match type, appearances, age, preferred foot, team, and nationality. See the noisy docstring for detailed filter options.",
                "type": "str, optional",
                "default": ""
            },
            "accumulation": {
                "description": "Type of accumulation. Choices are 'total', 'perGame', or 'per90'. Default is 'total'.",
                "type": "str, optional",
                "default": "total"
            },
            "group": {
                "description": "Statistic group to retrieve. Choices are 'summary', 'attack', 'defence', 'passing', 'goalkeeper'. Default is 'summary'.",
                "type": "str, optional",
                "default": "summary"
            },
            "fields": {
                "description": "Specific fields to include, up to 6. Only used when not specifying a group. Field options include 'successfulDribblesPercentage', 'goals', 'blockedShots', etc.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournamentdetailsbyid",
        "description": "Retrieves tournament details using a unique tournament ID.",
        "parameters": {
            "uniquetournamentid": {
                "description": "The unique identifier for the tournament.",
                "type": "int",
                "default": "23"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "schedule_date",
        "description": "Fetches the baseball game schedule for a given date using the specified RapidAPI key.",
        "parameters": {
            "date": {
                "description": "The date in the format 'YYYY-MM-DD' for which to fetch the baseball schedule. Defaults to '2021-07-30'.",
                "type": "str",
                "default": "2021-07-30"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "live_fantasy_score",
        "description": "Fetches the live fantasy score for a specified cricket match.",
        "parameters": {
            "matchid": {
                "description": "The identifier for the match to fetch live scores.",
                "type": "str",
                "default": "1192"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matches_v2_get_pregame_form",
        "description": "Fetch pregame form information for competitors in a specified category and event ID.",
        "parameters": {
            "category": {
                "description": "The sport category, must be one of the following: 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.",
                "type": "str",
                "default": "soccer"
            },
            "eid": {
                "description": "The event ID, which is the value of the Eid field returned by endpoints such as .../matches/v2/list-by-league, .../matches/v2/list-by-date, .../matches/v2/list-live, or .../competitions/detail.",
                "type": "int",
                "default": "702093"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguelogoimage",
        "description": "Fetch the logo image for a specific Rugby league in PNG format using the given tournament ID and RapidAPI key.",
        "parameters": {
            "tournamentid": {
                "description": "The unique tournament ID for which to retrieve the league logo image.",
                "type": "int",
                "default": 294
            }
        },
        "domain": "Sports"
    },
    {
        "name": "section_list",
        "description": "Returns a list of sections from the RapidAPI sports score service.",
        "parameters": {
            "page": {
                "description": "Page number to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getspecialcompetitionview",
        "description": "Fetches the special competition view data from the RapidAPI service.",
        "parameters": {
            "referer": {
                "description": "The referer URL to include in the request headers. Default is 'https://www.mozzartbet.com.co/es'.",
                "type": "str",
                "default": "https://www.mozzartbet.com.co/es"
            },
            "host": {
                "description": "The host to include in the request headers. Default is 'www.mozzartbet.com.co'.",
                "type": "str",
                "default": "www.mozzartbet.com.co"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tennis_match_statistics",
        "description": "Fetches and returns statistics about a given tennis match identified by `match_id`.",
        "parameters": {
            "match_id": {
                "description": "The unique identifier for the tennis match.",
                "type": "str",
                "default": "10319698"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueseasoninfo",
        "description": "Fetches the season information of a specific Football league from the provided API.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the tournament to retrieve the season information from.",
                "type": "int",
                "default": 7
            },
            "seasonid": {
                "description": "The unique ID of the season to retrieve the season information from.",
                "type": "int",
                "default": 36886
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_score_board",
        "description": "Fetches the NHL scoreboard data for the specified date using the NHL API.",
        "parameters": {
            "day": {
                "description": "The day of the desired scoreboard data.",
                "type": "str",
                "default": "11"
            },
            "year": {
                "description": "The year of the desired scoreboard data.",
                "type": "str",
                "default": "2022"
            },
            "month": {
                "description": "The month of the desired scoreboard data.",
                "type": "str",
                "default": "05"
            },
            "limit": {
                "description": "The maximum number of results to return. Defaults to '5'.",
                "type": "str, optional",
                "default": "5"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "schedules_list",
        "description": "Fetches a list of scheduled matches based on the provided type and optional pagination information.",
        "parameters": {
            "type": {
                "description": "Type of schedule to fetch. One of the following: 'international', 'league', 'domestic', 'women'.",
                "type": "str",
                "default": "international"
            },
            "lasttime": {
                "description": "For paging purposes. Leave empty to load the first page, or provide an Epoch timestamp value in milliseconds (e.g., 1640883600000) to load the next page.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "stagesubstages",
        "description": "Retrieve all substages of a specific Motorsport stage using the RapidAPI.",
        "parameters": {
            "stageid": {
                "description": "The ID of the Motorsport stage for which to retrieve all substages.",
                "type": "int",
                "default": 203648
            }
        },
        "domain": "Sports"
    },
    {
        "name": "trainers_win_rate",
        "description": "Fetches trainers' win rate statistics from the past specified number of days.",
        "parameters": {
            "last_days": {
                "description": "The number of past days to consider for the statistics. Defaults to 7 days if not specified.",
                "type": "int",
                "default": "7"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fan_rating",
        "description": "Retrieve the fan rating for a given event using the event ID and an optional RapidAPI key.",
        "parameters": {
            "event_id": {
                "description": "The unique identifier for the event whose fan rating is to be retrieved.",
                "type": "int",
                "default": "10253769"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "list_of_markets",
        "description": "Fetches a list of markets based on the provided parameters. Initially, a snapshot call should be issued followed by delta calls to capture changes since the given `since` value. This function utilizes an API to return market data based on the various filters specified in the parameters.",
        "parameters": {
            "sport_id": {
                "description": "The ID of the sport for which markets data is requested.",
                "type": "int",
                "default": 1
            },
            "league_ids": {
                "description": "The ID of the league to filter the markets. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "event_type": {
                "description": "The type of event, either 'prematch' or 'live'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "event_ids": {
                "description": "The ID of the event to filter the markets. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "is_have_odds": {
                "description": "Indicates if only matches with open odds or future odds should be returned (True or False). Defaults to None.",
                "type": "bool, optional",
                "default": true
            },
            "since": {
                "description": "The UTC timestamp since when to fetch changes. Calls return changes since the provided `since` value. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagues_v2_get_table",
        "description": "Fetches the league table data for a specified category and competition using the RapidAPI service.",
        "parameters": {
            "ccd": {
                "description": "The Ccd field value obtained from the .../leagues/v2/list endpoint.",
                "type": "str",
                "default": "england"
            },
            "category": {
                "description": "The category of the sport. One of the following: 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.",
                "type": "str",
                "default": "soccer"
            },
            "scd": {
                "description": "The Scd field value obtained from the .../leagues/v2/list endpoint.",
                "type": "str",
                "default": "premier-league"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_roster",
        "description": "Fetches and returns the roster for a specified football team using the RapidAPI service.",
        "parameters": {
            "team": {
                "description": "The abbreviation of the football team (e.g., BUF, NE, MIA).",
                "type": "str",
                "default": "NE"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "footballersbyclub",
        "description": "Fetches a list of footballers for a specified club using the Premier League Stats API.",
        "parameters": {
            "club": {
                "description": "The name of the football club to retrieve the list of footballers for.",
                "type": "str",
                "default": "Arsenal"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguemedia",
        "description": "Fetches media content for a specified football tournament, including images and videos.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament for which you want to retrieve media.",
                "type": "int",
                "default": 7
            }
        },
        "domain": "Sports"
    },
    {
        "name": "areas_id",
        "description": "Fetches area details from the Zeus API using a given area ID.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the area to fetch details for.",
                "type": "str",
                "default": "ITA"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_detail",
        "description": "Fetch detailed information about a specific team using its team ID.",
        "parameters": {
            "teamid": {
                "description": "The unique identifier of the team for which details are needed. This ID can be obtained from various endpoints like /teams/search, /matches/detail, etc.",
                "type": "int",
                "default": "38"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "player_heatmap",
        "description": "Fetches the heatmap data for a specific player in a given season and tournament.",
        "parameters": {
            "player_id": {
                "description": "The unique identifier for the player.",
                "type": "int",
                "default": "12994"
            },
            "seasons_id": {
                "description": "The identifier for the specific season.",
                "type": "int",
                "default": "37167"
            },
            "unique_tournament_id": {
                "description": "The identifier for the specific tournament.",
                "type": "int",
                "default": "34"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "select_race_based_on_id",
        "description": "Fetches the details of a specific race using its ID from the F1 race schedule API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the race to fetch details for.",
                "type": "str",
                "default": "6141c76615d27e0de553b9d7"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamimage",
        "description": "Fetch the image in PNG format for a given team using the MMA RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "The ID of the team for which the image is being retrieved.",
                "type": "int",
                "default": 469994
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaderboard",
        "description": "Fetches leaderboard information for a given golf tournament, including player round details and live tournament status.",
        "parameters": {
            "tournament_id": {
                "description": "The unique identifier of the golf tournament.",
                "type": "int",
                "default": "25"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_market_statistics_points",
        "description": "Fetches the seasonal market points statistics for a specified basketball team.",
        "parameters": {
            "teamid": {
                "description": "The ID of the basketball team.",
                "type": "int",
                "default": "1442"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "eventdetails",
        "description": "Fetch information about a Mixed Martial Arts (MMA) event based on its ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the event to get information about.",
                "type": "int",
                "default": "11257051"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_goal_analysis_conceding_first",
        "description": "Retrieves statistics on the first goal conceded by teams in a specified match during different minute intervals throughout the match.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match for which to retrieve conceding-first goal statistics.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "basketball_search",
        "description": "Search for basketball players, teams, and tournaments using the provided term.",
        "parameters": {
            "term": {
                "description": "The search term used to look for players, teams, and tournaments.",
                "type": "str",
                "default": "kevin"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_get_tournaments",
        "description": "Retrieve the tournaments attended by a specific team.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team for which to retrieve tournament information.",
                "type": "int",
                "default": "38"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "sport_translations",
        "description": "Fetch sport translations for a given sport ID and language using the Pinaculo API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the sport for which translations are to be retrieved.",
                "type": "int",
                "default": 4
            },
            "lang": {
                "description": "The language code in which translations should be fetched.",
                "type": "str",
                "default": "pt-PT"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "national_team_statistics",
        "description": "Fetch the statistics of a national team player using their player ID.",
        "parameters": {
            "player_id": {
                "description": "Unique identifier for the player.",
                "type": "int",
                "default": "12994"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "statistics_esports",
        "description": "Fetches esports statistics for a given event using the RapidAPI service.",
        "parameters": {
            "event_id": {
                "description": "The identifier for the esports event.",
                "type": "int",
                "default": "10289011"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "wnba_box_score",
        "description": "Fetches the WNBA game box score data for a specified game.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the WNBA game.",
                "type": "str",
                "default": "401244185"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueshotactionsareasregularseason",
        "description": "Retrieve the shot actions areas for a specific basketball league tournament during the regular season.",
        "parameters": {
            "tournamentid": {
                "description": "The unique identifier for the tournament.",
                "type": "int",
                "default": 132
            },
            "seasonid": {
                "description": "The unique identifier for the season.",
                "type": "int",
                "default": 45096
            }
        },
        "domain": "Sports"
    },
    {
        "name": "daily_match_list_results",
        "description": "Retrieves the list of daily match results for ice hockey games from the RapidAPI service.",
        "parameters": {
            "date": {
                "description": "The date of the matches in the format {dd/MM/yyyy}. The match list data can only be retrieved for a period of \u00b17 days from the specified date.",
                "type": "str",
                "default": "28/01/2021"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_a_specific_team",
        "description": "Retrieves details of a specific basketball team from the Free-NBA API using the provided team ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the team to retrieve.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "transfers_list",
        "description": "Fetches a list of football player transfers based on various filter criteria.",
        "parameters": {
            "competitionid": {
                "description": "The ID of the competition. Should be obtained from the /search or /competitions/list endpoints. Do not use together with clubid.",
                "type": "str",
                "default": "IT1"
            },
            "positiongroup": {
                "description": "The position group of the players. Possible values are 'Abwehr', 'Mittelfeld', 'Sturm'.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of items per response for paging purposes. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            },
            "maxvalue": {
                "description": "The maximum market value of players. Example: 151000000.",
                "type": "int, optional",
                "default": ""
            },
            "positionid": {
                "description": "The position ID of the players. Possible values range from 1 to 14, each representing a specific player position.",
                "type": "int, optional",
                "default": ""
            },
            "clubid": {
                "description": "The ID of the club. Should be obtained from the /search or /clubs/list-by-competition endpoints. Do not use together with competitionid.",
                "type": "int, optional",
                "default": ""
            },
            "minvalue": {
                "description": "The minimum market value of players. Example: 9000000.",
                "type": "int, optional",
                "default": ""
            },
            "offset": {
                "description": "The offset for paging purposes. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            },
            "domain": {
                "description": "The domain for the request. Possible values are 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', and 'world'. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "bans_esports",
        "description": "Fetches the esports bans for a given event using the provided event ID.",
        "parameters": {
            "event_id": {
                "description": "The ID of the esports event to fetch bans for.",
                "type": "int",
                "default": "10289011"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "schools",
        "description": "Retrieves the number of schools in the tournament for a given year.",
        "parameters": {
            "identifier": {
                "description": "The identifier for the year of the tournament.",
                "type": "str",
                "default": "1959"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "player_data",
        "description": "Fetches player data from the sports API using the provided player ID.",
        "parameters": {
            "player_id": {
                "description": "The ID of the player whose data is to be fetched.",
                "type": "int",
                "default": "12994"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "listofallconstructorswithinaraceinayear",
        "description": "Fetches a list of all constructors for a specific race (round) within a given season (year).",
        "parameters": {
            "year": {
                "description": "The year of the Formula 1 season.",
                "type": "str",
                "default": "year"
            },
            "round": {
                "description": "The specific race (round) within the season.",
                "type": "str",
                "default": "round"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_pregame_form",
        "description": "Fetches pregame form information for a given game using the Viperscore API.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier of the game for which to fetch pregame form information.",
                "type": "str",
                "default": "9831832"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "food_names_and_ids",
        "description": "Fetches food table IDs for a specified sub-table in the food database using the RapidAPI service.",
        "parameters": {
            "subtablename": {
                "description": "The name of the sub-table whose IDs need to be fetched. Defaults to 'Fo1_2'.",
                "type": "str, optional",
                "default": "Fo1_2"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_statistics_goals",
        "description": "Fetches the goal statistics of a specified team in the tournament.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team for which to retrieve goal statistics.",
                "type": "int",
                "default": "803"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "fastest_laps_result",
        "description": "Retrieves information about the fastest laps in a specific Formula 1 race based on the given location and year.",
        "parameters": {
            "location": {
                "description": "The location of the race.",
                "type": "str",
                "default": "bahrain"
            },
            "year": {
                "description": "The year of the race.",
                "type": "int",
                "default": "2022"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "global_players_statistics",
        "description": "Fetch global statistics about tennis players based on the given season, category, and surface using the Ultimate Tennis RapidAPI.",
        "parameters": {
            "season": {
                "description": "The season to select. Pass the year (e.g., 2022, 2021) or 'all' for all-time rankings. The first year supported is 1991.",
                "type": "str",
                "default": "all"
            },
            "category": {
                "description": "The statistical category to retrieve. Available options include 'aces', '1stserve', 'returngameswon', 'breakpointsconverted', 'returnpointswon2ndserve', 'returnpointswon1stserve', '1stservepointswon', '2ndservepointswon', 'servicegameswon', 'breakpointsaved'.",
                "type": "str",
                "default": "aces"
            },
            "surface": {
                "description": "The surface type for the statistics. Available options are 'clay', 'grass', 'hard', or 'all' for all surfaces.",
                "type": "str",
                "default": "all"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_dern_vs_hill_may_20_2023",
        "description": "Fetch details of UFC Fight Night: Dern vs. Hill held on May 20, 2023.",
        "parameters": {
            "offset": {
                "description": "The starting point within the collection of resource results.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of resources to return from the collection.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_predictions_performance_statistics",
        "description": "Fetches the predictions performance statistics for a given query by making a request to the Daily Betting Tips API.",
        "parameters": {
            "q": {
                "description": "The query string to filter the predictions by date. The date format should be \"dd.MM.yyyy\".",
                "type": "str",
                "default": "23.12.2020"
            },
            "connection": {
                "description": "The connection type for the request. Defaults to 'keep-alive'.",
                "type": "str, optional",
                "default": "keep-alive"
            },
            "content_type": {
                "description": "The content type for the request. Defaults to 'application/json'.",
                "type": "str, optional",
                "default": "application/json"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "v4_sports_sport_scores",
        "description": "Returns a list of live and upcoming games for a given sport, including scores for live and recently completed games.",
        "parameters": {
            "sport": {
                "description": "The sport for which to return games and scores.",
                "type": "str",
                "default": "americanfootball_nfl"
            },
            "daysfrom": {
                "description": "The number of days in the past from which to return completed games. Valid values are integers from 1 to 3. Defaults to 3.",
                "type": "int, optional",
                "default": 3
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguelogo",
        "description": "Retrieves the logo image for an American Football league, given its unique tournament ID. The image is returned in PNG format.",
        "parameters": {
            "tournamentid": {
                "description": "The unique tournament ID of the league whose logo is to be retrieved.",
                "type": "int",
                "default": 9464
            }
        },
        "domain": "Sports"
    },
    {
        "name": "live_players_rankings",
        "description": "Retrieves live tennis rankings for a given number of players, including position, points, and information about the last match played in the current active tournament.",
        "parameters": {
            "n_player": {
                "description": "The number of players for which to retrieve the live rankings, with a maximum of 500.",
                "type": "str",
                "default": "50"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_standings",
        "description": "Fetches the standings for a given tournament from the League of Legends Esports API.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament for which standings are to be fetched.",
                "type": "str",
                "default": "103556720421148036"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "clubs_get_header_info",
        "description": "Fetches the header information of a club using the TransferMarket API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the club to fetch header information for.",
                "type": "int",
                "default": "631"
            },
            "domain": {
                "description": "The domain to use for the API request. Defaults to 'de'. Possible values include 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', and 'world'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_nba_betting_odds",
        "description": "Fetch NBA betting lines and odds from various online sportsbooks such as Fanduel, BetRivers, BetMGM, Caesars, and PointsBet.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier for a specific game. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "gamedate": {
                "description": "The date for which to retrieve betting odds, in the format YYYYMMDD. Defaults to '20230304'.",
                "type": "str, optional",
                "default": "20230304"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_matches",
        "description": "Retrieves the current matches for a specified league and season using the Zeus API.",
        "parameters": {
            "is_id": {
                "description": "The identifier for the league.",
                "type": "str",
                "default": "LI1"
            },
            "year": {
                "description": "The season year to retrieve matches for. Defaults to '2021'.",
                "type": "str, optional",
                "default": "2021"
            },
            "round": {
                "description": "The round number of the matches to retrieve. Defaults to '24'.",
                "type": "str, optional",
                "default": "24"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "list_of_periods",
        "description": "Retrieve a list of periods for a given sport ID from the Pinnacle Odds API.",
        "parameters": {
            "sport_id": {
                "description": "The ID of the sport for which to retrieve the periods.",
                "type": "int",
                "default": 1
            }
        },
        "domain": "Sports"
    },
    {
        "name": "ufc_fight_night_pavlovich_vs_blaydes_april_22_2023",
        "description": "Fetch details for UFC Fight Night: Pavlovich vs. Blaydes held on April 22, 2023, including information about fighters and fight results.",
        "parameters": {
            "offset": {
                "description": "The number of items to skip before starting to collect the result set. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of items to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "qualifying_results",
        "description": "Retrieve the qualifying results for a specific Formula 1 race based on the given year and location.",
        "parameters": {
            "year": {
                "description": "The year of the race.",
                "type": "int",
                "default": "2014"
            },
            "location": {
                "description": "The location of the race.",
                "type": "str",
                "default": "austria"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getmatchesbycity",
        "description": "Fetches all the cricket matches held in a specified city using the IPL API.",
        "parameters": {
            "city": {
                "description": "The name of the city to filter the cricket matches by.",
                "type": "str",
                "default": "Kolkata"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "eventlineups",
        "description": "Fetches the lineups for a specific E-Sports event using the provided event ID and RapidAPI key.",
        "parameters": {
            "is_id": {
                "description": "The ID of the E-Sports event for which the lineups are to be retrieved.",
                "type": "int",
                "default": 10945127
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueoveralltopplayers",
        "description": "Fetches the overall top players for a specific handball tournament and season.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the handball tournament for which the top players are to be retrieved.",
                "type": "int",
                "default": 149
            },
            "seasonid": {
                "description": "The ID of the season for which the top players are to be retrieved.",
                "type": "int",
                "default": 42967
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueoverallpergametopplayers",
        "description": "Retrieves the best players in a basketball league per game for a specific tournament and season.",
        "parameters": {
            "tournamentid": {
                "description": "The unique identifier for the tournament to retrieve the league's best players.",
                "type": "int",
                "default": 132
            },
            "seasonid": {
                "description": "The unique identifier for the season to retrieve the league's best players.",
                "type": "int",
                "default": 45096
            }
        },
        "domain": "Sports"
    },
    {
        "name": "gettspmatches",
        "description": "Retrieves TSP match data from the Betsports API.",
        "parameters": {
            "cookie": {
                "description": "Cookie string for the request headers, default is 'i18next=es;'.",
                "type": "str",
                "default": "i18next=es;"
            },
            "host": {
                "description": "Host string for the request headers, default is 'www.mozzartbet.com.co'.",
                "type": "str",
                "default": "www.mozzartbet.com.co"
            },
            "referer": {
                "description": "Referer string for the request headers, default is 'https://www.mozzartbet.com.co/es'.",
                "type": "str",
                "default": "https://www.mozzartbet.com.co/es"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "constructor_standings",
        "description": "Fetches the constructor standings for a given Formula 1 season.",
        "parameters": {
            "season_id": {
                "description": "The ID of the Formula 1 season for which to get the constructor standings.",
                "type": "int",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_team_players",
        "description": "Fetches the roster information for a specific NHL team using the RapidAPI endpoint.",
        "parameters": {
            "teamid": {
                "description": "The unique identifier for the NHL team whose roster information is to be fetched.",
                "type": "str",
                "default": "17"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_match_play_today_by_competitions",
        "description": "Retrieve all matches that are scheduled to be played today for a given competition by its ID.",
        "parameters": {
            "competition_id": {
                "description": "The ID of the competition for which to retrieve today's matches.",
                "type": "int",
                "default": "23943"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "nhl_standings",
        "description": "Retrieves the NHL standings for a specified year and group.",
        "parameters": {
            "year": {
                "description": "The year for which the NHL standings are to be retrieved.",
                "type": "str",
                "default": "2022"
            },
            "group": {
                "description": "The group by which to filter the standings. Acceptable values are 'league', 'conference', and 'division'. Defaults to 'league' if not specified.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchincidents",
        "description": "Fetches incidents for a specific Rugby match using the provided RapidAPI key.",
        "parameters": {
            "is_id": {
                "description": "The ID of the Rugby match for which to fetch incidents.",
                "type": "int",
                "default": 9945302
            }
        },
        "domain": "Sports"
    },
    {
        "name": "area_flag",
        "description": "Fetch the flag image URL for a given area ID using the Soccerway API.",
        "parameters": {
            "area_uid": {
                "description": "The unique identifier for the area.",
                "type": "str",
                "default": "1fk5l4hkqk12i7zske6mcqju6"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "news_from_individual_source",
        "description": "Fetches the latest news articles from a specified F1 news source using the RapidAPI.",
        "parameters": {
            "sourceid": {
                "description": "Identifier of the F1 news source (e.g., skyf1, BBCF1, WTF1, autosport).",
                "type": "str",
                "default": "f1"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matchstatistics",
        "description": "Returns statistics for a specific ice hockey match, including player statistics and other relevant data.",
        "parameters": {
            "is_id": {
                "description": "The ID of the match for which you want to retrieve statistics.",
                "type": "int",
                "default": 10745680
            }
        },
        "domain": "Sports"
    },
    {
        "name": "playerimage",
        "description": "Fetches the PNG image of an American Football player using their player ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the American Football player for which the image is to be retrieved.",
                "type": "int",
                "default": 853680
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matches_v2_get_commentary",
        "description": "Fetches the commentary for a match using the provided match ID.",
        "parameters": {
            "eid": {
                "description": "The match ID obtained from the .../matches/v2/list-by-league, .../matches/v2/list-by-date, .../matches/v2/list-live, or .../competitions/detail endpoints.",
                "type": "int",
                "default": "702193"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_specific_player",
        "description": "Retrieves information for a specific player from the NBA API using their player ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the player to retrieve.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_streaks",
        "description": "Fetches the streak data (winning, drawing, losing, etc.) of the two teams participating in a specific soccer match.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match for which streak data is to be retrieved.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_summary",
        "description": "Fetches and returns the summary information for a given soccer match.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match to fetch the summary for.",
                "type": "int",
                "default": "1456548"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "query_races",
        "description": "Queries horse races based on various filter criteria.",
        "parameters": {
            "order_by_date": {
                "description": "Results ordered by date of the race, either \"asc\" for ascending or \"desc\" for descending.",
                "type": "str, optional",
                "default": ""
            },
            "date_to": {
                "description": "Upper bound date for the races to be queried.",
                "type": "str, optional",
                "default": ""
            },
            "class_to": {
                "description": "Maximum race class.",
                "type": "int, optional",
                "default": ""
            },
            "distance_to": {
                "description": "Upper bound distance for the races to be queried.",
                "type": "str, optional",
                "default": ""
            },
            "distance_from": {
                "description": "Lower bound distance for the races to be queried.",
                "type": "str, optional",
                "default": ""
            },
            "id_horse": {
                "description": "Horse ID. If provided, the query searches for races where this horse has run.",
                "type": "int, optional",
                "default": ""
            },
            "course": {
                "description": "Racecourse name (e.g., Cheltenham, Ascot, Newmarket).",
                "type": "str, optional",
                "default": ""
            },
            "class_from": {
                "description": "Minimum race class.",
                "type": "int, optional",
                "default": ""
            },
            "page": {
                "description": "Page number for pagination.",
                "type": "int, optional",
                "default": ""
            },
            "date_from": {
                "description": "Lower bound date for the races to be queried.",
                "type": "str, optional",
                "default": ""
            },
            "name": {
                "description": "Minimum race class.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "bet365_result",
        "description": "Fetches the result of a bet365 event using the RapidAPI service.",
        "parameters": {
            "event_id": {
                "description": "The unique identifier for the bet365 event.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "driver_standings",
        "description": "Fetches and returns the driver standings for a given Formula 1 season.",
        "parameters": {
            "season_id": {
                "description": "The ID of the F1 season for which to retrieve driver standings.",
                "type": "int",
                "default": "2020"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_stats",
        "description": "Fetches the World of Tanks player stats including WN8, WN7, battles, victories, defeats, kills, draws, average tier, tanks spotted, and battles survived.",
        "parameters": {
            "name": {
                "description": "The name of the World of Tanks player for whom the stats are being requested.",
                "type": "str",
                "default": "PasiHD"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_teams",
        "description": "Retrieves all NBA teams for the current season from the free-nba API, with optional pagination.",
        "parameters": {
            "page": {
                "description": "The page number for pagination. Defaults to '0'.",
                "type": "str",
                "default": "0"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "head_to_head",
        "description": "Fetches and returns head-to-head statistics and previous encounters for the home and away team of an upcoming match.",
        "parameters": {
            "is_id": {
                "description": "The ID of the match to get statistics for.",
                "type": "int",
                "default": "81930"
            },
            "limit": {
                "description": "Limits the search to only X previous encounters. The default is 10, with a maximum of 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series_get_stats",
        "description": "Fetches statistical data for a given cricket series from the Cricbuzz API.",
        "parameters": {
            "seriesid": {
                "description": "The ID of the series for which statistics are to be retrieved. This ID is typically obtained from the series list or series list-archives endpoints.",
                "type": "int",
                "default": "3718"
            },
            "statstype": {
                "description": "The type of statistics to retrieve. This value is obtained from the series/get-stats-filter endpoint.",
                "type": "str",
                "default": "mostRuns"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_play_by_play",
        "description": "Retrieves live match events and scores for a given basketball match ID within a -+7 days period.",
        "parameters": {
            "matchid": {
                "description": "The ID of the basketball match.",
                "type": "int",
                "default": "350275"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "game_details",
        "description": "Fetches detailed information about a game using the provided parameters.",
        "parameters": {
            "timezone": {
                "description": "The name of the timezone for the game.",
                "type": "str",
                "default": "America/Chicago"
            },
            "gameid": {
                "description": "The unique identifier for the game.",
                "type": "int",
                "default": 3627363
            },
            "langid": {
                "description": "The language identifier.",
                "type": "int",
                "default": 1
            },
            "lastupdateid": {
                "description": "The identifier for the last update. Provides updated data if specified.",
                "type": "int, optional",
                "default": ""
            },
            "matchupid": {
                "description": "The identifier for the matchup.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_get_transfers",
        "description": "Fetches the transfer details for a specific team using the provided team ID.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team for which transfer details are to be fetched.",
                "type": "int",
                "default": "38"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_countries_by_sport",
        "description": "Fetches and returns a list of countries that support the specified sport.",
        "parameters": {
            "sport": {
                "description": "The name or ID of the sport for which to retrieve supporting countries.",
                "type": "str",
                "default": "ice-hockey"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "staffs_list_by_competition",
        "description": "Retrieves a list of staff members associated with a specific competition or league.",
        "parameters": {
            "is_id": {
                "description": "The ID value of the competition or league to retrieve staff members for.",
                "type": "str",
                "default": "GB1"
            },
            "domain": {
                "description": "The domain for the region, one of the following: com, de, be, es, it, nl, pl, pt, com.tr, or world. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueseasons",
        "description": "Fetches the seasons of a handball tournament given its unique tournament ID.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the tournament for which to retrieve the league's seasons.",
                "type": "int",
                "default": 149
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_general_game_information",
        "description": "Retrieves the most general information for a specified NBA game, including away team, home team, game date, and game start time. All times are in Eastern (ET) time zone.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier for the NBA game. This can be retrieved from calls like `getNBAGamesForDate` or `getNBATeamSchedule`.",
                "type": "str",
                "default": "20221202_CHI@GS"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "featuredtournamentsevents",
        "description": "Fetches featured events for a given unique tournament from the Sportify API.",
        "parameters": {
            "uniquetournamentid": {
                "description": "The unique identifier for the tournament whose featured events are to be fetched.",
                "type": "int",
                "default": "23"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "records",
        "description": "Fetches records data from the Goverlytics API based on various optional filtering criteria.",
        "parameters": {
            "limit": {
                "description": "The maximum number of records to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "offset": {
                "description": "The starting point in the list of records to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "substring": {
                "description": "A substring to search for within the records. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "speaker_id": {
                "description": "An ID representing a specific speaker. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "topic": {
                "description": "The topic to filter records by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "speaker_party": {
                "description": "The party affiliation of the speaker to filter by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "level_of_government": {
                "description": "The level of government to filter records by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "The region to filter records by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_get_squad",
        "description": "Retrieves the squad information for a specific team based on the given team ID.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team. This value is typically obtained from the 'id' field returned in various API endpoints such as /teams/search, /matches/detail, /tournaments/get-featured-events, /tournaments/get-scheduled-events, or /tournaments/get-top-teams.",
                "type": "int",
                "default": "38"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "series_get_points_table",
        "description": "Fetch the points table for a given series using the Cricbuzz API.",
        "parameters": {
            "seriesid": {
                "description": "The unique identifier of the cricket series for which the points table is to be fetched.",
                "type": "int",
                "default": "3718"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "game_predictions",
        "description": "Fetch game predictions using specified parameters.",
        "parameters": {
            "timezone": {
                "description": "The timezone name.",
                "type": "str",
                "default": "America/Chicago"
            },
            "langid": {
                "description": "The language ID.",
                "type": "int",
                "default": 1
            },
            "sport": {
                "description": "The sport ID.",
                "type": "int",
                "default": 1
            },
            "competitors": {
                "description": "The competitor ID, if applicable. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_schedule",
        "description": "Fetches the schedule of fixtures for a given soccer team across all tournaments it participates in.",
        "parameters": {
            "teamid": {
                "description": "The unique identifier of the soccer team.",
                "type": "int",
                "default": "803"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "athlete_trophy_stats",
        "description": "Retrieve the trophy statistics for a specified athlete in a specified competition.",
        "parameters": {
            "athleteid": {
                "description": "The unique identifier of the athlete.",
                "type": "int",
                "default": 1911
            },
            "competitionid": {
                "description": "The unique identifier of the competition.",
                "type": "int",
                "default": 5930
            },
            "timezone": {
                "description": "The timezone to be used for displaying results.",
                "type": "str",
                "default": "America/Chicago"
            },
            "langid": {
                "description": "The language id for the output.",
                "type": "int",
                "default": 1
            }
        },
        "domain": "Sports"
    },
    {
        "name": "athlete_large_image",
        "description": "Fetches the large image for a specific athlete in the PNG format.",
        "parameters": {
            "athleteid": {
                "description": "The ID of the athlete whose large image is to be fetched.",
                "type": "int",
                "default": 64139
            },
            "imageversion": {
                "description": "The version of the image to be fetched.",
                "type": "int",
                "default": 12
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matches_v2_list_by_league",
        "description": "Fetches and returns a list of matches for a specific league and category from the LiveScore API.",
        "parameters": {
            "category": {
                "description": "The category of the sport. One of the following: 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.",
                "type": "str",
                "default": "soccer"
            },
            "ccd": {
                "description": "The CCD value that is responded in .../leagues/v2/list or .../matches/v2/list-by-date endpoints.",
                "type": "str",
                "default": "champions-league"
            },
            "scd": {
                "description": "The SCD value that is responded in .../leagues/v2/list or .../matches/v2/list-by-date endpoints. Default is 'group-b'.",
                "type": "str, optional",
                "default": "group-b"
            },
            "timezone": {
                "description": "The timezone offset. One of the following: -11, -10, -9.5, -9, -8.5, -8, -7, -6, -5, -4.5, -4, -3.5, -3, -2.5, -2, -1, 0, 1, 2, 3, 3.5, 4, 4.5, 5, 5.5, 5.75, 6, 6.5, 6.75, 7, 7.5, 8, 8.5, 8.75, 9, 9.5, 9.75, 10, 10.5, 11, 11.5, 12, 12.5, 12.75, 13, 13.75, 14. Default is -7.",
                "type": "int, optional",
                "default": "-7"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "getlivemenustreaming",
        "description": "Fetches live menu streaming data from the specified API.",
        "parameters": {
            "skinname": {
                "description": "The name of the skin to use for the request. Defaults to 'betbiga'.",
                "type": "str, optional",
                "default": "betbiga"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "recent_match_list",
        "description": "Fetches the list of the last 20 matches between two teams for a given match ID.",
        "parameters": {
            "matchid": {
                "description": "The unique identifier for the match.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_team_receiving_data",
        "description": "Fetches receiving data for NFL teams for a given side (offense or defense) and year.",
        "parameters": {
            "side": {
                "description": "Specifies whether to fetch data for offensive or defensive teams. Must be either \"offense\" or \"defense\".",
                "type": "str",
                "default": "offense"
            },
            "year": {
                "description": "The year for which to fetch the data. Must be between 1920 and the current year.",
                "type": "int",
                "default": "2019"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "transfers_list_records",
        "description": "Fetches transfer records and player information for a given competition, position group, or club.",
        "parameters": {
            "competitionid": {
                "description": "The ID of the competition. Should not be used together with `clubid`.",
                "type": "str",
                "default": "IT1"
            },
            "positiongroup": {
                "description": "Filter for position group such as 'Abwehr', 'Mittelfeld', or 'Sturm'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "clubid": {
                "description": "The ID of the club. Should not be used together with `competitionid`. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "offset": {
                "description": "The number of records to skip for pagination. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of records to return per response. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            },
            "positionid": {
                "description": "Filter for specific positions such as 1 for Goalkeeper, 2 for Sweeper, etc. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "domain": {
                "description": "The domain of the API, such as 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', or 'world'. Defaults to 'de'.",
                "type": "str, optional",
                "default": "de"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "matches_v2_get_statistics",
        "description": "Fetches the statistics for a match based on the provided category and event ID (eid). ",
        "parameters": {
            "category": {
                "description": "The sport category of the match. Accepted values are 'soccer', 'cricket', 'basketball', 'tennis', or 'hockey'.",
                "type": "str",
                "default": "soccer"
            },
            "eid": {
                "description": "The event ID of the match. This is typically obtained from match listing or competition detail endpoints.",
                "type": "int",
                "default": "702093"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguerounds",
        "description": "Fetches the rounds for a specified handball tournament season using the Handball API.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the tournament for which the rounds are to be retrieved.",
                "type": "int",
                "default": 30
            },
            "seasonid": {
                "description": "The season ID for which the rounds are to be retrieved.",
                "type": "int",
                "default": 42851
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguetopplayersregularseason",
        "description": "Retrieves the top players for a specific league's regular season during a given season.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament for which the top players in the regular season are to be retrieved.",
                "type": "int",
                "default": 9464
            },
            "seasonid": {
                "description": "The ID of the season for which the top players in the regular season are to be retrieved.",
                "type": "int",
                "default": 36422
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagueeventsbyroundandslug",
        "description": "Fetches match details for a specified round and slug in a handball unique tournament season.",
        "parameters": {
            "slug": {
                "description": "The round slug.",
                "type": "str",
                "default": "quarterfinal"
            },
            "tournamentid": {
                "description": "The unique tournament ID for which to retrieve the league's events.",
                "type": "int",
                "default": 30
            },
            "round": {
                "description": "The round number.",
                "type": "int",
                "default": 27
            },
            "seasonid": {
                "description": "The season ID for which to retrieve the league's events.",
                "type": "int",
                "default": 42851
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournamentmetadata",
        "description": "Fetches metadata for a specific tournament using the provided unique tournament ID.",
        "parameters": {
            "uniquetournamentid": {
                "description": "The unique identifier for the tournament.",
                "type": "int",
                "default": "23"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "market_statistics_goals",
        "description": "Fetches market goal statistics for a given soccer match, including data on \"Both Teams to Score\", \"Under/Over\", and \"Total Goals\" for both teams involved.",
        "parameters": {
            "matchid": {
                "description": "The ID of the match for which to retrieve goal statistics.",
                "type": "int",
                "default": "1452254"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournamentrnkingsummary",
        "description": "Fetches the ranking summary for a specified tournament from the MMA API.",
        "parameters": {
            "tournamentid": {
                "description": "The unique identifier for the tournament whose ranking summary is to be retrieved.",
                "type": "int",
                "default": 19906
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teamlastmatches",
        "description": "Fetch the last matches for a specified cricket team using the RapidAPI cricket API.",
        "parameters": {
            "page": {
                "description": "The page number (starting from 0) of the last matches you want to retrieve.",
                "type": "int",
                "default": ""
            },
            "is_id": {
                "description": "The ID of the cricket team for which you want to retrieve the last matches.",
                "type": "int",
                "default": 187760
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competitions_details",
        "description": "Fetches the details of a competition based on the given competition ID.",
        "parameters": {
            "timezone": {
                "description": "Offset from UTC indicating the timezone.",
                "type": "int",
                "default": "0"
            },
            "competition_id": {
                "description": "Unique identifier for the competition.",
                "type": "int",
                "default": "65"
            },
            "locale": {
                "description": "Locale to use for the competition details.",
                "type": "str",
                "default": "EN"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "seasonal_advanced_team_statistics",
        "description": "Retrieves season-wide advanced team statistics for a basketball match, including home and away team filters.",
        "parameters": {
            "matchid": {
                "description": "The ID of the basketball match for which to retrieve the statistics.",
                "type": "int",
                "default": "335024"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "match_margins",
        "description": "Fetches the average match margin statistics for a given team using the provided RapidAPI key.",
        "parameters": {
            "teamid": {
                "description": "The ID of the team for which to fetch the match margin statistics.",
                "type": "int",
                "default": "1442"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "competition_details",
        "description": "Retrieve detailed information about a specific competition.",
        "parameters": {
            "competition": {
                "description": "The ID of the competition.",
                "type": "int",
                "default": 103
            },
            "langid": {
                "description": "The language ID for the response.",
                "type": "int",
                "default": 1
            },
            "timezone": {
                "description": "The timezone for the response.",
                "type": "str",
                "default": "America/Chicago"
            },
            "withseasons": {
                "description": "Whether to include season information. Defaults to None.",
                "type": "bool, optional",
                "default": true
            }
        },
        "domain": "Sports"
    },
    {
        "name": "scorecards",
        "description": "Fetches a scorecard for a given tournament, year, player, and optionally a round, providing shot-by-shot granularity.",
        "parameters": {
            "orgid": {
                "description": "Identifier for the organization (1 for PGA Tour, 2 for LIV Tour).",
                "type": "str",
                "default": ""
            },
            "year": {
                "description": "Year of the tournament.",
                "type": "str",
                "default": "2022"
            },
            "playerid": {
                "description": "Identifier for the player.",
                "type": "str",
                "default": "47504"
            },
            "tournid": {
                "description": "Identifier for the tournament.",
                "type": "str",
                "default": "475"
            },
            "roundid": {
                "description": "Identifier for the round. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "geteventtypes",
        "description": "Fetches event types data from the specified API using the provided skin name and RapidAPI key.",
        "parameters": {
            "skinname": {
                "description": "The name of the skin to include in the query string. Defaults to 'betbiga'.",
                "type": "str",
                "default": "betbiga"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguehomestandings",
        "description": "Retrieves home standings for a specified handball tournament and season.",
        "parameters": {
            "tournamentid": {
                "description": "The unique ID of the handball tournament.",
                "type": "int",
                "default": 149
            },
            "seasonid": {
                "description": "The ID of the season.",
                "type": "int",
                "default": 42967
            }
        },
        "domain": "Sports"
    },
    {
        "name": "tournament_standings",
        "description": "Fetches and returns the team rankings for a specific ice hockey tournament using the given tournament ID.",
        "parameters": {
            "tournamentid": {
                "description": "The ID of the tournament for which to fetch the standings.",
                "type": "int",
                "default": "6"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "localized_routes",
        "description": "Fetches localized routing data from the Betsport API.",
        "parameters": {
            "referer": {
                "description": "The referer URL to be included in the API request headers. Default is 'https://www.mozzartbet.com.co/es'.",
                "type": "str",
                "default": "https://www.mozzartbet.com.co/es"
            },
            "host": {
                "description": "The host to be included in the API request headers. Default is 'www.mozzartbet.com.co'.",
                "type": "str",
                "default": "www.mozzartbet.com.co"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_games",
        "description": "Retrieves a list of basketball games based on the given filters using the free-nba API.",
        "parameters": {
            "page": {
                "description": "The page number for pagination. Defaults to '0'.",
                "type": "str",
                "default": "0"
            },
            "per_page": {
                "description": "The number of results returned per call for pagination. Defaults to '25'.",
                "type": "str",
                "default": "25"
            },
            "team_ids": {
                "description": "A comma-separated string of team IDs to filter the games.",
                "type": "str, optional",
                "default": ""
            },
            "date": {
                "description": "A specific date to filter games, formatted as 'YYYY-MM-DD'.",
                "type": "str, optional",
                "default": ""
            },
            "seasons": {
                "description": "A comma-separated string of seasons represented by the starting year (e.g., '2018' for the 2018-2019 season).",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "bet365_prematch_odds",
        "description": "Fetches prematch odds from the Bet365 API using the provided fixture ID.",
        "parameters": {
            "fi": {
                "description": "Fixture ID for which to fetch the prematch odds.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leagues_v2_list",
        "description": "Fetches and returns a list of leagues by category from the LiveScore API.",
        "parameters": {
            "category": {
                "description": "Category of the sport. One of the following: soccer, cricket, basketball, tennis, hockey.",
                "type": "str",
                "default": "soccer"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "top_competitions",
        "description": "Fetches the top competitions from the AllScores API based on the specified parameters.",
        "parameters": {
            "timezone": {
                "description": "The name of the timezone to use for the request.",
                "type": "str",
                "default": "America/Chicago"
            },
            "langid": {
                "description": "The language ID for the response data.",
                "type": "int",
                "default": 1
            },
            "sport": {
                "description": "The identifier for the sport category.",
                "type": "int",
                "default": 1
            },
            "limit": {
                "description": "The maximum number of top competitions to return.",
                "type": "int",
                "default": 5
            }
        },
        "domain": "Sports"
    },
    {
        "name": "teams_coaches_teamids",
        "description": "Query baseball team coaches by team IDs using the RapidAPI baseball API.",
        "parameters": {
            "teamids": {
                "description": "A string representing one or more team IDs, separated by commas. Defaults to '145'.",
                "type": "str",
                "default": "145"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "list_of_special_markets",
        "description": "Fetches a list of special markets for a given sport. This involves making an initial snapshot call followed by delta calls based on changes since a specified 'since' parameter. It can filter by whether odds are available, specific leagues, event types, and event IDs.",
        "parameters": {
            "sport_id": {
                "description": "The ID of the sport for which to retrieve special markets.",
                "type": "int",
                "default": 1
            },
            "is_have_odds": {
                "description": "If specified, filters results to only include matches with available odds (True) or matches that will get odds in the future (False).",
                "type": "bool, optional",
                "default": true
            },
            "league_ids": {
                "description": "The ID of the league to filter results.",
                "type": "int, optional",
                "default": ""
            },
            "event_type": {
                "description": "The type of event to filter results, either 'prematch' or 'live'.",
                "type": "str, optional",
                "default": ""
            },
            "since": {
                "description": "The UTC timestamp from which to return changed data.",
                "type": "int, optional",
                "default": ""
            },
            "event_ids": {
                "description": "The ID of the event(s) to filter results.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_a_specific_game",
        "description": "Retrieves information for a specific game using the Free NBA API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the game to retrieve.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "leaguedetails",
        "description": "Retrieve the details of a specific Ice Hockey league using the provided tournament ID.",
        "parameters": {
            "tournamentid": {
                "description": "The unique identifier for the tournament whose details are to be retrieved.",
                "type": "int",
                "default": 234
            }
        },
        "domain": "Sports"
    },
    {
        "name": "team_squad",
        "description": "Fetch the list of players in a specified basketball team. Optionally, provide a tournament ID for national teams.",
        "parameters": {
            "teamid": {
                "description": "The ID of the basketball team.",
                "type": "int",
                "default": "1442"
            },
            "tournamentid": {
                "description": "The ID of the tournament. Required for national teams but optional for club teams.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "get_all_stats",
        "description": "Retrieves all basketball statistics based on the given query parameters.",
        "parameters": {
            "seasons": {
                "description": "A comma-separated string of seasons.",
                "type": "str, optional",
                "default": ""
            },
            "page": {
                "description": "The page number for pagination.",
                "type": "str, optional, default='0'",
                "default": "0"
            },
            "per_page": {
                "description": "The number of results per page for pagination.",
                "type": "str, optional, default='25'",
                "default": "25"
            },
            "player_ids": {
                "description": "A comma-separated string of player IDs.",
                "type": "str, optional",
                "default": ""
            },
            "dates": {
                "description": "A comma-separated string of dates formatted as 'YYYY-MM-DD'.",
                "type": "str, optional",
                "default": ""
            },
            "game_ids": {
                "description": "A comma-separated string of game IDs.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Sports"
    },
    {
        "name": "explore_competitions",
        "description": "Fetches a list of soccer competitions for a given area.",
        "parameters": {
            "area_id": {
                "description": "The ID of the area to retrieve competitions for.",
                "type": "int",
                "default": "68"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "best_players",
        "description": "Fetches the best players for a given event using the provided event ID.",
        "parameters": {
            "event_id": {
                "description": "The ID of the event for which the best players are needed.",
                "type": "int",
                "default": "10253769"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "gettopsportmenu",
        "description": "Fetches the top sport menu from the specified sportsbook API using provided skin name and RapidAPI key.",
        "parameters": {
            "skinname": {
                "description": "The skin name for the sportsbook. Defaults to 'betbiga'.",
                "type": "str",
                "default": "betbiga"
            }
        },
        "domain": "Sports"
    },
    {
        "name": "points",
        "description": "Fetches official FedExCup points earned per player for a given tournament ID and year.",
        "parameters": {
            "tournid": {
                "description": "The tournament ID for which to fetch the points.",
                "type": "str",
                "default": "475"
            },
            "year": {
                "description": "The year for which to fetch the points.",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Sports"
    }
]