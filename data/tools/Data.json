[
    {
        "name": "poor_backlinks",
        "description": "Fetch poor quality backlinks for a given domain using the Best Backlink Checker API.",
        "parameters": {
            "domain": {
                "description": "The domain for which to fetch the poor quality backlinks.",
                "type": "str",
                "default": "getecz.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_random_user",
        "description": "Fetch a random user profile based on specified criteria using the ai-random-user-generator API.",
        "parameters": {
            "results": {
                "description": "Number of user profiles to fetch. Default is '7'.",
                "type": "str",
                "default": "7"
            },
            "nation": {
                "description": "Nationality of the users. Default is 'en_US'.",
                "type": "str",
                "default": "en_US"
            },
            "gender": {
                "description": "Gender of the users. Default is 'female'.",
                "type": "str",
                "default": "female"
            }
        },
        "domain": "Data"
    },
    {
        "name": "company_search",
        "description": "Search for companies by name using the Indeed API.",
        "parameters": {
            "company_name": {
                "description": "The name of the company to search for.",
                "type": "str",
                "default": "Microsoft"
            },
            "locality": {
                "description": "Select the Indeed's country subdomain to search within. The default value is 'us'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "album_tracks",
        "description": "Fetches the tracks of a specified album from the Spotify API using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the album.",
                "type": "str",
                "default": "3IBcauSj5M2A6lTeffJzdv"
            },
            "offset": {
                "description": "The starting point for the track list. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of tracks to return. Defaults to 300.",
                "type": "int, optional",
                "default": "300"
            }
        },
        "domain": "Data"
    },
    {
        "name": "channel_shorts",
        "description": "Fetch the latest shorts published by a YouTube channel using the provided `channel_id` and RapidAPI key.",
        "parameters": {
            "channel_id": {
                "description": "The ID of the YouTube channel.",
                "type": "str",
                "default": "UCVhQ2NnY5Rskt6UjCUkJ_DA"
            }
        },
        "domain": "Data"
    },
    {
        "name": "location",
        "description": "Fetches the location and venue details of the NCAA Final Four event for a given identifier.",
        "parameters": {
            "identifier": {
                "description": "A unique identifier representing the year or specific event to retrieve location details for.",
                "type": "str",
                "default": "1952"
            }
        },
        "domain": "Data"
    },
    {
        "name": "video_comments",
        "description": "Fetches comments for a specified YouTube video using the RapidAPI service.",
        "parameters": {
            "cursor": {
                "description": "Cursor token for pagination.",
                "type": "str, optional",
                "default": ""
            },
            "gl": {
                "description": "Geolocation code. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "is_id": {
                "description": "YouTube video ID. Defaults to 'kJQP7kiw5Fk'.",
                "type": "str, optional",
                "default": "kJQP7kiw5Fk"
            },
            "hl": {
                "description": "Language code. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "estimated_salary",
        "description": "Fetch the estimated salary for a given job title within a specified radius around a particular location.",
        "parameters": {
            "location": {
                "description": "The geographic location to search within for the salary estimation.",
                "type": "str",
                "default": "New-York, NY, USA"
            },
            "job_title": {
                "description": "The job title for which the salary estimation is to be fetched.",
                "type": "str",
                "default": "NodeJS Developer"
            },
            "radius": {
                "description": "The radius in kilometers within which to search from the provided location. Default is 100 km.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandommovie",
        "description": "Returns a list of random movies from a database by calling an external API.",
        "parameters": {
            "count": {
                "description": "The number of random movies to return. Defaults to 2.",
                "type": "int, optional",
                "default": "2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "filter_and_query_naics_description",
        "description": "This function queries an endpoint to search by freeform text or NAICS code and retrieves a list of NAICS codes, hashes, and descriptions.",
        "parameters": {
            "naics": {
                "description": "A 6-digit NAICS code to filter the search. If this parameter is provided, the `q` parameter is optional.",
                "type": "int, optional",
                "default": "721110"
            },
            "q": {
                "description": "A freeform text to search for industries. This must be at least 3 characters long. If this parameter is provided, the `naics` parameter is optional.",
                "type": "str, optional",
                "default": "Hotel"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_results",
        "description": "Fetches the top 22 YouTube search results based on a provided query.",
        "parameters": {
            "query": {
                "description": "The search query string to use for retrieving YouTube search results.",
                "type": "str",
                "default": "interview preparation"
            }
        },
        "domain": "Data"
    },
    {
        "name": "v1_cars",
        "description": "Fetches car details from the API Ninjas Cars API endpoint based on given search criteria.",
        "parameters": {
            "model": {
                "description": "Model of the vehicle. Default is 'corolla'.",
                "type": "str, optional",
                "default": "corolla"
            },
            "max_city_mpg": {
                "description": "Maximum city fuel efficiency in miles per gallon.",
                "type": "int, optional",
                "default": ""
            },
            "min_comb_mpg": {
                "description": "Minimum combined (city + highway) fuel efficiency in miles per gallon.",
                "type": "int, optional",
                "default": ""
            },
            "max_hwy_mpg": {
                "description": "Maximum highway fuel efficiency in miles per gallon.",
                "type": "int, optional",
                "default": ""
            },
            "fuel_type": {
                "description": "Type of fuel used. Possible values include 'gas', 'diesel', 'electricity'.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "Number of results to return. Must be between 1 and 30. Default value is None.",
                "type": "str, optional",
                "default": ""
            },
            "drive": {
                "description": "Drive transmission. Possible values include 'fwd' (front-wheel drive), 'rwd' (rear-wheel drive), 'awd' (all-wheel drive), '4wd' (four-wheel drive).",
                "type": "str, optional",
                "default": ""
            },
            "max_comb_mpg": {
                "description": "Maximum combined (city + highway) fuel efficiency in miles per gallon.",
                "type": "int, optional",
                "default": ""
            },
            "make": {
                "description": "Vehicle manufacturer.",
                "type": "str, optional",
                "default": ""
            },
            "transmission": {
                "description": "Type of transmission. Possible values include 'manual', 'automatic'.",
                "type": "str, optional",
                "default": ""
            },
            "year": {
                "description": "Vehicle model year.",
                "type": "str, optional",
                "default": ""
            },
            "min_hwy_mpg": {
                "description": "Minimum highway fuel efficiency in miles per gallon.",
                "type": "int, optional",
                "default": ""
            },
            "min_city_mpg": {
                "description": "Minimum city fuel efficiency in miles per gallon.",
                "type": "int, optional",
                "default": ""
            },
            "cylinders": {
                "description": "Number of cylinders. Possible values include 2, 3, 4, 5, 6, 8, 10, 12, 16.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_profile_series",
        "description": "Fetches time series snapshots of a profile from the OutSystems Community API.",
        "parameters": {
            "profile_id": {
                "description": "The unique identifier of the profile for which the time series snapshots are to be fetched.",
                "type": "str",
                "default": "yjjslxnjng"
            }
        },
        "domain": "Data"
    },
    {
        "name": "consumers_detail",
        "description": "Get detailed information of a consumer using the RapidAPI TrustPilot endpoint.",
        "parameters": {
            "is_id": {
                "description": "The ID of the consumer, as returned from the `/business-units/get-reviews` endpoint.",
                "type": "str",
                "default": "5f9c424654404f0019fb19fc"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rental_settings",
        "description": "python",
        "parameters": {
            "location": {
                "description": "The location for which the rental settings are to be fetched.",
                "type": "str",
                "default": "santa monica"
            },
            "currency": {
                "description": "The currency in which the rental settings should be returned. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_breed_information",
        "description": "Fetch information about a specific cat breed from the Cat Breeds API.",
        "parameters": {
            "breed": {
                "description": "The name of the cat breed to fetch information for.",
                "type": "str",
                "default": "aegean"
            }
        },
        "domain": "Data"
    },
    {
        "name": "language_list",
        "description": "Fetches the list of valid languages for the given country using the Real Time News Data API.",
        "parameters": {
            "country": {
                "description": "The country code (ISO 3166-1 alpha-2) of the country to get languages for.",
                "type": "str",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "channel_videos",
        "description": "Fetches videos from a specified YouTube channel using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "YouTube channel ID, default is 'UC-lHJZR3Gqxm24_Vd_AJ5Yw'.",
                "type": "str",
                "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"
            },
            "hl": {
                "description": "Language parameter for the results, default is 'en'.",
                "type": "str",
                "default": "en"
            },
            "filter": {
                "description": "Filter key to determine the type of videos returned. Can be 'videos_latest', 'streams_latest', 'shorts_latest', or 'live_now'. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "cursor": {
                "description": "Cursor for pagination, default is None.",
                "type": "str, optional",
                "default": ""
            },
            "gl": {
                "description": "Geolocation parameter, default is 'US'.",
                "type": "str",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_info",
        "description": "Retrieve TikTok user information by username using the Toolbench RapidAPI.",
        "parameters": {
            "username": {
                "description": "The TikTok username of the user whose information is to be retrieved.",
                "type": "str",
                "default": "therock"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_search",
        "description": "Fetches Instagram users based on a given keyword.",
        "parameters": {
            "keyword": {
                "description": "The keyword to search for Instagram users.",
                "type": "str",
                "default": "insta"
            }
        },
        "domain": "Data"
    },
    {
        "name": "avatar",
        "description": "Generates an avatar with the initials derived from the given name and various customization options.",
        "parameters": {
            "name": {
                "description": "The name from which to derive the initials. Default is 'john doe'.",
                "type": "str, optional",
                "default": "john doe"
            },
            "rounded": {
                "description": "If True, the avatar will be rounded. Default is None.",
                "type": "bool, optional",
                "default": true
            },
            "uppercase": {
                "description": "If True, the initials will be in uppercase. Default is None.",
                "type": "bool, optional",
                "default": true
            },
            "font_size": {
                "description": "The font size of the initials, ranging from 0 to 1. Default is 0.",
                "type": "int, optional",
                "default": "0.5"
            },
            "length": {
                "description": "The number of initials to display. Default is 2.",
                "type": "int, optional",
                "default": "2"
            },
            "size": {
                "description": "The font size of the initials, ranging from 0 to 1. Default is 0.",
                "type": "int, optional",
                "default": "128"
            },
            "background": {
                "description": "The background color of the avatar in RRGGBB hex format. Default is '000000'.",
                "type": "str, optional",
                "default": "000000"
            },
            "color": {
                "description": "The color of the initials in RRGGBB hex format. Default is 'ffffff'.",
                "type": "str, optional",
                "default": "ffffff"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fish_api_fish_name",
        "description": "Fetch information for a specific fish from the Fish API.",
        "parameters": {
            "name": {
                "description": "Name of the fish to be found.",
                "type": "str",
                "default": "Tarpon"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getsamples",
        "description": "Fetches Power BI samples for a given page number using RapidAPI.",
        "parameters": {
            "page": {
                "description": "The page number of the samples to fetch.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "country_region_cities",
        "description": "Fetches a list of cities within a specified region of a given country from the GeoDB API.",
        "parameters": {
            "countryid": {
                "description": "An ISO-3166 country code or WikiData ID.",
                "type": "str",
                "default": "US"
            },
            "regioncode": {
                "description": "An ISO-3166 or FIPS region code.",
                "type": "str",
                "default": "CA"
            },
            "limit": {
                "description": "The maximum number of results to retrieve. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "hateoasmode": {
                "description": "Include HATEOAS-style links in results. Defaults to None.",
                "type": "bool, optional",
                "default": ""
            },
            "asciimode": {
                "description": "Display results using ASCII characters. Defaults to None.",
                "type": "bool, optional",
                "default": ""
            },
            "nameprefixdefaultlangresults": {
                "description": "Match on names in the default language if a non-default language is requested when prefix-matching. Defaults to None.",
                "type": "bool, optional",
                "default": ""
            },
            "timezoneids": {
                "description": "Only include cities in these time zones. Comma-separated values. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "nameprefix": {
                "description": "Only include cities whose names start with this prefix. If languagecode is set, the prefix will be matched on the name as it appears in that language. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "types": {
                "description": "Only include cities of these types (comma-separated): CITY, ADM2. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "minpopulation": {
                "description": "Only include cities with at least this population. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "languagecode": {
                "description": "Display results in this language. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "offset": {
                "description": "The zero-based offset into the results. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "maxpopulation": {
                "description": "Only include cities with no more than this population. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "includedeleted": {
                "description": "Whether to include any cities marked deleted. Options are: ALL, SINCE_YESTERDAY, SINCE_LAST_WEEK, NONE. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "sort": {
                "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = elevation, name, population. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "google_maps_reviews",
        "description": "Fetches and returns JSON data of Google Maps reviews based on the specified parameters.",
        "parameters": {
            "data_id": {
                "description": "Unique identifier representing the location or place on Google Maps for which reviews are fetched.",
                "type": "str",
                "default": "0x89c25090129c363d:0x40c6a5770d25022b"
            },
            "next_page_token": {
                "description": "Token to fetch the next page of results, if applicable. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "sort_by": {
                "description": "Criteria to sort the reviews by. Could be relevance, newest, etc. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "topic_id": {
                "description": "Identifier for a specific topic to filter reviews by. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "hl": {
                "description": "Language code to return the reviews in, formatted as language_country (e.g., 'en_us'). Default is 'en_us'.",
                "type": "str, optional",
                "default": "en_us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_a_specific_picture",
        "description": "Fetches a specific motivational picture using the provided picture ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the motivational picture to fetch.",
                "type": "str",
                "default": "2710271472860038475"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_radio_playlist",
        "description": "Fetches a radio playlist for a given artist or song using the Spotify API.",
        "parameters": {
            "uri": {
                "description": "The URI of the artist or song for which to generate the radio playlist.",
                "type": "str",
                "default": "spotify:artist:2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_paid_ios_apps",
        "description": "Fetches a list of the top paid iOS apps from the App Store.",
        "parameters": {
            "lang": {
                "description": "Language code for the results. Defaults to 'en'.",
                "type": "str",
                "default": "en"
            },
            "category": {
                "description": "Category ID to filter results by. Defaults to '6016'.",
                "type": "str",
                "default": "6016"
            },
            "country": {
                "description": "Country code for the App Store to search in. Defaults to 'us'.",
                "type": "str",
                "default": "us"
            },
            "num": {
                "description": "Number of results to return. Defaults to 100. Maximum is 200.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_vehicle_models",
        "description": "Fetches all supported vehicle models for a specified vehicle make using the Toolbench RapidAPI.",
        "parameters": {
            "make": {
                "description": "The brand of the vehicle for which to fetch the models.",
                "type": "str",
                "default": "Bugatti"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_definitions",
        "description": "Fetch the definitions of a specified word using the Dicolink API.",
        "parameters": {
            "mot": {
                "description": "The word for which to fetch the definitions.",
                "type": "str",
                "default": "cheval"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_company",
        "description": "Generates a list of fake companies using the specified RapidAPI endpoint.",
        "parameters": {
            "size": {
                "description": "The number of fake companies to generate. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getqrcode",
        "description": "Fetch the QR code image for a given phone ID using the Maytapi WhatsApp API.",
        "parameters": {
            "phone_id": {
                "description": "The identifier for the phone whose QR code is to be fetched.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "summary",
        "description": "Fetches a summary of SEO metrics for a given URL using the Toolbench RapidAPI service.",
        "parameters": {
            "url": {
                "description": "The URL of the website for which the SEO summary is to be fetched.",
                "type": "str",
                "default": "https://google.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_headlines",
        "description": "Fetches top headline news articles based on specified parameters.",
        "parameters": {
            "language": {
                "description": "Language code to filter news articles. Default is 'en'. Options include:",
                "type": "str",
                "default": "en"
            },
            "category": {
                "description": "Category of news articles to filter by. Default is 'sports'. Options include:",
                "type": "str",
                "default": "sports"
            },
            "country": {
                "description": "Country code to filter news articles. Default is 'us'. Options include:",
                "type": "str",
                "default": "us"
            },
            "sortby": {
                "description": "Criterion to sort news articles by. Default is 'published_date'.",
                "type": "str",
                "default": ""
            },
            "pagesize": {
                "description": "Number of news articles to return per page. Default is 10.",
                "type": "int",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "overview",
        "description": "Fetches summary statistics from the Papercliff API regarding the number of keywords found, and the number of articles and agencies reviewed.",
        "parameters": {
            "is_from": {
                "description": "Narrows down the results to articles published after the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.",
                "type": "str, optional",
                "default": ""
            },
            "to": {
                "description": "Narrows down the results to articles published before the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times in the future do not affect the result.",
                "type": "str, optional",
                "default": ""
            },
            "terms": {
                "description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash. Example value: `election-campaign`.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "activities",
        "description": "Fetches MET (Metabolic Equivalent of Task) values for various activities based on the given intensity level.",
        "parameters": {
            "intensitylevel": {
                "description": "Level of intensity for the activity.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fixtures",
        "description": "Retrieves upcoming soccer fixtures for the next 7 days from the sports API.",
        "parameters": {
            "page": {
                "description": "The page of results to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "day": {
                "description": "The specific day of fixtures to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "free_games",
        "description": "Returns all free games currently on offer and upcoming free games from the Epic Games Store.",
        "parameters": {
            "country": {
                "description": "Country code for local offers (e.g., 'US', 'DE', 'ES'). Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "upcoming",
        "description": "Fetches upcoming CS:GO matches data from the specified API endpoint.",
        "parameters": {
            "content_type": {
                "description": "The content type for the request, default is 'application/json'.",
                "type": "str",
                "default": "application/json"
            },
            "page": {
                "description": "The page number to retrieve, default is 1.",
                "type": "int",
                "default": "1"
            },
            "limit": {
                "description": "The number of matches to retrieve per page, default is 10.",
                "type": "int",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "emailvalidation",
        "description": "Validates whether the given email address is disposable or not by using the Toolbench RapidAPI service.",
        "parameters": {
            "email": {
                "description": "The email address to be validated.",
                "type": "str",
                "default": "info@peekdomain.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_countries_by_continent",
        "description": "Search for countries by their continent using the specified query parameters.",
        "parameters": {
            "continent": {
                "description": "The continent of the countries to search for. This search is case insensitive and requires an exact match.",
                "type": "str",
                "default": "North America"
            },
            "offset": {
                "description": "The zero-indexed page number from which the search should continue. Defaults to 0.",
                "type": "int, optional",
                "default": 0
            },
            "fields": {
                "description": "A comma-separated list of fields to filter the response. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of records to return per page. Defaults to 10.",
                "type": "int, optional",
                "default": 10
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_a_specific_employee_by_employee_id",
        "description": "Fetches details of a specific employee by their unique employee ID.",
        "parameters": {
            "is_id": {
                "description": "The unique ID of the employee whose details are to be fetched.",
                "type": "int",
                "default": "715505"
            }
        },
        "domain": "Data"
    },
    {
        "name": "title_seasons",
        "description": "Fetch the seasons of the specified Netflix titles.",
        "parameters": {
            "ids": {
                "description": "Comma-separated string of Netflix title IDs for which seasons are to be fetched.",
                "type": "str",
                "default": "80057281"
            },
            "lang": {
                "description": "Language code for the fetched data, default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "offset": {
                "description": "Offset for the seasons data, default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "Limit for the number of seasons to fetch, default is 25.",
                "type": "int, optional",
                "default": "25"
            }
        },
        "domain": "Data"
    },
    {
        "name": "nationalize",
        "description": "Fetches the nationality of the provided name using the Genderize-Nationalize API.",
        "parameters": {
            "name": {
                "description": "The name for which to determine the nationality.",
                "type": "str",
                "default": "jad"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_railway_period_for_utc_date",
        "description": "Fetch the railway period for a given UTC date provided in milliseconds.",
        "parameters": {
            "millis": {
                "description": "The UTC date in milliseconds since the Unix epoch.",
                "type": "int",
                "default": "1654470000000"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rental_amenities",
        "description": "Fetches rental amenities information for a given location using the AirDNA API.",
        "parameters": {
            "location": {
                "description": "The location for which to fetch rental amenities information.",
                "type": "str",
                "default": "santa monica"
            },
            "currency": {
                "description": "The currency code for the rental pricing. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "sentence",
        "description": "This function creates lorem ipsum text by specifying the number of sentences to generate. It makes a request to the RapidAPI lorem ipsum service.",
        "parameters": {
            "amount": {
                "description": "Number of sentences to generate. Defaults to 2.",
                "type": "int",
                "default": "2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "channel_playlists",
        "description": "Fetches playlists from a specified YouTube channel using the YouTube Data API and various filters.",
        "parameters": {
            "hl": {
                "description": "Language parameter, specified as a BCP-47 language code. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "filter": {
                "description": "Filter key or token to specify the type of playlists to return. Defaults to None. Available options:",
                "type": "str, optional",
                "default": ""
            },
            "cursor": {
                "description": "Continuation token for pagination. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "is_id": {
                "description": "The YouTube channel ID to fetch playlists for. Defaults to 'UC-lHJZR3Gqxm24_Vd_AJ5Yw'.",
                "type": "str, optional",
                "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"
            },
            "gl": {
                "description": "Geolocation parameter to filter results by region. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "generate_password",
        "description": "Generates a random password of specified length and character types.",
        "parameters": {
            "length": {
                "description": "The length of the password. Defaults to 12.",
                "type": "int, optional",
                "default": 12
            },
            "include_special": {
                "description": "Whether to include special characters in the password. Defaults to True.",
                "type": "bool, optional",
                "default": true
            }
        },
        "domain": "Data"
    },
    {
        "name": "google_videos",
        "description": "Fetches the JSON data of video results from the Google Search API based on the given search parameters.",
        "parameters": {
            "query": {
                "description": "The search query string.",
                "type": "str",
                "default": "football"
            },
            "uule": {
                "description": "Encoded location parameter.",
                "type": "str, optional",
                "default": ""
            },
            "duration": {
                "description": "Video duration filter.",
                "type": "str, optional",
                "default": ""
            },
            "safe": {
                "description": "Safe search setting.",
                "type": "str, optional",
                "default": ""
            },
            "hl": {
                "description": "Language of the search results (default is 'en_us').",
                "type": "str, optional",
                "default": "en_us"
            },
            "num": {
                "description": "Number of results to return (default is '10').",
                "type": "str, optional",
                "default": "10"
            },
            "lr": {
                "description": "Language restriction for the search.",
                "type": "str, optional",
                "default": ""
            },
            "device": {
                "description": "Device type (default is 'desktop').",
                "type": "str, optional",
                "default": "desktop"
            },
            "tbs": {
                "description": "Restrict results based on time.",
                "type": "str, optional",
                "default": ""
            },
            "nfpr": {
                "description": "Enables or disables personal results (default is '0').",
                "type": "str, optional",
                "default": "0"
            },
            "gl": {
                "description": "Country restrict for the search (default is 'us').",
                "type": "str, optional",
                "default": "us"
            },
            "page": {
                "description": "Page number for the search results (default is '0').",
                "type": "str, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "historical",
        "description": "Fetches the Fear and Greed Index for a given date from the RapidAPI service.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve the index, in the format 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2022-06-01"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rental_ratings",
        "description": "Fetches rental ratings for a specified location using the AirDNA API.",
        "parameters": {
            "location": {
                "description": "The location for which rental ratings are to be fetched.",
                "type": "str",
                "default": "santa monica"
            },
            "currency": {
                "description": "The currency code for the rental ratings. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "keyword",
        "description": "Retrieves \u201cMonthly Data\u201d and \u201cSearch count\u201d for a given keyword from the Targeted Keyword Trend API.",
        "parameters": {
            "keyword": {
                "description": "The keyword to search data for.",
                "type": "str",
                "default": "digital marketing"
            }
        },
        "domain": "Data"
    },
    {
        "name": "keyword_search_with_ranking",
        "description": "Perform a keyword search at a specific coordinate (latitude/longitude) to find businesses and rank a specific business at that location. The ranking data can be determined by the business place ID or business name.",
        "parameters": {
            "query": {
                "description": "The Google Place ID of the business or the business name to match in results. Use the `match_type` parameter to specify the choice.",
                "type": "str",
                "default": "web design"
            },
            "lng": {
                "description": "The longitude value of the grid center coordinate point.",
                "type": "int",
                "default": "-121.938314"
            },
            "match_value": {
                "description": "The keyword or search query.",
                "type": "str",
                "default": "ChIJoejvAr3Mj4ARtHrbKxtAHXI"
            },
            "lat": {
                "description": "The latitude value of the grid center coordinate point.",
                "type": "int",
                "default": "37.341759"
            },
            "zoom": {
                "description": "The Google Maps zoom level to use for the search on each grid point. Allowed values are 0-18. Default is 13.",
                "type": "int, optional",
                "default": "13"
            },
            "match_type": {
                "description": "The type of match to perform for ranking. Allowed values are 'place_id' or 'name'. Default is 'place_id'.",
                "type": "str, optional",
                "default": "place_id"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ip_reputation",
        "description": "Fetch detailed information about a specified IPv4 or IPv6 address, including geolocation, ISP or hosting provider, and history of abuse or malicious activity.",
        "parameters": {
            "ip": {
                "description": "The IP address to query for reputation information.",
                "type": "str",
                "default": "185.65.135.230"
            }
        },
        "domain": "Data"
    },
    {
        "name": "estimate_market_value",
        "description": "Estimates the market value of a car given its VIN and optionally its mileage using the Toolbench RapidAPI service.",
        "parameters": {
            "vin": {
                "description": "The Vehicle Identification Number of the car.",
                "type": "str",
                "default": "5N3AA08D68N901917"
            },
            "mileage": {
                "description": "The current mileage of the car. Defaults to 50,000 if not specified.",
                "type": "int, optional",
                "default": "50000"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_list_of_top_level_domains",
        "description": "Retrieve an exhaustive list of generic and country code top-level domains (TLDs).",
        "parameters": {
            "tlds": {
                "description": "A comma-separated string of specific TLDs to query. If not provided, all TLDs are retrieved.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_timeline",
        "description": "Fetches the tweet timeline for a specified user ID.",
        "parameters": {
            "user_id": {
                "description": "The unique identifier of the Twitter user whose timeline is to be fetched.",
                "type": "int",
                "default": "44196397"
            },
            "cursor": {
                "description": "Cursor for pagination to fetch the next set of results. Defaults to 'HBaEgNKVxpvYtS0AAA=='.",
                "type": "str, optional",
                "default": "HBaEgNKVxpvYtS0AAA=="
            },
            "count": {
                "description": "Number of tweets to retrieve. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_company_by_domain",
        "description": "Fetches company data using a given web domain.",
        "parameters": {
            "domain": {
                "description": "The web domain of the company to look up.",
                "type": "str",
                "default": "apple.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getnews",
        "description": "Fetches news articles for Diablo 4 from the specified page number using the provided RapidAPI key.",
        "parameters": {
            "page": {
                "description": "The page number of news articles to fetch.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_chapter_by_bookname",
        "description": "Retrieves a specific chapter from a book in the Bible using the specified book name and chapter ID.",
        "parameters": {
            "bookname": {
                "description": "The name of the book in the Bible.",
                "type": "str",
                "default": "John"
            },
            "chapterid": {
                "description": "The chapter number to retrieve from the specified book.",
                "type": "int",
                "default": "3"
            }
        },
        "domain": "Data"
    },
    {
        "name": "tokenize",
        "description": "Tokenizes a given value by making a request to the Tokenizer API endpoint. The value must adhere to specific character restrictions and size limits.",
        "parameters": {
            "value": {
                "description": "The text to be tokenized. The value must be 1KB or smaller and must not include any of the following characters: forward slash (/), backslash (\\), number sign (#), question mark (?), or control characters ranging from U+0000 to U+001F (including horizontal tab, linefeed, and carriage return), and from U+007F to U+009F.",
                "type": "str",
                "default": "TextIWantToTokenize"
            }
        },
        "domain": "Data"
    },
    {
        "name": "iso",
        "description": "Retrieves the ISO codes for a given country using the Metropolis API.",
        "parameters": {
            "country": {
                "description": "The name of the country for which to get the ISO codes.",
                "type": "str",
                "default": "Canada"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_patent",
        "description": "Searches for patents using a keyword and data source, and returns a list of patents.",
        "parameters": {
            "q": {
                "description": "Keyword used for searching patents.",
                "type": "str",
                "default": "kettle"
            },
            "ds": {
                "description": "Data source to search for patents.",
                "type": "str",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "metadata",
        "description": "Fetches the metadata information for cryptocurrency markets from the specified API.",
        "parameters": {
            "asset_type": {
                "description": "The type of the asset, e.g., 'spot' or 'futures'. Default is 'spot'.",
                "type": "str",
                "default": "spot"
            },
            "market_venue": {
                "description": "The trading venue where the asset is listed, e.g., 'BINANCE'. Default is 'BINANCE'.",
                "type": "str",
                "default": "BINANCE"
            },
            "symbol": {
                "description": "The symbol of the cryptocurrency, e.g., 'BTC'. Default is 'BTC'.",
                "type": "str",
                "default": "BTC"
            },
            "base": {
                "description": "The base currency for trading, e.g., 'USDT'. Default is 'USDT'.",
                "type": "str",
                "default": "USDT"
            },
            "data_type": {
                "description": "The type of data to fetch, e.g., 'metrics'. Default is 'metrics'.",
                "type": "str",
                "default": "metrics"
            }
        },
        "domain": "Data"
    },
    {
        "name": "whois",
        "description": "Fetch the WhoIS lookup data for a given domain using the specified Toolbench RapidAPI key.",
        "parameters": {
            "domain": {
                "description": "The domain name for which to retrieve the WhoIS data.",
                "type": "str",
                "default": "peekdomain.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_tracks",
        "description": "Fetches track information from the Spotify API for the given track IDs.",
        "parameters": {
            "ids": {
                "description": "A string of comma-separated track IDs to fetch information for.",
                "type": "str",
                "default": "4WNcduiCmDNfmTEz7JvmLv"
            }
        },
        "domain": "Data"
    },
    {
        "name": "vin_decoder",
        "description": "Decodes a given VIN (Vehicle Identification Number) for a vehicle manufactured in Europe to retrieve information such as car model, maker, year, engine, and other relevant details.",
        "parameters": {
            "vin": {
                "description": "The VIN number to be decoded.",
                "type": "str",
                "default": "VF3CA5FU8DW062146"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_single_user",
        "description": "Retrieves individual user data for a provided user ID from the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The ID of the user for which to retrieve data.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "postcodes",
        "description": "This function fetches information about a given Japanese postcode using the PostcodeJP API.",
        "parameters": {
            "postcode": {
                "description": "The postcode for which information is to be fetched.",
                "type": "str",
                "default": "1000001"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_place_id_api",
        "description": "Fetches details for a given place from the Complete Study Bible API using the provided Place Unique ID.",
        "parameters": {
            "place_unique_id": {
                "description": "The unique identifier for the place to be searched in the API.",
                "type": "str",
                "default": "2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_countries",
        "description": "Fetches a list of countries from the 60k Radio Stations API, optionally filtered by a keyword.",
        "parameters": {
            "keyword": {
                "description": "A keyword to filter the list of countries (default is 'Aus').",
                "type": "str",
                "default": "Aus"
            }
        },
        "domain": "Data"
    },
    {
        "name": "community_post_details",
        "description": "Fetches details of a community post from YouTube using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "Community post ID. Default is 'UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ'.",
                "type": "str",
                "default": "UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ"
            }
        },
        "domain": "Data"
    },
    {
        "name": "emailfinder",
        "description": "Finds the most likely email address based on the provided domain name, first name, and last name using the Tomba RapidAPI.",
        "parameters": {
            "domain": {
                "description": "The domain name to search for the email address (e.g., \"stripe.com\").",
                "type": "str",
                "default": "stripe.com"
            },
            "first_name": {
                "description": "The first name of the person.",
                "type": "str",
                "default": "Moskoz"
            },
            "last_name": {
                "description": "The last name of the person.",
                "type": "str",
                "default": "Dustin"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getlearningresourcesbytopic",
        "description": "Retrieve learning resources by topic from the AI Smartable API.",
        "parameters": {
            "topic": {
                "description": "The topic for which to retrieve learning resources.",
                "type": "str",
                "default": "machine-learning"
            },
            "page": {
                "description": "The page number of the results to fetch.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getfutureevents",
        "description": "Fetches future election events for a given page from the Election2020 Smartable API.",
        "parameters": {
            "page": {
                "description": "The page number or identifier to fetch specific events.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "newlyregistereddomains",
        "description": "Fetch a list of newly registered domains from a REST API.",
        "parameters": {
            "page": {
                "description": "The page number of domains to retrieve. Default is 1.",
                "type": "int, optional",
                "default": 1
            },
            "exclude": {
                "description": "Keywords to exclude from the domain search. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "date": {
                "description": "The registration date of the domains to be searched in 'YYYY-MM-DD' format. Default is '2023-06-12'.",
                "type": "str, optional",
                "default": "2023-06-12"
            },
            "keywords": {
                "description": "Keywords that must be included in the domain search. Default is None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "time_series",
        "description": "Fetch the daily historical rates for a given base and target currency or metal between specified start and end dates from the TimeSeries API. The function is limited to a maximum range of 365 days and can query only one symbol per request.",
        "parameters": {
            "base": {
                "description": "The three-letter currency code or metal code of the base currency.",
                "type": "str",
                "default": "USD"
            },
            "symbols": {
                "description": "The three-letter currency code or metal code of the target currency.",
                "type": "str",
                "default": "XAU"
            },
            "end_date": {
                "description": "The end date of the timeframe in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2023-01-10"
            },
            "start_date": {
                "description": "The start date of the timeframe in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2022-12-20"
            }
        },
        "domain": "Data"
    },
    {
        "name": "latest_news",
        "description": "Fetches the latest news and stories from different sources.",
        "parameters": {
            "limit": {
                "description": "The maximum number of news items to be returned. Default is 5.",
                "type": "int, optional",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "reverse_geocode",
        "description": "Performs reverse geocoding in Ghana by providing latitude and longitude coordinates. Returns the name of the city where the location is situated.",
        "parameters": {
            "lon": {
                "description": "The longitude of the location.",
                "type": "str",
                "default": "-0.1870"
            },
            "lat": {
                "description": "The latitude of the location.",
                "type": "str",
                "default": "5.6037"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_albums",
        "description": "Fetches the albums of a specified artist from the Spotify API using the provided RapidAPI key.",
        "parameters": {
            "is_id": {
                "description": "The ID of the artist.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            },
            "offset": {
                "description": "The index of the first album to return. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of albums to return. Defaults to 100.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "timezone",
        "description": "Retrieve the timezone information for a specified city using the RapidAPI service.",
        "parameters": {
            "city": {
                "description": "The name of the city for which to retrieve timezone information.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "forward_geocode",
        "description": "Fetches latitude and longitude coordinates from a given address using the RapidAPI forward geocoding service.",
        "parameters": {
            "address": {
                "description": "The address to be geocoded.",
                "type": "str",
                "default": "2795 Hastings St, Vancouver, BC V5K 1Z8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "details",
        "description": "Fetch product details from the price comparison API using various geographical and identification parameters.",
        "parameters": {
            "is_id": {
                "description": "The identifier for the product. This can be a UPC, EAN, ISBN, GTIN, or Amazon ASIN.",
                "type": "str",
                "default": "611247373064"
            },
            "country": {
                "description": "The country code for the query. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "longitude": {
                "description": "The longitude for geographical querying. Default is '-122.49493'.",
                "type": "str, optional",
                "default": "-122.49493"
            },
            "latitude": {
                "description": "The latitude for geographical querying. Default is '37.777805'.",
                "type": "str, optional",
                "default": "37.777805"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_artist_overview",
        "description": "Fetches full details of an artist from the Spotify Scraper API.",
        "parameters": {
            "artistid": {
                "description": "The unique identifier for the artist.",
                "type": "str",
                "default": "6eUKZXaKkcviH0Ku9w2n3V"
            }
        },
        "domain": "Data"
    },
    {
        "name": "events",
        "description": "Fetches economic events with optional filtering by date range and country codes.",
        "parameters": {
            "to": {
                "description": "End date for filtering events, in the format 'YYYY-MM-DD'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "is_from": {
                "description": "Start date for filtering events, in the format 'YYYY-MM-DD'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "countries": {
                "description": "Comma-separated list of country codes to filter the events. Defaults to 'US,GB'.",
                "type": "str, optional",
                "default": "US,GB"
            }
        },
        "domain": "Data"
    },
    {
        "name": "verify_plate_number_location",
        "description": "Fetches information about the state and LGA (Local Government Area) associated with a given Nigerian plate number code.",
        "parameters": {
            "platecodeloc": {
                "description": "The first three characters of a Nigerian plate number.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_addresses",
        "description": "Fetches addresses from the address-monitor API with specified query parameters.",
        "parameters": {
            "limit": {
                "description": "The maximum number of addresses to fetch. Defaults to '100'.",
                "type": "str",
                "default": "100"
            },
            "offset": {
                "description": "The number of addresses to skip before starting to fetch. Defaults to '0'.",
                "type": "str",
                "default": "0"
            },
            "network": {
                "description": "The network type for which addresses are to be fetched (e.g., 'BSC_TESTNET'). Defaults to 'BSC_TESTNET'.",
                "type": "str",
                "default": "BSC_TESTNET"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_by_id",
        "description": "Fetches user information by user ID from the Instagram API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the user to fetch information for.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_likes",
        "description": "Fetches the liked tweets of a specified user from the Twitter API using RapidAPI.",
        "parameters": {
            "user_id": {
                "description": "The ID of the user for whom to fetch liked tweets.",
                "type": "str",
                "default": "44196397"
            },
            "limit": {
                "description": "The maximum number of liked tweets to return. Defaults to 40.",
                "type": "int, optional",
                "default": "40"
            },
            "cursor": {
                "description": "The cursor for pagination to fetch the next set of results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_text",
        "description": "Search for verses from the Bible that match the given text using the Toolbench RapidAPI service.",
        "parameters": {
            "text": {
                "description": "The text to search for within Bible verses.",
                "type": "str",
                "default": "Melchizedek"
            }
        },
        "domain": "Data"
    },
    {
        "name": "nz_decode",
        "description": "Decodes a New Zealand Vehicle Identification Number (VIN) using the VIN Decoder API.",
        "parameters": {
            "vin": {
                "description": "The Vehicle Identification Number to decode.",
                "type": "str",
                "default": "JMFXDGL3WNZ002145"
            }
        },
        "domain": "Data"
    },
    {
        "name": "info",
        "description": "Fetch information on the given dataset using the specified RapidAPI key.",
        "parameters": {
            "dataset": {
                "description": "The identifier of the dataset to retrieve information for.",
                "type": "str",
                "default": "frim1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "history",
        "description": "Fetches the number of articles published daily during the last week and the corresponding news agencies that created those articles, optionally filtering by specific terms.",
        "parameters": {
            "terms": {
                "description": "Narrows down results to articles that contain the provided keywords. The terms should consist of one to three words separated by a dash, e.g., `election-campaign`. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_region_details",
        "description": "Fetch the details of a specific region within a given country using the RapidAPI GIS Engine.",
        "parameters": {
            "region_code": {
                "description": "The code representing the specific region to look up.",
                "type": "str",
                "default": "abr"
            },
            "country_code": {
                "description": "The code representing the country in which the region is located.",
                "type": "str",
                "default": "ph"
            }
        },
        "domain": "Data"
    },
    {
        "name": "zip_code",
        "description": "Retrieves income-related data for a given US ZIP code using the Toolbench RapidAPI service.",
        "parameters": {
            "zip": {
                "description": "The ZIP code for which to retrieve income-related data.",
                "type": "int",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "time_zone_time",
        "description": "Fetches the current time for a given time-zone ID in ISO-8601 format (HHmmss.SSSZ) using the GeoDB API.",
        "parameters": {
            "zoneid": {
                "description": "The ID of the time-zone for which the current time is to be fetched.",
                "type": "str",
                "default": "America__Los_Angeles"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getlearningresources",
        "description": "Fetches Azure learning resources from the specified page number using the provided RapidAPI key.",
        "parameters": {
            "page": {
                "description": "The page number of the learning resources to be retrieved.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "validate_cpf_number",
        "description": "Validates a given CPF number using the RapidAPI CPF Validator service.",
        "parameters": {
            "n": {
                "description": "The CPF number to be validated.",
                "type": "str",
                "default": "123.456.789-09"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_5_day_forecast",
        "description": "Fetches the 5-day weather forecast for a specified ski resort.",
        "parameters": {
            "resort": {
                "description": "The name of the ski resort for which to fetch the forecast.",
                "type": "str",
                "default": "Jackson Hole"
            },
            "units": {
                "description": "The units for temperature and snow depth. Accepted values are 'i' for imperial and 'm' for metric. Defaults to 'i'.",
                "type": "str, optional",
                "default": "i"
            },
            "el": {
                "description": "The elevation level of the mountain for which to fetch the forecast. Accepted values are 'top', 'mid', and 'bot'. Defaults to 'top'.",
                "type": "str, optional",
                "default": "top"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_random_quote",
        "description": "Fetches a random quote from an API, with an option to limit the length of the quote.",
        "parameters": {
            "limit": {
                "description": "Maximum length of the quote in characters. Defaults to 50.",
                "type": "int, optional",
                "default": "50"
            }
        },
        "domain": "Data"
    },
    {
        "name": "hashtag",
        "description": "Fetch posts from Instagram using a specific hashtag.",
        "parameters": {
            "hashtag": {
                "description": "The hashtag to search for.",
                "type": "str",
                "default": "football"
            },
            "raw": {
                "description": "Set to True to return the raw unprocessed data feed. Defaults to None.",
                "type": "bool, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_all_words_api",
        "description": "Fetches King James Version (KJV) Bible verses containing all the supplied words from the Complete Study Bible API.",
        "parameters": {
            "words": {
                "description": "Words to search for in the KJV Bible verses, separated by '%20' (URL encoded spaces).",
                "type": "str",
                "default": "Melchizedek priest"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_lottery_result_by_date",
        "description": "Fetches the lottery results for the given date using the RapidAPI service.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve the lottery results, formatted as 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2022-10-16"
            }
        },
        "domain": "Data"
    },
    {
        "name": "autocomplete_zipcodes_zip4",
        "description": "Fetches autocomplete suggestions for USA Zip+4 zip codes using the provided zipcode and API key.",
        "parameters": {
            "zipcode": {
                "description": "The base ZIP code for which to fetch autocomplete suggestions.",
                "type": "str",
                "default": "110"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_cities_in_a_country",
        "description": "Fetches a list of cities in a specified country filtered by population range, with options for pagination.",
        "parameters": {
            "country_iso2": {
                "description": "The ISO 3166-1 alpha-2 code of the country.",
                "type": "str",
                "default": ""
            },
            "page_size": {
                "description": "The number of cities to return per page. Default is 20.",
                "type": "int, optional",
                "default": 20
            },
            "population_min": {
                "description": "The minimum population of the cities to include. Default is 0.",
                "type": "int, optional",
                "default": 0
            },
            "next_token": {
                "description": "Token for pagination to fetch the next set of cities. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "population_max": {
                "description": "The maximum population of the cities to include. Default is 100,000,000.",
                "type": "int, optional",
                "default": 100000000
            }
        },
        "domain": "Data"
    },
    {
        "name": "group_breed_data_by_property",
        "description": "Fetches and returns dog breed data grouped by a specified property and property value.",
        "parameters": {
            "property": {
                "description": "The property to group the dog breeds by.",
                "type": "str",
                "default": "breed_status"
            },
            "property_value": {
                "description": "The value of the property to match the dog breeds.",
                "type": "str",
                "default": "extinct"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_mempool_v2",
        "description": "Retrieve a list of transaction IDs currently in the mempool of the specified blockchain node, representing unconfirmed transactions not yet included in any block.",
        "parameters": {
            "blockchain": {
                "description": "The name of the blockchain.",
                "type": "str",
                "default": "bitcoin"
            },
            "pagesize": {
                "description": "The number of transactions to return per call. Default and maximum is 1000.",
                "type": "int, optional",
                "default": 1000
            },
            "page": {
                "description": "Specifies the page of returned transactions, starting from 1. If out of range, the closest possible page is returned. Default is 1.",
                "type": "int, optional",
                "default": 1
            }
        },
        "domain": "Data"
    },
    {
        "name": "consulta_empresa",
        "description": "Fetches company information based on the given CNPJ ID using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The first 8 digits of the CNPJ used to identify the company.",
                "type": "str",
                "default": "37335118"
            }
        },
        "domain": "Data"
    },
    {
        "name": "country_location_api",
        "description": "Retrieves location data for a specified country using the Country Location API.",
        "parameters": {
            "country": {
                "description": "Name of the country for which to retrieve location data. Defaults to 'canada'.",
                "type": "str",
                "default": "canada"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_vehicule_info",
        "description": "Fetches vehicle information from the API PLAQUE IMMATRICULATION using provided parameters.",
        "parameters": {
            "token": {
                "description": "The token for API authentication. Defaults to 'TokenDemoRapidapi'.",
                "type": "str",
                "default": "TokenDemoRapidapi"
            },
            "host_name": {
                "description": "The base URL of the API endpoint. Defaults to 'https://apiplaqueimmatriculation.com'.",
                "type": "str",
                "default": "https://apiplaqueimmatriculation.com"
            },
            "immatriculation": {
                "description": "The vehicle registration number. Defaults to 'AA-123-BC'.",
                "type": "str",
                "default": "AA-123-BC"
            }
        },
        "domain": "Data"
    },
    {
        "name": "protocol",
        "description": "Gets the historical Total Value Locked (TVL) of a specified protocol, including breakdowns by token and chain.",
        "parameters": {
            "protocol": {
                "description": "The slug identifier of the protocol.",
                "type": "str",
                "default": "aave"
            }
        },
        "domain": "Data"
    },
    {
        "name": "dns_lookup",
        "description": "Fetches DNS data for a given domain using the specified record type.",
        "parameters": {
            "domain": {
                "description": "The domain to search for DNS records.",
                "type": "str",
                "default": "google.com"
            },
            "rtype": {
                "description": "The type of DNS record to fetch. Available records: A, PTR, MX, CNAME, TXT, NS.",
                "type": "str",
                "default": "NS"
            }
        },
        "domain": "Data"
    },
    {
        "name": "agent_details",
        "description": "Fetch the details of an agent using their ID from the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The unique ID of the agent.",
                "type": "str",
                "default": "569e892a89a68901006bdb99"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandomword",
        "description": "Fetches random words based on the specified type and count from the RapidAPI service.",
        "parameters": {
            "type": {
                "description": "The type of words to fetch (e.g., 'adjective', 'noun'). Defaults to 'adjective'.",
                "type": "str",
                "default": "adjective"
            },
            "count": {
                "description": "The number of random words to fetch. Defaults to 1.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ip_lookup",
        "description": "This function performs an IP lookup using the provided IP address and returns the geolocation details. It utilizes the IP Whois Geolocation API from RapidAPI.",
        "parameters": {
            "ip": {
                "description": "The IP address (IPv4 or IPv6) to look up.",
                "type": "str",
                "default": "1.1.1.1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "market",
        "description": "Fetches market data from Brave New Coin API based on specified asset IDs.",
        "parameters": {
            "quoteassetid": {
                "description": "UUID of the quote asset to filter the market results. Only returns markets which include this asset on the quote side, e.g., USD = 'e77b9824-126a-418e-a69c-a2e682578e94'.",
                "type": "str, optional",
                "default": ""
            },
            "baseassetid": {
                "description": "UUID of the base asset to filter the market results. Only returns markets which include this asset on the base side, e.g., BTC = 'f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "products_detail",
        "description": "Fetches detailed information of a product based on the given product ID and optional query parameters.",
        "parameters": {
            "goods_id": {
                "description": "The value of 'goods_id' field returned from the .../products/list or .../products/search endpoint.",
                "type": "str",
                "default": "2506647"
            },
            "currency": {
                "description": "The 3-letter currency code. Defaults to 'USD'.",
                "type": "str, optional",
                "default": "USD"
            },
            "country": {
                "description": "The 2-letter country code. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "language": {
                "description": "The 2-letter language code. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_stations_within_1_km",
        "description": "Fetch the nearest EV charging stations within a 1 km radius from a given latitude and longitude.",
        "parameters": {
            "region": {
                "description": "The region code (us for United States, ca for Canada, uk for United Kingdom, nz for New Zealand, hk for Hong Kong).",
                "type": "str",
                "default": ""
            },
            "latitude": {
                "description": "The latitude of the location for which to find nearby charging stations.",
                "type": "int",
                "default": "40.733"
            },
            "longitude": {
                "description": "The longitude of the location for which to find nearby charging stations.",
                "type": "int",
                "default": "-74.202"
            }
        },
        "domain": "Data"
    },
    {
        "name": "by_zip_code",
        "description": "Fetches weather data based on a given zip code using the Toolbench RapidAPI service.",
        "parameters": {
            "zip": {
                "description": "The zip code for which to fetch the weather data. If the country is not specified, the search defaults to the USA.",
                "type": "str",
                "default": "94040"
            },
            "lang": {
                "description": "Language in which to receive the output. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "units": {
                "description": "Units of measurement to use. Available options are 'standard', 'metric', and 'imperial'. If not specified, 'standard' units will be used by default. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "year_end_billboard_200_albums",
        "description": "Fetch the Year-End Billboard 200 Albums chart for a given year and range.",
        "parameters": {
            "year": {
                "description": "The year to fetch the Year-End Billboard 200 Albums for.",
                "type": "int",
                "default": "2021"
            },
            "range": {
                "description": "The range of results to return (default is '1-10'). If not specified, all results are returned.",
                "type": "str",
                "default": "1-10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_crime_rates_by_zip",
        "description": "Retrieve crime statistics for a given ZIP code using the Crime Data by Zipcode API.",
        "parameters": {
            "zip": {
                "description": "ZIP code to retrieve crime data for.",
                "type": "int",
                "default": "94109"
            }
        },
        "domain": "Data"
    },
    {
        "name": "codepoint",
        "description": "Fetch detailed information about a Unicode codepoint using the Codepoints API.",
        "parameters": {
            "codepoint": {
                "description": "The hex number representing the Unicode codepoint.",
                "type": "str",
                "default": "0A2F"
            }
        },
        "domain": "Data"
    },
    {
        "name": "block",
        "description": "Fetches information about a specified Unicode block from the Codepoints API.",
        "parameters": {
            "block": {
                "description": "The name of the Unicode block to retrieve information about.",
                "type": "str",
                "default": "basic_latin"
            },
            "callback": {
                "description": "The JSON-P function name for the response. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_draw_result",
        "description": "Retrieve the draw result for a specified game in a given region and on a specific date.",
        "parameters": {
            "game": {
                "description": "The name of the game for which to retrieve the draw result. Use the **Game List** method to get available games by country in JSON format.",
                "type": "str",
                "default": "lotto"
            },
            "date": {
                "description": "The date of the draw result to retrieve, formatted as 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2023-01-01"
            },
            "region": {
                "description": "The region or country for which to retrieve the draw result. Use the **Region List** method to get available regions in JSON format.",
                "type": "str",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "keyword_search_at_coordinates",
        "description": "Performs a keyword search at specific geographic coordinates for businesses using the Google Local Rank Tracker API.",
        "parameters": {
            "query": {
                "description": "The Google Place ID of the business or the business name to match against in results.",
                "type": "str",
                "default": "web design"
            },
            "lng": {
                "description": "Grid center coordinate point longitude value.",
                "type": "int",
                "default": "-121.938314"
            },
            "lat": {
                "description": "Grid center coordinate point latitude value.",
                "type": "int",
                "default": "37.341759"
            },
            "zoom": {
                "description": "Google Maps zoom level to use for search on each grid point. Allowed values are 0-18. Default is 13.",
                "type": "int, optional",
                "default": "13"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getpastevents",
        "description": "Fetches past Azure events from the specified page using the given RapidAPI key.",
        "parameters": {
            "page": {
                "description": "The page number to fetch the past events from.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "onpage_seo_analyze",
        "description": "Analyzes on-page SEO for a given website using the Toolbench RapidAPI service.",
        "parameters": {
            "website": {
                "description": "The URL of the website to be analyzed.",
                "type": "str",
                "default": "getecz.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "city_details",
        "description": "Fetch detailed information about a specific city using its ID from the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The ID of the city for which detailed information is to be retrieved.",
                "type": "str",
                "default": "132782"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_by_weight",
        "description": "Performs a search for player data based on the given weight using the toolbench RapidAPI.",
        "parameters": {
            "input_weight": {
                "description": "The weight to search for. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "discover",
        "description": "Discover files using the FilePursuit API with optional filters for pagination, result type, and specific links.",
        "parameters": {
            "start": {
                "description": "The starting point for result pagination.",
                "type": "int, optional",
                "default": ""
            },
            "type": {
                "description": "The type of result to filter by. Accepted values are 'filelinks' and 'all'.",
                "type": "str, optional",
                "default": ""
            },
            "link": {
                "description": "A specific link to discover files from.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "tweet_retweeters",
        "description": "Fetches the list of retweeters for a given tweet.",
        "parameters": {
            "is_id": {
                "description": "The ID of the tweet for which to fetch retweeters.",
                "type": "str",
                "default": "1485953263040188416"
            },
            "count": {
                "description": "The number of results to return. Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            },
            "cursor": {
                "description": "The cursor for pagination to fetch additional results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "v1_dogs",
        "description": "Fetch a list of dog breeds matching specified parameters from the API. Returns at most 20 results by default.",
        "parameters": {
            "offset": {
                "description": "Number of results to offset for pagination. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "energy": {
                "description": "Energy level of the breed (0-5, where 0 indicates low energy and 5 indicates high energy). Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "protectiveness": {
                "description": "Protectiveness level of the breed (0-5, where 0 indicates minimal alerting and 5 indicates maximum alerting). Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "max_weight": {
                "description": "Maximum weight of the breed in pounds. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "min_weight": {
                "description": "Minimum weight of the breed in pounds. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "trainability": {
                "description": "Ease of training the breed (0-5, where 0 indicates very difficult and 5 indicates very easy). Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "shedding": {
                "description": "Shedding level of the breed (0-5, where 0 indicates no shedding and 5 indicates maximum shedding). Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "name": {
                "description": "Name of the dog breed. Defaults to 'golden retriever'.",
                "type": "str, optional",
                "default": "golden retriever"
            },
            "min_height": {
                "description": "Minimum height of the breed in inches. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "barking": {
                "description": "Barking tendency of the breed (0-5, where 0 indicates minimal barking and 5 indicates maximum barking). Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "max_height": {
                "description": "Maximum height of the breed in inches. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "max_life_expectancy": {
                "description": "Maximum life expectancy of the breed in years. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "min_life_expectancy": {
                "description": "Minimum life expectancy of the breed in years. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_for_channels",
        "description": "Searches for YouTube channels based on the provided keyword and other optional parameters. Supports pagination for retrieving multiple pages of results.",
        "parameters": {
            "keyword": {
                "description": "Keyword for the channel search. Default is 'Rick Astley'.",
                "type": "str",
                "default": "Rick Astley"
            },
            "lang": {
                "description": "ISO-639 language code for localized results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "sortby": {
                "description": "Criteria for sorting the results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "nexttoken": {
                "description": "Token for fetching the next page of results. If not specified, the first page of results is returned. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "retreive_collections",
        "description": "Retrieves information about collections, including real-time statistics such as floor price.",
        "parameters": {
            "filters": {
                "description": "A JSON string representing the filters to apply when retrieving collections. Default is '{\"sort\":\"VOLUME_ONE_DAY\",\"order\":\"DESC\"}'.",
                "type": "str",
                "default": "{\"sort\":\"VOLUME_ONE_DAY\",\"order\":\"DESC\"}"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_discovered_on",
        "description": "Fetches playlists where the specified artist was discovered using the Spotify API.",
        "parameters": {
            "is_id": {
                "description": "The Spotify artist ID.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ip_address",
        "description": "Fetch information related to an IP address using the Phone and Email Validator API.",
        "parameters": {
            "ip": {
                "description": "The IP address to be queried.",
                "type": "str",
                "default": "127.0.0.1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "logs",
        "description": "Fetches logs from the Maytapi WhatsApp API for a given page.",
        "parameters": {
            "page": {
                "description": "The page number or identifier for the logs to fetch.",
                "type": "str",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandompassword",
        "description": "Generates a random password string of the specified length using the Random Chunk API on RapidAPI.",
        "parameters": {
            "length": {
                "description": "The desired length of the generated password. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "author",
        "description": "Fetches author information from the quotes-diffusion API based on the given parameters.",
        "parameters": {
            "page": {
                "description": "Page number for pagination purposes.",
                "type": "int, optional",
                "default": ""
            },
            "search": {
                "description": "Term to search for specific authors.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "document",
        "description": "Fetches the authorized blob URI for a court document using the provided document ID and RapidAPI key.",
        "parameters": {
            "documentid": {
                "description": "The ID of the document to fetch. Defaults to '41aac429-40dd-ea11-a813-000d3a79365a'.",
                "type": "str, optional",
                "default": "41aac429-40dd-ea11-a813-000d3a79365a"
            }
        },
        "domain": "Data"
    },
    {
        "name": "latest_sold",
        "description": "Fetches a list of recently sold artworks, with optional filtering by gallery and sorting options.",
        "parameters": {
            "page": {
                "description": "The page number of the results to return. Defaults to '1'.",
                "type": "str",
                "default": "1"
            },
            "gallery": {
                "description": "The name of the gallery to filter results by. Possible values include 'Art Blocks', 'Async Art', 'Auction Houses', 'Foundation', 'hic et nunc', 'KnownOrigin', 'MakersPlace', 'Nifty Gateway', and 'SuperRare'.",
                "type": "str, optional",
                "default": ""
            },
            "sort": {
                "description": "The parameter by which to sort the results. Defaults to 'date_sold'.",
                "type": "str",
                "default": "date_sold"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_synonyms",
        "description": "Fetches synonyms of a specific word using the Dicolink API.",
        "parameters": {
            "mot": {
                "description": "The word for which to fetch synonyms.",
                "type": "str",
                "default": "cheval"
            },
            "limite": {
                "description": "The maximum number of synonyms to return. Defaults to '10'.",
                "type": "str, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "latest_rates",
        "description": "Fetches the latest real-time exchange rates for given symbols based on a specified base currency.",
        "parameters": {
            "symbols": {
                "description": "Comma-separated list of currency or commodity codes to retrieve rates for.",
                "type": "str",
                "default": "BRENTOIL"
            },
            "base": {
                "description": "Three-letter currency or commodity code to use as the base currency.",
                "type": "str",
                "default": "USD"
            }
        },
        "domain": "Data"
    },
    {
        "name": "us_license_plate_to_vin",
        "description": "Converts a U.S. state license plate number to a Vehicle Identification Number (VIN).",
        "parameters": {
            "state_code": {
                "description": "A two-letter U.S. state code where the license plate is registered. Examples include 'CA' for California, 'NY' for New York, etc.",
                "type": "str",
                "default": "AL"
            },
            "license_plate": {
                "description": "The license plate number for which to find the VIN.",
                "type": "str",
                "default": "S8TAN"
            }
        },
        "domain": "Data"
    },
    {
        "name": "namebydomain",
        "description": "Fetch the organization name using a given domain through the RapidAPI service.",
        "parameters": {
            "domain": {
                "description": "The domain name for which the organization name is to be fetched.",
                "type": "str",
                "default": "tftus.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "consulta_receita_federal",
        "description": "Fetch data from the Receita Federal using a given tax ID.",
        "parameters": {
            "taxid": {
                "description": "The tax ID to search for in the Receita Federal database.",
                "type": "str",
                "default": "37335118000180"
            },
            "maxage": {
                "description": "The maximum age of the data to be fetched. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            }
        },
        "domain": "Data"
    },
    {
        "name": "searchentries",
        "description": "Search for entries with various filters in the query.",
        "parameters": {
            "sample": {
                "description": "Number of randomly-sampled results to return.",
                "type": "int, optional",
                "default": ""
            },
            "source": {
                "description": "The resource to search within.",
                "type": "str, optional",
                "default": ""
            },
            "language": {
                "description": "The language code of the entry\u2019s language.",
                "type": "str, optional",
                "default": ""
            },
            "analyzed": {
                "description": "Whether to search using the language analyzer or to get exact matches only.",
                "type": "bool, optional",
                "default": ""
            },
            "subcategorization": {
                "description": "The subcategorization (e.g., countable, transitive) to search for.",
                "type": "str, optional",
                "default": ""
            },
            "polysemous": {
                "description": "Whether to only return polysemous entries.",
                "type": "bool, optional",
                "default": ""
            },
            "pos": {
                "description": "The part of speech (POS) to search for.",
                "type": "str, optional",
                "default": ""
            },
            "gender": {
                "description": "The grammatical gender to search for.",
                "type": "str, optional",
                "default": ""
            },
            "monosemous": {
                "description": "Whether to only return monosemous entries.",
                "type": "bool, optional",
                "default": ""
            },
            "morph": {
                "description": "Whether to search in headword inflections, if they exist.",
                "type": "bool, optional",
                "default": ""
            },
            "text": {
                "description": "The headword text to search for.",
                "type": "str, optional",
                "default": ""
            },
            "number": {
                "description": "The grammatical number to search for.",
                "type": "str, optional",
                "default": ""
            },
            "page": {
                "description": "Page number of results to return (1-indexed).",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_company_ads_count",
        "description": "Fetch the number of ads a specific company has posted on LinkedIn using the Toolbench RapidAPI.",
        "parameters": {
            "company_id": {
                "description": "The unique identifier of the company whose ad count is to be fetched.",
                "type": "str",
                "default": "162479"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_post_by_id",
        "description": "Retrieves a fake post by its ID from the specified API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the fake post to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_open_profile_status",
        "description": "Check if a given LinkedIn profile URL has an open profile using the RapidAPI service.",
        "parameters": {
            "linkedin_url": {
                "description": "The URL of the LinkedIn profile to check.",
                "type": "str",
                "default": "https://www.linkedin.com/in/williamhgates/"
            }
        },
        "domain": "Data"
    },
    {
        "name": "aircraft_scatter_data",
        "description": "Fetch aircraft data above 10,000 feet within 1000 kilometers from the specified latitude and longitude.",
        "parameters": {
            "lat": {
                "description": "Latitude coordinate for the center point of the search radius.",
                "type": "int",
                "default": "51.533"
            },
            "lon": {
                "description": "Longitude coordinate for the center point of the search radius.",
                "type": "int",
                "default": "-0.0926"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_post",
        "description": "Generates a list of fake posts by calling an external API.",
        "parameters": {
            "size": {
                "description": "The number of fake posts to generate. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "product_groups_list",
        "description": "Fetches a list of product groups based on specified categories and types with optional pagination.",
        "parameters": {
            "size": {
                "description": "The number of items per response. Maximum is 500. Defaults to 100.",
                "type": "int, optional",
                "default": "100"
            },
            "productgrouptypeid": {
                "description": "The ID representing the type of product group.",
                "type": "int, optional",
                "default": ""
            },
            "page": {
                "description": "The page index starting from 0 for pagination purposes.",
                "type": "int, optional",
                "default": ""
            },
            "parentproductgroupid": {
                "description": "The ID of the parent product group to filter the results.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "url_metrics",
        "description": "Fetches and returns various metrics for a given target URL, such as Domain Authority Score, Page Authority Score, Spam Score, and Total Backlinks, using the Toolbench RapidAPI service.",
        "parameters": {
            "target": {
                "description": "The target URL, page, or domain for which to fetch the metrics.",
                "type": "str",
                "default": "www.google.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getchapter",
        "description": "Fetches a specific chapter from a specified book of the Bible using the Ajith Holy Bible API.",
        "parameters": {
            "book": {
                "description": "The name of the book from the Bible.",
                "type": "str",
                "default": "Luke"
            },
            "chapter": {
                "description": "The chapter number from the specified book.",
                "type": "int",
                "default": "8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "products",
        "description": "Fetch products from the Facebook Marketplace using the RapidAPI.",
        "parameters": {
            "no_of_save": {
                "description": "Minimum number of saves for the listed items. Defaults to 25.",
                "type": "int, optional",
                "default": "25"
            },
            "min_sales": {
                "description": "Minimum number of sales for the listed items. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            },
            "min_price": {
                "description": "Minimum price for the listed items. Defaults to '2.00'.",
                "type": "str, optional",
                "default": "2.00"
            },
            "category": {
                "description": "Category of the listed items. Defaults to 'Apparel'.",
                "type": "str, optional",
                "default": "Apparel"
            },
            "city": {
                "description": "City where the items are listed. Defaults to 'New York'.",
                "type": "str, optional",
                "default": "New York"
            },
            "page": {
                "description": "Page number for pagination. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandom",
        "description": "Retrieve a random sequence of characters based on the specified attributes.",
        "parameters": {
            "length": {
                "description": "The length of the random sequence to generate.",
                "type": "int",
                "default": ""
            },
            "case": {
                "description": "Specifies the case for the character sequence. Defaults to 'all'.",
                "type": "str, optional",
                "default": "all"
            },
            "extra": {
                "description": "Specifies whether to include special characters in the sequence. Defaults to 'true'.",
                "type": "str, optional",
                "default": "true"
            },
            "type": {
                "description": "Specifies the type of sequence (e.g., 'all', 'string', 'number', 'special'). Defaults to 'all'.",
                "type": "str, optional",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_data_and_story",
        "description": "Fetches data and story for a given Snapchat username using the RapidAPI service.",
        "parameters": {
            "user": {
                "description": "The Snapchat username for which to fetch the data and story.",
                "type": "str",
                "default": "ysyn_lny"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_region_info",
        "description": "Retrieves region information from the given Redfin URL using the RapidAPI service.",
        "parameters": {
            "url": {
                "description": "The input value can be a full URL (e.g., 'https://www.redfin.com/zipcode/01026') or a sub URL (e.g., '/zipcode/01026'). Use the Auto-complete API to obtain the property URL if needed.",
                "type": "str",
                "default": "https://www.redfin.com/zipcode/01026"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_verse_by_bookname",
        "description": "Fetches a specific verse from the Bible given the verse ID, book name, and chapter ID using the Toolbench RapidAPI.",
        "parameters": {
            "verseid": {
                "description": "The ID of the verse to retrieve.",
                "type": "int",
                "default": "1"
            },
            "bookname": {
                "description": "The name of the book in the Bible.",
                "type": "str",
                "default": "Revelation"
            },
            "chapterid": {
                "description": "The chapter number within the specified book.",
                "type": "int",
                "default": "12"
            }
        },
        "domain": "Data"
    },
    {
        "name": "channel_details",
        "description": "Retrieves detailed information about a YouTube channel using the RapidAPI YouTube Data API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the YouTube channel to retrieve details for.",
                "type": "str",
                "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"
            },
            "hl": {
                "description": "The language code for the response (default is 'en').",
                "type": "str, optional",
                "default": "en"
            },
            "gl": {
                "description": "The country code for the response (default is 'US').",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "generate_qr_code",
        "description": "Generates a QR code for the given URL using the RapidAPI service.",
        "parameters": {
            "url": {
                "description": "The URL or text to encode in the QR code.",
                "type": "str",
                "default": "https://farhanaliofficial.github.io"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_owners",
        "description": "Retrieve the list of owners for a given NFT including the quantity owned.",
        "parameters": {
            "asset_contract_address": {
                "description": "The contract address of the NFT asset.",
                "type": "str",
                "default": "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
            },
            "token_id": {
                "description": "The unique identifier of the NFT.",
                "type": "str",
                "default": "1"
            },
            "limit": {
                "description": "The maximum number of results to return. Defaults to '20'.",
                "type": "str, optional",
                "default": "20"
            },
            "cursor": {
                "description": "An opaque value used for pagination to retrieve the next set of results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "order_by": {
                "description": "The field by which to sort the results. Defaults to 'created_date'.",
                "type": "str, optional",
                "default": "created_date"
            },
            "order_direction": {
                "description": "The direction to sort the results, either 'asc' for ascending or 'desc' for descending. Defaults to 'desc'.",
                "type": "str, optional",
                "default": "desc"
            }
        },
        "domain": "Data"
    },
    {
        "name": "salvagecheck",
        "description": "Checks if a given Vehicle Identification Number (VIN) has been listed in a salvage database.",
        "parameters": {
            "vin": {
                "description": "A 17-character VIN from North America.",
                "type": "str",
                "default": "1G1JC5SHXC4134208"
            }
        },
        "domain": "Data"
    },
    {
        "name": "products_list",
        "description": "Retrieves a list of products from different categories using the specified criteria.",
        "parameters": {
            "productgroupid": {
                "description": "The ID of the product group to filter by. This is the value of the `_id` field returned by the `/product-groups/list` endpoint. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "size": {
                "description": "The number of items per response for pagination purposes. The maximum value is 250. Defaults to 100.",
                "type": "int, optional",
                "default": "100"
            },
            "page": {
                "description": "The page index for pagination purposes, starting from 0. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "area_code",
        "description": "Fetches the International Country Calling Code and the Local Area Code information for a given country and region using the Metropolis API.",
        "parameters": {
            "country": {
                "description": "The ISO 2-letter country code or the name of the country in English.",
                "type": "str",
                "default": "BR"
            },
            "region": {
                "description": "The geographic region (e.g., city) without accented letters.",
                "type": "str",
                "default": "Manaus"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandomarray",
        "description": "Generate a random array with specified data type and size using the Toolbench RapidAPI service.",
        "parameters": {
            "data_type": {
                "description": "The type of data to include in the array. Options are 'string', 'number', 'mixed', etc. Default is 'string'.",
                "type": "str",
                "default": "string"
            },
            "size": {
                "description": "The number of elements in the array. Default is 5.",
                "type": "int",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_regions",
        "description": "Fetches the regions of a specified country using the provided API key.",
        "parameters": {
            "country_code": {
                "description": "The ISO code of the country for which regions are to be fetched. The country code can be obtained from the \"Get Countries\" endpoint.",
                "type": "str",
                "default": "ph"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_credit_card_by_id",
        "description": "Retrieve fake credit card details by ID using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The ID used to retrieve the fake credit card details.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_dns_records",
        "description": "Fetch DNS records for a given domain using the specified parameters.",
        "parameters": {
            "domain": {
                "description": "The domain for which to fetch the DNS records.",
                "type": "str",
                "default": "rapidapi.com"
            },
            "record_type": {
                "description": "A comma-separated string specifying the types of DNS records to fetch. Possible values include 'a', 'ns', 'mx', 'txt', and 'cname'. Defaults to 'a,mx'.",
                "type": "str, optional",
                "default": "a,mx"
            },
            "response_type_seperator": {
                "description": "Specifies the delimiter to use when the response type is 'target'. Default is ',' (comma).",
                "type": "str, optional",
                "default": ","
            },
            "response_type": {
                "description": "Specifies the kind of data to return, such as 'ip', 'txt', or 'target'. Default is 'target'.",
                "type": "str, optional",
                "default": "target"
            }
        },
        "domain": "Data"
    },
    {
        "name": "strongs_number_detail_api",
        "description": "Fetches detailed information for one or more Strong's Numbers from the Complete Study Bible API.",
        "parameters": {
            "comma_separated_strongs_numbers": {
                "description": "A comma-separated list of Strong's Numbers (up to 3 at a time).",
                "type": "str",
                "default": "G4931,G5000"
            }
        },
        "domain": "Data"
    },
    {
        "name": "exchange",
        "description": "Converts an amount of money from one currency to another using a currency conversion API.",
        "parameters": {
            "base": {
                "description": "The currency code to convert from (e.g., 'USD', 'EUR').",
                "type": "str",
                "default": "USD"
            },
            "to": {
                "description": "The target currency code to convert to.",
                "type": "str",
                "default": "EUR"
            },
            "int": {
                "description": "The amount of money to convert, default is '1'.",
                "type": "str, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "topic_headlines",
        "description": "Fetches the latest news headlines for a specified topic.",
        "parameters": {
            "topic": {
                "description": "The topic for which to get news headlines. Available topics include:",
                "type": "str",
                "default": "WORLD"
            },
            "lang": {
                "description": "The language for the results, specified as a 2-letter language code (ISO 639-1 alpha-2). Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "country": {
                "description": "The country code for filtering the results (ISO 3166-1 alpha-2). Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fastsearchfull",
        "description": "Fetch detailed information using the Fast API for a given search term.",
        "parameters": {
            "fastav": {
                "description": "The search query string.",
                "type": "str",
                "default": "https://www.avito.ma/fr/maroc/jeux_vid%C3%A9o_et_consoles-%C3%A0_vendre?cities=8,5&price_min=350&price_max=1200"
            }
        },
        "domain": "Data"
    },
    {
        "name": "domain_analysis",
        "description": "Analyzes a given domain and retrieves various metrics such as domain length, past sales, and number of mentions using the RapidAPI service.",
        "parameters": {
            "domain": {
                "description": "The domain name to be analyzed. Defaults to 'dailynews.com'.",
                "type": "str",
                "default": "dailynews.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "playlist_details",
        "description": "Retrieves the details of a YouTube playlist based on the provided playlist ID using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The ID of the YouTube playlist to fetch details for. Default is 'PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr'.",
                "type": "str",
                "default": "PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr"
            }
        },
        "domain": "Data"
    },
    {
        "name": "trending_videos",
        "description": "Fetches a list of trending YouTube videos based on the given parameters.",
        "parameters": {
            "country": {
                "description": "The country code for which to retrieve trending videos. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "lang": {
                "description": "The language code for the video titles and descriptions. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "section": {
                "description": "The section of trending videos to retrieve. Possible values are \"Now\", \"Music\", \"Movies\", \"Gaming\". Defaults to 'Now'.",
                "type": "str, optional",
                "default": "Now"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandomuser",
        "description": "Fetches random user data such as name, e-mail, etc., from the specified API.",
        "parameters": {
            "count": {
                "description": "The number of user records to retrieve. Defaults to -2 if not specified.",
                "type": "int",
                "default": "-2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_call",
        "description": "Fetches the API result using the given request ID.",
        "parameters": {
            "request_id": {
                "description": "The unique identifier for the API request.",
                "type": "str",
                "default": "76d1c748-51ed-435b-bcd8-3d9c9d3eb68a"
            }
        },
        "domain": "Data"
    },
    {
        "name": "text",
        "description": "Converts the input text into a fancy text format using the Ajith Fancy Text API.",
        "parameters": {
            "text": {
                "description": "The text to be converted into fancy text.",
                "type": "str",
                "default": "This is funny."
            }
        },
        "domain": "Data"
    },
    {
        "name": "extract",
        "description": "Extracts readable content and metadata from a given URL using the Toolbench RapidAPI.",
        "parameters": {
            "url": {
                "description": "The URL of the article to extract content and metadata from.",
                "type": "str",
                "default": "cognitivecamp.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_info_by_city",
        "description": "Fetches geographic information for a specific city, state, and country using the Zippopotamus API.",
        "parameters": {
            "country": {
                "description": "The country code (e.g., 'US' for the United States).",
                "type": "str",
                "default": "us"
            },
            "state": {
                "description": "The state or region code within the country.",
                "type": "str",
                "default": "ma"
            },
            "city": {
                "description": "The name of the city.",
                "type": "str",
                "default": "belmont"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_emails",
        "description": "Search the web for email addresses based on a specified email domain and query.",
        "parameters": {
            "email_domain": {
                "description": "The email domain to search within (e.g., wsgr.com, gmail.com).",
                "type": "str",
                "default": "gmail.com"
            },
            "query": {
                "description": "The search query to use, which can include names, job titles, locations, etc.",
                "type": "str",
                "default": "car dealer california usa"
            },
            "limit": {
                "description": "The maximum number of emails to return. Defaults to 100. Accepts values from 1 to 5000.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "countries_list",
        "description": "Returns a list of countries where Asos supports selling products.",
        "parameters": {
            "lang": {
                "description": "The language code for the country names. Defaults to 'en-US'.",
                "type": "str",
                "default": "en-US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "current_weather_data_of_a_location",
        "description": "Fetch the current weather data for a given location based on longitude and latitude.",
        "parameters": {
            "lon": {
                "description": "The longitude of the location.",
                "type": "str",
                "default": "38.5"
            },
            "lat": {
                "description": "The latitude of the location.",
                "type": "str",
                "default": "-78.5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_balance",
        "description": "Fetch the balance of a specific token for a given address using the PancakeSwap API.",
        "parameters": {
            "address": {
                "description": "The address for which to retrieve the token balance.",
                "type": "str",
                "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
            },
            "token": {
                "description": "The token for which the balance is to be retrieved.",
                "type": "str",
                "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
            }
        },
        "domain": "Data"
    },
    {
        "name": "domain_seo_analysis",
        "description": "Fetch popular SEO metrics for a specified domain name, optionally considering the search from a specific country's perspective.",
        "parameters": {
            "domain": {
                "description": "The domain name to analyze for SEO metrics.",
                "type": "str",
                "default": "apify.com"
            },
            "country": {
                "description": "Specify the proxy location for the search. Supported countries include 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_holidays",
        "description": "Retrieve the list of holidays for a specified country and year using the Toolbench RapidAPI service.",
        "parameters": {
            "country": {
                "description": "The name of the country for which to retrieve holidays. Fuzzy search is supported.",
                "type": "str",
                "default": "USA"
            },
            "year": {
                "description": "The year for which to retrieve holidays. Defaults to 2023.",
                "type": "int, optional",
                "default": 2023
            }
        },
        "domain": "Data"
    },
    {
        "name": "open_high_low_close_ohlc_price",
        "description": "Gets the open, high, low, and close prices for a given symbol and date by querying the API.",
        "parameters": {
            "symbols": {
                "description": "The three-letter currency code or commodity code for which to get the price data.",
                "type": "str",
                "default": "BRENTOIL"
            },
            "date": {
                "description": "The date for which to retrieve the price data.",
                "type": "str",
                "default": "2022-01-10"
            },
            "base": {
                "description": "The three-letter currency code or commodity code of the base currency.",
                "type": "str",
                "default": "USD"
            }
        },
        "domain": "Data"
    },
    {
        "name": "related_videos",
        "description": "Fetches videos related to a specified video using the YouTube V3 API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the video for which to fetch related videos.",
                "type": "str",
                "default": "dQw4w9WgXcQ"
            },
            "x_cachebypass": {
                "description": "Cache bypass parameter; pass '1' to bypass the cache. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "geo": {
                "description": "ISO 3166-2 country code of the region (e.g., 'US', 'UK', 'CA'). Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "lang": {
                "description": "Locale/language for the request (e.g., 'en', 'gb', 'hi'). Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "token": {
                "description": "Pagination token for fetching additional results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "captions_list",
        "description": "Returns a list of caption tracks associated with a specified YouTube video.",
        "parameters": {
            "part": {
                "description": "The part parameter specifies a comma-separated list of one or more caption resource properties that the API response will include.",
                "type": "str",
                "default": "snippet"
            },
            "videoid": {
                "description": "The YouTube video ID for which the caption tracks are being requested.",
                "type": "str",
                "default": "M7FIvfx5J10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_content",
        "description": "Retrieves the content from the given URL using the RapidAPI service.",
        "parameters": {
            "url": {
                "description": "The URL of the webpage from which to extract content.",
                "type": "str",
                "default": "https://www.cnbc.com/2022/06/27/three-arrows-capital-crypto-hedge-fund-defaults-on-voyager-loan.html"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getlocationinfobyzipcode",
        "description": "Fetches location information based on the provided zip code using the Zillow API.",
        "parameters": {
            "zipcode": {
                "description": "The zip code to retrieve location information for.",
                "type": "str",
                "default": "01003"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ean13",
        "description": "Generates an EAN13 barcode as a PNG or returns an error based on a given 12-13 length code. For a 12-digit code, the check digit is automatically calculated; for a 13-digit code, the check digit is verified.",
        "parameters": {
            "code": {
                "description": "A 12 or 13 character string representing the barcode.",
                "type": "str",
                "default": "9788804660243"
            }
        },
        "domain": "Data"
    },
    {
        "name": "list_of_cities_in_one_country",
        "description": "Fetches the list of cities in a specified country via the Weather Forecast API.",
        "parameters": {
            "lang": {
                "description": "The language in which the city names should be returned. Defaults to 'en'. Supported languages include 'en', 'fr', 'pl', 'pt', 'es', 'it', 'gr', 'tr', 'ru', 'cn', 'cz'.",
                "type": "str",
                "default": "en"
            },
            "country": {
                "description": "The country code for which the cities should be listed. Defaults to 'UK'.",
                "type": "str",
                "default": "UK"
            }
        },
        "domain": "Data"
    },
    {
        "name": "hashtag_info",
        "description": "Fetches information about a specific TikTok hashtag using the Toolbench RapidAPI.",
        "parameters": {
            "hashtag": {
                "description": "The TikTok hashtag for which to retrieve information.",
                "type": "str",
                "default": "bts"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_address_by_id",
        "description": "Retrieve a fake address based on a given ID using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "The ID for which to retrieve the fake address.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "new_ios_apps",
        "description": "Fetch a list of new iOS apps from the App Store using the RapidAPI service.",
        "parameters": {
            "country": {
                "description": "The country code for the App Store. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "category": {
                "description": "The category code for the type of apps. Defaults to '6016'.",
                "type": "str, optional",
                "default": "6016"
            },
            "lang": {
                "description": "The language code for the App Store content. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "num": {
                "description": "The number of results to return. Defaults to 100.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "walk_transit_and_bike_scores",
        "description": "Fetches Walk, Transit, and Bike Scores for a property using the given ZPID.",
        "parameters": {
            "zpid": {
                "description": "The Zillow Property ID for which the scores are to be fetched. Default is '20485700'.",
                "type": "str",
                "default": "20485700"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_appears_on",
        "description": "Fetches tracks where the specified artist appears.",
        "parameters": {
            "is_id": {
                "description": "The Spotify artist ID to look up.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "places",
        "description": "Fetches a specified number of places from the RapidAPI seeding-data service.",
        "parameters": {
            "quantity": {
                "description": "The number of places to retrieve.",
                "type": "int",
                "default": 100
            }
        },
        "domain": "Data"
    },
    {
        "name": "property_details",
        "description": "Fetches property details from the Zillow API.",
        "parameters": {
            "zpid": {
                "description": "The Zillow Property ID. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "property_url": {
                "description": "The URL of the property on Zillow. Defaults to 'https://www.zillow.com/homedetails/101-California-Ave-UNIT-303-Santa-Monica-CA-90403/20485700_zpid/'.",
                "type": "str, optional",
                "default": "https://www.zillow.com/homedetails/101-California-Ave-UNIT-303-Santa-Monica-CA-90403/20485700_zpid/"
            }
        },
        "domain": "Data"
    },
    {
        "name": "image_to_text_ocr",
        "description": "Extracts text from an image using the Google Lens OCR API and provides detailed detections at the paragraph, sentence, and word levels.",
        "parameters": {
            "url": {
                "description": "The URL of the image from which to extract text.",
                "type": "str",
                "default": "https://s3-us-west-2.amazonaws.com/courses-images/wp-content/uploads/sites/1844/2017/06/15213029/images-textwrap-topbottom.png"
            },
            "language": {
                "description": "The language of the results, specified as a 2-letter ISO 639-1 code (e.g., 'en' for English). Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "exact_url",
        "description": "Retrieves backlinks for a specified domain using the Best Backlink Checker API.",
        "parameters": {
            "domain": {
                "description": "The domain for which backlinks are to be retrieved.",
                "type": "str",
                "default": "https://codeconia.com/2021/05/28/html-form-to-email-with-attachment-using-php/"
            }
        },
        "domain": "Data"
    },
    {
        "name": "street_level_outcomes",
        "description": "Fetches street-level outcomes such as crime data for a given location, either at a specific point, within a 1-mile radius, or within a custom area for a specified date.",
        "parameters": {
            "date": {
                "description": "The date for which to fetch outcomes, formatted as 'YYYY-MM'.",
                "type": "str",
                "default": "2013-01"
            },
            "lat": {
                "description": "The latitude of the specific location.",
                "type": "str",
                "default": "52.629729"
            },
            "lng": {
                "description": "The longitude of the specific location.",
                "type": "str",
                "default": "-1.131592"
            }
        },
        "domain": "Data"
    },
    {
        "name": "products_get_offers",
        "description": "Fetches offers for a specific product model from various sites.",
        "parameters": {
            "modelid": {
                "description": "The unique identifier of the product model for which to fetch offers.",
                "type": "int",
                "default": "397144"
            },
            "page": {
                "description": "The page index for pagination, starting from 0. Default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "size": {
                "description": "The number of items per page for pagination. Default is 100.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "trending_with_pagination",
        "description": "Fetches trending NFT collections from OpenSea with pagination support.",
        "parameters": {
            "limit": {
                "description": "The number of collections to fetch. Default is 50.",
                "type": "int, optional",
                "default": "50"
            },
            "offset": {
                "description": "The number of collections to skip before starting to fetch. Default is 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "phone_number",
        "description": "Validates a given phone number using the Phone and Email Validator API from RapidAPI.",
        "parameters": {
            "phone": {
                "description": "The phone number to be validated in E164 format (e.g., '19542567890' for USA).",
                "type": "str",
                "default": "12345678900 for US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "crime_categories",
        "description": "Fetches a list of valid crime categories for a specified date from the Data Police UK API.",
        "parameters": {
            "date": {
                "description": "The date for which to fetch crime categories, formatted as 'YYYY-MM'.",
                "type": "str",
                "default": "2013-06"
            }
        },
        "domain": "Data"
    },
    {
        "name": "town",
        "description": "Retrieves information about a specified town, such as province and block, using the Mzansi Loadshedding API.",
        "parameters": {
            "town": {
                "description": "The name of the town for which information is being requested.",
                "type": "str",
                "default": "kagiso"
            }
        },
        "domain": "Data"
    },
    {
        "name": "reddit",
        "description": "Checks if a given username is available on Reddit using the Toolbench RapidAPI service.",
        "parameters": {
            "username": {
                "description": "The Reddit username to check for availability.",
                "type": "str",
                "default": "username"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_by_category",
        "description": "Fetch a list of plants by their category from the house-plants API.",
        "parameters": {
            "category": {
                "description": "The category of plants to fetch. Defaults to 'flower'.",
                "type": "str",
                "default": "flower"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_discography_overview",
        "description": "Fetches the discography overview of an artist from the Spotify API using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "The ID of the artist for which the discography overview is to be retrieved.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fresh_potential_gems",
        "description": "Fetches a list of recently added cryptocurrency coins from the Crypto Gem Finder API.",
        "parameters": {
            "limit": {
                "description": "The maximum number of recently added coins to fetch. Defaults to '10'.",
                "type": "str, optional",
                "default": "10"
            },
            "page": {
                "description": "The page number to fetch results from. Defaults to '1'.",
                "type": "str, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "event",
        "description": "Fetches the details of a single event using its ID from the Spectation Sports Events API.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the event to be fetched.",
                "type": "int",
                "default": "52"
            }
        },
        "domain": "Data"
    },
    {
        "name": "historical_rates",
        "description": "Retrieves historical commodity rates for the given date, base currency, and target symbols using the Commodity Rates API.",
        "parameters": {
            "base": {
                "description": "The base currency to use for retrieving rates.",
                "type": "str",
                "default": "USD"
            },
            "symbols": {
                "description": "The target symbols for which to retrieve rates.",
                "type": "str",
                "default": "COTTON"
            },
            "date": {
                "description": "The historical date for the rates in the format YYYY-MM-DD.",
                "type": "str",
                "default": "2022-01-19"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_ranking",
        "description": "Fetches the top NFT collections from OpenSea based on specified criteria.",
        "parameters": {
            "sortby": {
                "description": "Criteria to sort the NFT collections. Default is 'ONE_HOUR_VOLUME'.",
                "type": "str",
                "default": "ONE_HOUR_VOLUME"
            },
            "time": {
                "description": "Time period for ranking the collections. Default is 'ONE_HOUR'.",
                "type": "str",
                "default": "ONE_HOUR"
            },
            "chain": {
                "description": "Blockchain chain to filter the collections. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "count": {
                "description": "Number of collections to retrieve. Default is 100.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "business_search",
        "description": "Search for Yelp businesses by keyword and location, with options for pagination, price range, domain, and sorting order.",
        "parameters": {
            "location": {
                "description": "The location to search for businesses (e.g., \"New York, NY, USA\").",
                "type": "str",
                "default": "San Francisco, CA, USA"
            },
            "query": {
                "description": "The search keyword or query (e.g., \"Plumbing\", \"Chinese restaurants\").",
                "type": "str",
                "default": "Plumbers"
            },
            "start": {
                "description": "The number of results to skip, mainly used for pagination. Default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "price_range": {
                "description": "Specific price ranges to search for, specified as a comma-delimited list (e.g., \"$,$$\", \"$$\")",
                "type": "str, optional",
                "default": ""
            },
            "yelp_domain": {
                "description": "The Yelp domain to use for the search. Default is 'yelp.com'. Supported domains include 'yelp.com', 'yelp.com.au', 'yelp.co.nz', and others.",
                "type": "str, optional",
                "default": "yelp.com"
            },
            "sort_by": {
                "description": "The order to sort the search results by. Default is 'RECOMMENDED'. Allowed values are 'RECOMMENDED', 'HIGHEST_RATED', 'REVIEW_COUNT'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "check_domain_info",
        "description": "Fetches and returns information about a given domain using the RapidAPI Domain Info service.",
        "parameters": {
            "domain": {
                "description": "The domain name for which information is to be retrieved.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_subcontrol_by_control",
        "description": "Fetches all subcontrols or CCIs associated with a specified control.",
        "parameters": {
            "control": {
                "description": "The identifier of the control (e.g., \"AC-1\") for which subcontrols or CCIs are to be fetched.",
                "type": "str",
                "default": "AC-1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "country_specific_country",
        "description": "Fetches details for a specific country in Africa using the Africa API.",
        "parameters": {
            "country_name": {
                "description": "The name of the country to fetch details for.",
                "type": "str",
                "default": "kenya"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_ip_information",
        "description": "Fetches information about a given IP address using the Toolbench API.",
        "parameters": {
            "query": {
                "description": "The IP address to query information about.",
                "type": "str",
                "default": "188.68.223.26"
            },
            "lang": {
                "description": "The language of the response. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_grossing_games",
        "description": "Fetches the top-grossing games chart from the Google Play Store, with support for filtering by category, language, and region.",
        "parameters": {
            "limit": {
                "description": "The maximum number of results to return. Allowed values are between 1 and 200. Default is 50. Note that requests with a limit value between 101-200 will be charged double (2 requests).",
                "type": "int, optional",
                "default": "50"
            },
            "language": {
                "description": "The language to use, specified as a 2-letter language code according to ISO 639-1. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "category": {
                "description": "The specific Google Play category to filter the chart by (e.g., 'GAME_RACING'). Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "The 2-letter country code according to ISO 3166-1 to specify the region. Default is 'us'.",
                "type": "str, optional",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "superfund_search",
        "description": "Search for Superfund sites based on provided latitude, longitude, and radius.",
        "parameters": {
            "radius": {
                "description": "The radius within which to search for Superfund sites.",
                "type": "str",
                "default": "2"
            },
            "lat": {
                "description": "The latitude coordinate for the center of the search.",
                "type": "str",
                "default": "37.391935"
            },
            "lng": {
                "description": "The longitude coordinate for the center of the search.",
                "type": "str",
                "default": "-122.079515"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getallcountry",
        "description": "Fetches the list of country names via an API based on the provided query parameters.",
        "parameters": {
            "limit": {
                "description": "The maximum number of items per page. Default is 500.",
                "type": "int, optional",
                "default": "500"
            },
            "page": {
                "description": "The page number to retrieve. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "order": {
                "description": "The order in which to sort results. Accepts 'ASC' for ascending or 'DESC' for descending. Default is 'ASC'.",
                "type": "str, optional",
                "default": "ASC"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_overview",
        "description": "Fetches the overview of an artist from the Spotify API using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier of the artist to retrieve information for.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "business_reviews",
        "description": "Fetches and paginates business reviews by Business ID.",
        "parameters": {
            "business_id": {
                "description": "Unique Business ID. Accepts google_id, business_id, and google_place_id. Examples of valid ids: `0x880fd393d427a591:0x8cba02d713a995ed`, `ChIJkaUn1JPTD4gR7ZWpE9cCuow`.",
                "type": "str",
                "default": "0x89c259b5a9bd152b:0x31453e62a3be9f76"
            },
            "language": {
                "description": "Language code for the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "fields": {
                "description": "A comma-separated list of review fields to include in the response. Default is None, which returns all fields.",
                "type": "str, optional",
                "default": ""
            },
            "sort_by": {
                "description": "Sort order for the reviews, allowed values are `most_relevant`, `newest`, `highest_ranking`, `lowest_ranking`. Default is 'most_relevant'.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "Region or country code to query Google Maps from, see https://en.wikipedia.org/wiki/List_of_ISO_3166-1_alpha-2 (Alpha-2 code). Default is 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "limit": {
                "description": "Maximum number of business reviews to return (1-150). Default is 5.",
                "type": "int, optional",
                "default": "5"
            },
            "offset": {
                "description": "Number of business reviews to skip for pagination. Default is None.",
                "type": "int, optional",
                "default": ""
            },
            "query": {
                "description": "Filter reviews matching a text query. Default is None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "expiry_date_enquiry",
        "description": "Queries the expiry date of a vehicle's license registration using the given registration number.",
        "parameters": {
            "rego": {
                "description": "The vehicle's registration number.",
                "type": "str",
                "default": "1HNT923"
            }
        },
        "domain": "Data"
    },
    {
        "name": "tourism_allcountries",
        "description": "This function retrieves tourism locations and categories for a given country in Africa using the Toolbench RapidAPI.",
        "parameters": {
            "country_name": {
                "description": "The name of the country in Africa for which to retrieve tourism information.",
                "type": "str",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_news",
        "description": "Fetches the current top news based on the specified region and language.",
        "parameters": {
            "region": {
                "description": "The region for which to fetch the top news. Defaults to 'US'.",
                "type": "str",
                "default": "US"
            },
            "hl": {
                "description": "The language code for the news. Defaults to 'en'.",
                "type": "str",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_singles",
        "description": "Fetches the singles of an artist from the Spotify API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the artist whose singles are to be fetched.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            },
            "offset": {
                "description": "The index of the first single to return. Defaults to '0'.",
                "type": "str, optional",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of singles to return. Defaults to '20'.",
                "type": "str, optional",
                "default": "20"
            }
        },
        "domain": "Data"
    },
    {
        "name": "years",
        "description": "Fetch data from a car API based on various search parameters related to years, makes, models, and trims.",
        "parameters": {
            "make_id": {
                "description": "The unique identifier for the make.",
                "type": "str, optional",
                "default": ""
            },
            "make": {
                "description": "The name of the car make.",
                "type": "str, optional",
                "default": ""
            },
            "year": {
                "description": "The model year of the car.",
                "type": "str, optional",
                "default": ""
            },
            "json": {
                "description": "A JSON-encoded string containing additional query conditions.",
                "type": "str, optional",
                "default": ""
            },
            "make_model_id": {
                "description": "The unique identifier for the make and model.",
                "type": "str, optional",
                "default": ""
            },
            "model": {
                "description": "The model name of the car.",
                "type": "str, optional",
                "default": ""
            },
            "trim": {
                "description": "The trim level of the car.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getuserbyid",
        "description": "Fetches and returns user information by user ID from a specified API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the user to fetch information for.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "album_metadata",
        "description": "Fetches metadata for a specified album from the Spotify API using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "The Spotify album ID. Defaults to '3IBcauSj5M2A6lTeffJzdv'.",
                "type": "str",
                "default": "3IBcauSj5M2A6lTeffJzdv"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_brands",
        "description": "Fetches cigar brands from the RapidAPI endpoint, allowing for pagination and optional search filtering.",
        "parameters": {
            "page": {
                "description": "The page number to retrieve for pagination.",
                "type": "int",
                "default": "1"
            },
            "search": {
                "description": "A search term to filter cigar brands. Defaults to 'Dominican'.",
                "type": "str, optional",
                "default": "Dominican"
            }
        },
        "domain": "Data"
    },
    {
        "name": "active_listings",
        "description": "Fetches active rental listings from the AirDNA API for a specified location and time period.",
        "parameters": {
            "location": {
                "description": "The location code for which to retrieve active rental listings.",
                "type": "str",
                "default": "santa monica"
            },
            "start_year": {
                "description": "The starting year for the time period.",
                "type": "int",
                "default": "2019"
            },
            "start_month": {
                "description": "The starting month for the time period.",
                "type": "int",
                "default": "5"
            },
            "number_of_months": {
                "description": "The number of months from the start date for which to retrieve data.",
                "type": "int",
                "default": "36"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_active_loans_offers",
        "description": "Retrieves the active loan offer levels for a specified collection.",
        "parameters": {
            "collection": {
                "description": "The identifier of the collection for which to retrieve active loan offers.",
                "type": "str",
                "default": "0xed5af388653567af2f388e6224dc7c4b3241c544"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_a_contract",
        "description": "Fetch detailed information about a specified asset contract from the OpenSea API.",
        "parameters": {
            "asset_contract_address": {
                "description": "The address of the asset contract to be retrieved.",
                "type": "str",
                "default": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
            }
        },
        "domain": "Data"
    },
    {
        "name": "download_stream",
        "description": "Downloads or streams video information from YouTube using the provided RapidAPI key.",
        "parameters": {
            "is_id": {
                "description": "YouTube Video ID to stream or download information.",
                "type": "str",
                "default": "UxxajLWwzqY"
            },
            "cgeo": {
                "description": "Country code in ISO 3166 format of the end user. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "skill_child",
        "description": "Fetches child skill data from an external API using provided identifiers.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the desired child skill data. Defaults to 'files/198956'.",
                "type": "str, optional",
                "default": "files/198956"
            }
        },
        "domain": "Data"
    },
    {
        "name": "pluses_and_minuses_of_the_car",
        "description": "Fetches the list of pluses and minuses for a specific car model using the ToolBench RapidAPI.",
        "parameters": {
            "year": {
                "description": "The year of manufacture of the car.",
                "type": "str",
                "default": "2012"
            },
            "make": {
                "description": "The make (manufacturer) of the car.",
                "type": "str",
                "default": "bmw"
            },
            "model": {
                "description": "The model of the car.",
                "type": "str",
                "default": "5 series"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_b",
        "description": "Performs a search query using the SEO API on a secondary search engine.",
        "parameters": {
            "query": {
                "description": "The search query string.",
                "type": "str",
                "default": "q=coffee+shop"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rip",
        "description": "Extracts links and information from a given URL using the Toolbench RapidAPI service.",
        "parameters": {
            "target": {
                "description": "The URL from which to extract links and information.",
                "type": "str",
                "default": "https://www.nytimes.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "gera_vis_o_da_rua",
        "description": "Generates a street view image for a given CNPJ using the Toolbench API.",
        "parameters": {
            "cnpj": {
                "description": "The CNPJ (Brazilian company identifier) for which the street view image is to be generated.",
                "type": "str",
                "default": "37335118000180"
            },
            "fov": {
                "description": "The field of view for the street view image. Default is None.",
                "type": "int, optional",
                "default": ""
            },
            "height": {
                "description": "The height of the street view image. Default is None.",
                "type": "int, optional",
                "default": ""
            },
            "width": {
                "description": "The width of the street view image. Default is None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getzipcodebycity",
        "description": "Fetches the zip code information for a given city using the Zillow API.",
        "parameters": {
            "city": {
                "description": "The name of the city for which the zip code is to be fetched.",
                "type": "str",
                "default": "Holtsville"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getsearchresults",
        "description": "Fetches the results from a specific YouTube influencer search using the provided search ID.",
        "parameters": {
            "is_id": {
                "description": "Unique identifier of the search.",
                "type": "str",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "most_expensive",
        "description": "Retrieves the list of most expensive artworks.",
        "parameters": {
            "sort": {
                "description": "The criterion by which to sort the artworks. Defaults to 'usd_price'.",
                "type": "str",
                "default": "usd_price"
            },
            "page": {
                "description": "The page number of the results to retrieve. Defaults to '1'.",
                "type": "str",
                "default": "1"
            },
            "gallery": {
                "description": "The gallery to filter results by. Possible values include:",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "time_zones",
        "description": "Retrieve all known time-zones.",
        "parameters": {
            "offset": {
                "description": "The zero-based offset index into the results.",
                "type": "str, optional",
                "default": ""
            },
            "hateoasmode": {
                "description": "Whether to include HATEOAS-style links in the results.",
                "type": "bool, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of results to retrieve.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_company_data_by_linkedin_url",
        "description": "Fetch company data using a given LinkedIn URL via the ToolBench RapidAPI.",
        "parameters": {
            "linkedin_url": {
                "description": "The LinkedIn URL of the company to retrieve data for.",
                "type": "str",
                "default": "https://www.linkedin.com/company/apple/"
            }
        },
        "domain": "Data"
    },
    {
        "name": "stopwords",
        "description": "Retrieves stopwords for specified languages and categories from the RapidAPI service.",
        "parameters": {
            "langs": {
                "description": "Comma-separated list of language ISO codes.",
                "type": "str, optional",
                "default": ""
            },
            "details": {
                "description": "Flag indicating whether to include details for each stopword.",
                "type": "bool, optional",
                "default": "0"
            },
            "categories": {
                "description": "Comma-separated list of categories. Use /categories to get category IDs.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "calculate_grid_coordinate_points",
        "description": "Calculate all grid coordinate points based on a center geocoordinate point and distance arguments.",
        "parameters": {
            "radius": {
                "description": "The distance between coordinate points (on the same row/column in the grid). The units of the radius are determined by the `radius_units` parameter. Allowed values are 0.1-100. Default is 1.",
                "type": "str",
                "default": "1"
            },
            "lng": {
                "description": "Grid center coordinate point longitude value.",
                "type": "str",
                "default": "-121.938314"
            },
            "grid_size": {
                "description": "The size of the grid (e.g., 3x3, 5x5, 7x7, etc). Allowed values are 3, 5, 7, 9, 11, 13, 15.",
                "type": "str",
                "default": "3"
            },
            "lat": {
                "description": "Grid center coordinate point latitude value.",
                "type": "str",
                "default": "37.341759"
            },
            "radius_units": {
                "description": "Distance measurement units for the radius parameter. Allowed values are 'km' for kilometers and 'mi' for miles. Default is 'km'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "cars",
        "description": "Fetches and filters a list of cars from the RapidAPI service.",
        "parameters": {
            "page": {
                "description": "The page number to retrieve.",
                "type": "str",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of results to return per page.",
                "type": "str",
                "default": "10"
            },
            "type": {
                "description": "Filter cars by type (e.g., SUV, sedan).",
                "type": "str, optional",
                "default": ""
            },
            "model": {
                "description": "Filter cars by model.",
                "type": "str, optional",
                "default": ""
            },
            "make": {
                "description": "Filter cars by make (manufacturer).",
                "type": "str, optional",
                "default": ""
            },
            "year": {
                "description": "Filter cars by year of manufacture.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "welcome",
        "description": "Fetches NFT-related data from the specified API using optional parameters.",
        "parameters": {
            "nft": {
                "description": "An optional string parameter to specify the NFT data to fetch. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "blogs_by_category",
        "description": "Fetches all blogs from a given category by its ID using the RapidAPI service.",
        "parameters": {
            "category": {
                "description": "The ID of the category to fetch blogs from.",
                "type": "int",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "subtitles",
        "description": "Retrieve the list of available subtitles for a given video using the YouTube API. This request uses a quota cost of 1 unit.",
        "parameters": {
            "is_id": {
                "description": "The ID of the video for which subtitles are being requested.",
                "type": "str",
                "default": "arj7oStGLkU"
            },
            "x_cachebypass": {
                "description": "Optional cache bypass parameter.",
                "type": "str, optional",
                "default": ""
            },
            "format": {
                "description": "The desired subtitle format. Options include:",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_vessels_by_ship_name",
        "description": "Fetches vessel information based on the given ship name using the RapidAPI service.",
        "parameters": {
            "name": {
                "description": "The name of the ship for which to retrieve vessel information.",
                "type": "str",
                "default": "ATLAS"
            }
        },
        "domain": "Data"
    },
    {
        "name": "shorts_sequence",
        "description": "Fetches a sequence of YouTube Shorts videos based on provided parameters.",
        "parameters": {
            "x_cachebypass": {
                "description": "Cache bypass, the value must be '1'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "lang": {
                "description": "Language code for localized results, e.g., 'en', 'gb', 'hi'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "geo": {
                "description": "ISO 3166-2 country code of the region, e.g., 'US' (default), 'UK', 'CA', 'IN'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "params": {
                "description": "Sequence continuation parameter, either 'sequenceContiuation' from Shorts Info Endpoint's response for WHATTOWATCH or 'continuation' from the previous request's response. Defaults to a predefined sequence continuation value.",
                "type": "str, optional",
                "default": "GhEKCzBJNkZXMkZYX2I4GAAgASoCGA9CAGIEUkRTSA%3D%3D.Cgt4QTg3Z0ltOWdScyi56NqeBg%3D%3D"
            },
            "is_id": {
                "description": "If the params value is not available, a Shorts Video ID may be provided (not recommended). Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "geogrid_seach_with_ranking",
        "description": "Perform a full grid search and retrieve the ranking of a business at every coordinate point in the grid. The grid cells in the results are ordered left-to-right, then top-to-bottom. Additional ranking data for the business is provided based on either place ID or business name.",
        "parameters": {
            "match_value": {
                "description": "The search query or keyword.",
                "type": "str",
                "default": "ChIJoejvAr3Mj4ARtHrbKxtAHXI"
            },
            "query": {
                "description": "The Google Place ID of the business or the business name to match in results. Use the `match_type` parameter to specify the choice.",
                "type": "str",
                "default": "web design"
            },
            "lng": {
                "description": "Longitude value of the grid center coordinate point.",
                "type": "int",
                "default": "-121.938314"
            },
            "lat": {
                "description": "Latitude value of the grid center coordinate point.",
                "type": "int",
                "default": "37.341759"
            },
            "zoom": {
                "description": "Google Maps zoom level to use for searching each grid point. Default is 13.",
                "type": "int, optional",
                "default": "13"
            },
            "match_type": {
                "description": "The type of match to perform for ranking. Either 'place_id' or 'name'. Default is 'place_id'.",
                "type": "str, optional",
                "default": "place_id"
            },
            "distance_unit": {
                "description": "The unit of measurement for distance. Default is 'km'.",
                "type": "str, optional",
                "default": "km"
            },
            "width": {
                "description": "The width of the grid in location points for non-square grid searches. Default is 5.",
                "type": "int, optional",
                "default": "5"
            },
            "height": {
                "description": "The height of the grid in location points for non-square grid searches. Default is 5.",
                "type": "int, optional",
                "default": "5"
            },
            "grid_size": {
                "description": "The size of the grid (e.g., 3x3, 5x5). Default is 5.",
                "type": "int, optional",
                "default": "5"
            },
            "distance": {
                "description": "The distance between coordinate points on the same row/column in the grid. Default is 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "exact_url_non_english",
        "description": "Retrieves the backlinks of a specific non-English URL using the RapidAPI service.",
        "parameters": {
            "domain": {
                "description": "The domain of the non-English URL for which to retrieve backlinks.",
                "type": "str",
                "default": "https://codeconia.com/2021/05/28/html-form-to-email-with-attachment-using-php/"
            }
        },
        "domain": "Data"
    },
    {
        "name": "analysis",
        "description": "Analyzes, validates, and parses the content of a given phone number using the Metropolis API.",
        "parameters": {
            "telephone": {
                "description": "The full telephone number to be analyzed.",
                "type": "str",
                "default": "1 (703) 259-8585"
            },
            "country": {
                "description": "ISO 2-letter country code or name of the country in English. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_aggregated_loan_offers",
        "description": "Retrieves the aggregated loan offers for a specified collection using the Blur API.",
        "parameters": {
            "collection": {
                "description": "The name or identifier of the collection for which to retrieve aggregated loan offers.",
                "type": "str",
                "default": "0x5af0d9827e0c53e4799bb226655a1de152a425a"
            }
        },
        "domain": "Data"
    },
    {
        "name": "tweet_favoriters",
        "description": "Fetches the list of users who have favorited a specific tweet.",
        "parameters": {
            "is_id": {
                "description": "The ID of the tweet for which to fetch favoriters.",
                "type": "str",
                "default": "1485953263040188416"
            },
            "count": {
                "description": "The number of results to return. Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            },
            "cursor": {
                "description": "The cursor for paginating through results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "reverse",
        "description": "Performs reverse geocoding to obtain location details from longitude and latitude coordinates.",
        "parameters": {
            "lon": {
                "description": "The longitude of the location to be reverse geocoded.",
                "type": "str",
                "default": "16.3523667"
            },
            "lat": {
                "description": "The latitude of the location to be reverse geocoded.",
                "type": "str",
                "default": "48.200702"
            },
            "polygon": {
                "description": "If specified, includes polygon details in the response.",
                "type": "str, optional",
                "default": ""
            },
            "language": {
                "description": "Language for the response data. Must be a valid ISO 639-1 language code.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "gera_mapa_dos_arredores",
        "description": "Generates a map of the surroundings for a given CNPJ (Brazilian company identifier). This function allows customization of the map through various parameters such as height, zoom, width, scale, and type.",
        "parameters": {
            "cnpj": {
                "description": "The CNPJ of the company to generate the map for.",
                "type": "str",
                "default": "37335118000180"
            },
            "height": {
                "description": "The height of the map. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "zoom": {
                "description": "The zoom level of the map. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "width": {
                "description": "The width of the map. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "scale": {
                "description": "The scale of the map. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "type": {
                "description": "The type of the map (e.g., 'hybrid'). Defaults to 'hybrid'.",
                "type": "str, optional",
                "default": "hybrid"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_bids",
        "description": "Retrieve bids for a specified contract address from the Blur API.",
        "parameters": {
            "contractaddress": {
                "description": "The address of the contract for which to retrieve bids.",
                "type": "str",
                "default": "0x231d3559aa848bf10366fb9868590f01d34bf240"
            },
            "is_from": {
                "description": "The starting index from which to retrieve bids. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "take": {
                "description": "The number of bids to retrieve. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieving_a_contract",
        "description": "Fetches detailed information about an asset contract from the OpenSea API.",
        "parameters": {
            "asset_contract_address": {
                "description": "The address of the asset contract to retrieve information for.",
                "type": "str",
                "default": "0x4372f4d950d30c6f12c7228ade77d6cc019404c9"
            }
        },
        "domain": "Data"
    },
    {
        "name": "v1_historicalfigures",
        "description": "Retrieves a list of historical figures matching the given search parameters from the API Ninjas Historical Figures API.",
        "parameters": {
            "offset": {
                "description": "The number of results to skip for pagination. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "name": {
                "description": "The name of the historical figure to search for. Partial names are also accepted (e.g., \"julius\" will match \"Julius Caesar\"). Defaults to 'julius caesar'.",
                "type": "str, optional",
                "default": "julius caesar"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_job_details",
        "description": "Fetch detailed job information from a given job URL, optionally including skills, using the ToolBench RapidAPI service.",
        "parameters": {
            "job_url": {
                "description": "The URL to the job posting.",
                "type": "str",
                "default": "https://www.linkedin.com/jobs/view/3690897280/"
            },
            "include_skills": {
                "description": "Flag to include skills in the fetched details. Defaults to 'false'. Including skills will cost 1 more credit.",
                "type": "str, optional",
                "default": "false"
            }
        },
        "domain": "Data"
    },
    {
        "name": "v1_loremipsum",
        "description": "Fetches lorem ipsum placeholder text from the API Ninjas Lorem Ipsum API.",
        "parameters": {
            "max_length": {
                "description": "Maximum character length for the returned text.",
                "type": "int, optional",
                "default": ""
            },
            "start_with_lorem_ipsum": {
                "description": "Whether to begin the text with \"Lorem ipsum\". Accepts 'true' or 'false'. Defaults to 'true' if unset.",
                "type": "str, optional",
                "default": ""
            },
            "random": {
                "description": "Whether to randomly generate paragraphs. Accepts 'true' or 'false'. Defaults to 'true' if unset.",
                "type": "str, optional",
                "default": ""
            },
            "paragraphs": {
                "description": "Number of paragraphs to generate. Defaults to 1 if unset.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "video_related_contents",
        "description": "Fetches related video contents from YouTube using the RapidAPI service.",
        "parameters": {
            "hl": {
                "description": "Language code for the response (default is 'en').",
                "type": "str",
                "default": "en"
            },
            "is_id": {
                "description": "The YouTube video ID for which related contents are to be fetched (default is 'kJQP7kiw5Fk').",
                "type": "str",
                "default": "kJQP7kiw5Fk"
            },
            "gl": {
                "description": "Country code for the response (default is 'US').",
                "type": "str",
                "default": "US"
            },
            "cursor": {
                "description": "Token for pagination to retrieve the next set of results.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "url_analysis",
        "description": "Analyzes the given URL using the Toolbench RapidAPI service.",
        "parameters": {
            "url": {
                "description": "The URL to be analyzed.",
                "type": "str",
                "default": "cleverbikes.myshopify.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "check_similarity",
        "description": "Checks if two domains are similar using the Whois Lookup API.",
        "parameters": {
            "domain1": {
                "description": "The first domain to compare.",
                "type": "str",
                "default": "google.com"
            },
            "domain2": {
                "description": "The second domain to compare.",
                "type": "str",
                "default": "shopify.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getdomaintech",
        "description": "Retrieves technology information for a given domain using the Runs Tech API.",
        "parameters": {
            "domain": {
                "description": "The domain name for which technology information is to be retrieved.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "v1_animals",
        "description": "Queries the API Ninjas Animals API endpoint to return up to 10 results matching the input animal name.",
        "parameters": {
            "name": {
                "description": "The common name of the animal to search. This parameter supports partial matches (e.g., \"fox\" will match \"gray fox\" and \"red fox\").",
                "type": "str",
                "default": "cheetah"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getfeedversions",
        "description": "Retrieve a list of feed versions from the TransitFeeds API, optionally filtering the results based on the given parameters.",
        "parameters": {
            "feed": {
                "description": "The feed ID to restrict results to. Defaults to 'sfmta/60'.",
                "type": "str",
                "default": "sfmta/60"
            },
            "page": {
                "description": "The page of results to return. If None, the first page is returned.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "domain_name",
        "description": "Retrieves WHOIS details for the given domain name using the RapidAPI service.",
        "parameters": {
            "domain_name": {
                "description": "The domain name for which to retrieve the WHOIS details.",
                "type": "str",
                "default": "google.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "domain_data",
        "description": "Retrieves domain information for a given website using the Website Analyze and SEO Audit Pro API.",
        "parameters": {
            "website": {
                "description": "The URL of the website for which to retrieve domain information.",
                "type": "str",
                "default": "getecz.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_random_word",
        "description": "Fetches a random word based on specified criteria from the Dicolink API.",
        "parameters": {
            "verbeconjugue": {
                "description": "Whether to fetch a conjugated verb. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "minlong": {
                "description": "Minimum length of the word. Defaults to '5'.",
                "type": "str, optional",
                "default": "5"
            },
            "maxlong": {
                "description": "Maximum length of the word. Defaults to '-1' for no maximum.",
                "type": "str, optional",
                "default": "-1"
            },
            "avecdef": {
                "description": "Whether to include the definition of the word. Defaults to None.",
                "type": "bool, optional",
                "default": true
            }
        },
        "domain": "Data"
    },
    {
        "name": "lists_details",
        "description": "Fetches and returns the public information of a Twitter List based on the given list ID.",
        "parameters": {
            "list_id": {
                "description": "The ID of the Twitter List whose details are to be fetched.",
                "type": "str",
                "default": "1591033111726391297"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_antonyms",
        "description": "Fetches antonyms for a given word using the Dicolink API.",
        "parameters": {
            "mot": {
                "description": "The word for which to find antonyms.",
                "type": "str",
                "default": "autre"
            },
            "limite": {
                "description": "The maximum number of antonyms to return. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "year_end_hot_100_songs",
        "description": "Fetches the Year-End Hot 100 Songs chart for a given year from the Billboard API.",
        "parameters": {
            "year": {
                "description": "The year for which to retrieve the Year-End Hot 100 Songs chart.",
                "type": "int",
                "default": "2021"
            },
            "range": {
                "description": "The range of chart positions to retrieve, default is '1-10'. If not specified, returns all results.",
                "type": "str, optional",
                "default": "1-10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_related",
        "description": "Fetches related artists information from the Spotify API using a given artist ID.",
        "parameters": {
            "is_id": {
                "description": "The Spotify artist ID for which to find related artists.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_zip_code_detail",
        "description": "Retrieve detailed profile and demographic data for a provided ZIP code.",
        "parameters": {
            "zip": {
                "description": "The ZIP code for which to retrieve detailed information.",
                "type": "str",
                "default": "10001"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_information_of_a_particular_post",
        "description": "Fetch information about a specific post using its post ID.",
        "parameters": {
            "postid": {
                "description": "The unique identifier of the post for which information is to be retrieved.",
                "type": "str",
                "default": "2796025"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getstatsbyyear",
        "description": "Retrieves Trinidad & Tobago Covid-19 statistics by year.",
        "parameters": {
            "is_id": {
                "description": "The year for which the Covid-19 statistics are being requested. Must be between 2020 and the current year.",
                "type": "str",
                "default": "2020"
            }
        },
        "domain": "Data"
    },
    {
        "name": "breweries",
        "description": "Fetches a list of breweries from the Open Brewery DB API based on given search criteria.",
        "parameters": {
            "by_state": {
                "description": "Search for breweries by state. Defaults to 'NY'.",
                "type": "str, optional",
                "default": "NY"
            },
            "by_name": {
                "description": "Search for breweries by name. Defaults to 'cooper'.",
                "type": "str, optional",
                "default": "cooper"
            },
            "by_type": {
                "description": "Filter breweries by type. Must be one of: 'micro', 'regional', 'brewpub', 'large', 'planning', 'bar', 'contract', 'proprietor'. Defaults to 'micro'.",
                "type": "str, optional",
                "default": "micro"
            },
            "sort": {
                "description": "Sort the breweries. Use '+' for ascending order and '-' for descending order. Comma-separated values can be used to sort by multiple fields. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "by_tag": {
                "description": "Filter breweries by tag. Must be one of: 'dog-friendly', 'patio', 'food-service', 'food-truck', 'tours'. Defaults to 'patio'.",
                "type": "str, optional",
                "default": "patio"
            }
        },
        "domain": "Data"
    },
    {
        "name": "autocomplete_localities",
        "description": "Sends a GET request to the RapidAPI Autocomplete India service to fetch autocomplete suggestions for a given locality.",
        "parameters": {
            "locality": {
                "description": "The locality name to get autocomplete suggestions for.",
                "type": "str",
                "default": "rashtra"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_location_infomation_by_zipcode",
        "description": "Fetches the location information for a given ZIP code using the Redfin API.",
        "parameters": {
            "zipcode": {
                "description": "The ZIP code for which to fetch the location information.",
                "type": "str",
                "default": "01003"
            }
        },
        "domain": "Data"
    },
    {
        "name": "by_state_city",
        "description": "Searches for homeless shelters in a specified state and city using the provided API key.",
        "parameters": {
            "state": {
                "description": "Full state name (e.g., 'Washington') or abbreviation (e.g., 'WA').",
                "type": "str",
                "default": "Washington"
            },
            "city": {
                "description": "City name (e.g., 'Bellevue').",
                "type": "str",
                "default": "Bellevue"
            }
        },
        "domain": "Data"
    },
    {
        "name": "trend_id",
        "description": "Fetches trending topics from Twitter based on a given \"Where On Earth IDentifier\" (WOEID) using the Toolbench RapidAPI service.",
        "parameters": {
            "woeid": {
                "description": "The Yahoo! Where On Earth IDentifier (WOEID) for which to get trending topics.",
                "type": "int",
                "default": 2514815
            }
        },
        "domain": "Data"
    },
    {
        "name": "company_info",
        "description": "Retrieves real-time company information using the Finshorts API.",
        "parameters": {
            "q": {
                "description": "The query string representing the company name or ticker symbol.",
                "type": "str",
                "default": "aapl"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_by_coordinates_point",
        "description": "Search for EV charging stations near specific geographic coordinates.",
        "parameters": {
            "lng": {
                "description": "Longitude of the geographic coordinates point to search nearby.",
                "type": "str",
                "default": "-121.925337"
            },
            "lat": {
                "description": "Latitude of the geographic coordinates point to search nearby.",
                "type": "str",
                "default": "37.359428"
            },
            "query": {
                "description": "Keyword to filter the search results by a specific query, such as 'evgo', 'tesla', or 'chargepoint'.",
                "type": "str, optional",
                "default": ""
            },
            "min_kw": {
                "description": "Minimum power in kilowatts to filter the availability of connectors.",
                "type": "str, optional",
                "default": ""
            },
            "max_kw": {
                "description": "Maximum power in kilowatts to filter the availability of connectors.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "Maximum number of results to return. Allowed values range from 1 to 500.",
                "type": "str, optional, default='20'",
                "default": "20"
            },
            "available": {
                "description": "Filter to find EV charging stations with an available connector.",
                "type": "str, optional",
                "default": ""
            },
            "type": {
                "description": "Filter to return EV charging stations with connectors of specified types, provided as a comma-delimited list, e.g., 'CHAdeMO', 'J1772,CCS'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "suggest_region",
        "description": "Fetches suggested regions based on a given location using the Airdna API.",
        "parameters": {
            "location": {
                "description": "The location keyword to search for suggested regions.",
                "type": "str",
                "default": "santa monica"
            }
        },
        "domain": "Data"
    },
    {
        "name": "product_search",
        "description": "Search for products in a store based on a keyword.",
        "parameters": {
            "store_id": {
                "description": "The ID of the store to search in.",
                "type": "str",
                "default": "1122"
            },
            "keyword": {
                "description": "The keyword to search for products.",
                "type": "str",
                "default": "womens shoes"
            },
            "offset": {
                "description": "The starting point for the search results. Defaults to '0'.",
                "type": "str, optional",
                "default": "0"
            },
            "count": {
                "description": "The maximum number of products to return. Defaults to '25'.",
                "type": "str, optional",
                "default": "25"
            }
        },
        "domain": "Data"
    },
    {
        "name": "crimes_with_no_location",
        "description": "Fetches a list of crimes from a specified police force on a given date and category, where the crimes have no specified location.",
        "parameters": {
            "date": {
                "description": "The date of the crimes to retrieve in 'YYYY-MM' format.",
                "type": "str",
                "default": "2011-09"
            },
            "force": {
                "description": "The identifier for the police force responsible for handling the crimes.",
                "type": "str",
                "default": "warwickshire"
            },
            "category": {
                "description": "The category of the crimes to retrieve.",
                "type": "str",
                "default": "all-crime"
            }
        },
        "domain": "Data"
    },
    {
        "name": "generate_a_random_word",
        "description": "Generates a random word by querying the RandomWordGenerator.com database using the specified API keys and generator type.",
        "parameters": {
            "api_key": {
                "description": "The API key for authentication with RandomWordGenerator.com. Defaults to '5w36eV0FZJu9QIPlpR18'.",
                "type": "str",
                "default": "5w36eV0FZJu9QIPlpR18"
            },
            "generator": {
                "description": "The type of word generator to use. Defaults to 'words'.",
                "type": "str",
                "default": "words"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_zip_code_info",
        "description": "Fetches information about a given postal code in a specified country using the Zippopotamus API.",
        "parameters": {
            "country": {
                "description": "The country code (e.g., 'us' for the United States).",
                "type": "str",
                "default": "us"
            },
            "postal_code": {
                "description": "The postal code for which information is being fetched.",
                "type": "str",
                "default": "90210"
            }
        },
        "domain": "Data"
    },
    {
        "name": "gettimezone",
        "description": "Fetches the local timezone information for a specified geographic location using latitude and longitude.",
        "parameters": {
            "longitude": {
                "description": "The geographic longitude coordinate of the location.",
                "type": "int",
                "default": "-74.40753570369408"
            },
            "latitude": {
                "description": "The geographic latitude coordinate of the location.",
                "type": "int",
                "default": "40.63380384389354"
            }
        },
        "domain": "Data"
    },
    {
        "name": "playlist_videos",
        "description": "Fetches videos from a specified YouTube playlist using the RapidAPI service. ",
        "parameters": {
            "gl": {
                "description": "The geolocation code (default is 'US').",
                "type": "str",
                "default": "US"
            },
            "cursor": {
                "description": "The cursor token for paginated results (default is None).",
                "type": "str",
                "default": ""
            },
            "hl": {
                "description": "The language code (default is 'en').",
                "type": "str",
                "default": "en"
            },
            "is_id": {
                "description": "The playlist ID (default is 'PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr').",
                "type": "str",
                "default": "PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_coverage",
        "description": "Retrieves cell coverage information for major US carriers (AT&T, T-Mobile, U.S. Cellular, and Verizon) based on the provided zip code.",
        "parameters": {
            "postcode": {
                "description": "The zip code for which to retrieve cell coverage information.",
                "type": "str",
                "default": "92101"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_specific_queue_time",
        "description": "Retrieve a specific queue item based on the given ID from the unofficial Efteling API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the specific queue item to retrieve.",
                "type": "int",
                "default": "12"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandomsolution",
        "description": "Fetches a JSON data consisting of a random optimal solution for a given cube position.",
        "parameters": {
            "position": {
                "description": "The cube position for which to retrieve the random optimal solution.",
                "type": "str",
                "default": "GBWGYOGYRYOORWROBRWYGWBB"
            }
        },
        "domain": "Data"
    },
    {
        "name": "vin_decode",
        "description": "Decodes a given Vehicle Identification Number (VIN) using the RapidAPI VIN Decoder service.",
        "parameters": {
            "vin": {
                "description": "The Vehicle Identification Number to decode.",
                "type": "str",
                "default": "WBAWY32040L678750"
            }
        },
        "domain": "Data"
    },
    {
        "name": "consulta_estabelecimento",
        "description": "Queries the CNPJ for unified information from Receita Federal, Simples Nacional, and Cadastro de Contribuintes.",
        "parameters": {
            "cnpj": {
                "description": "The CNPJ number to be queried.",
                "type": "str",
                "default": "84447804000123"
            },
            "maxage": {
                "description": "Maximum age of the cached data in days. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            },
            "simpleshistory": {
                "description": "Whether to include historical data from Simples Nacional. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "registrations": {
                "description": "UFs separated by commas to include information from Cadastro de Contribuintes. Use 'BR' to consider all. Defaults to 'BR'.",
                "type": "str, optional",
                "default": "BR"
            },
            "simples": {
                "description": "Whether to include current data from Simples Nacional. Defaults to None.",
                "type": "bool, optional",
                "default": "true"
            }
        },
        "domain": "Data"
    },
    {
        "name": "videocategories",
        "description": "Fetches video categories from the YouTube API based on provided parameters.",
        "parameters": {
            "part": {
                "description": "Specifies the videoCategory resource properties that the API response will include. Typically set to 'snippet'.",
                "type": "str",
                "default": "snippet"
            },
            "is_id": {
                "description": "A comma-separated list of video category IDs to retrieve. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "regioncode": {
                "description": "Instructs the API to return the list of video categories available in the specified country, given by an ISO 3166-1 alpha-2 country code. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "hl": {
                "description": "Specifies the language that should be used for text values in the API response. Default is 'en_US'.",
                "type": "str, optional",
                "default": "en_US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "about_channel",
        "description": "Fetches detailed information about a YouTube channel using its ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the YouTube channel for which information is being fetched.",
                "type": "str",
                "default": "UCE_M8A5yxnLfW0KghEeajjw"
            }
        },
        "domain": "Data"
    },
    {
        "name": "resources_allcontries",
        "description": "Retrieves a list of important economic resources for a specified African country using the RapidAPI service.",
        "parameters": {
            "country_name": {
                "description": "The name of the African country for which to retrieve the economic resources.",
                "type": "str",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "company_details",
        "description": "Fetch details of a company from Indeed's API.",
        "parameters": {
            "company_id": {
                "description": "The unique identifier of the company to fetch details for.",
                "type": "str",
                "default": "Microsoft"
            },
            "locality": {
                "description": "The locality or country code for Indeed's subdomain. Default is 'us' if not provided.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "symbol",
        "description": "Fetches stock data for a given ticker symbol from the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock to retrieve data for.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getpopulationbycountrycode",
        "description": "Fetches the population data of a specified country using its ISO 3166-1 alpha-3 country code.",
        "parameters": {
            "countrycode": {
                "description": "The ISO 3166-1 alpha-3 code representing the country.",
                "type": "str",
                "default": "ESP"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_exact_phrase_api",
        "description": "Searches the King James Version (KJV) of the Bible for the exact phrase supplied and returns the result.",
        "parameters": {
            "phrase": {
                "description": "The exact phrase to search for in the KJV Bible.",
                "type": "str",
                "default": "In the beginning"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_ios_app",
        "description": "Fetches a specific iOS app's details using the app ID from the iOS Store API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the iOS app to fetch.",
                "type": "str",
                "default": "880047117"
            }
        },
        "domain": "Data"
    },
    {
        "name": "topic_news_by_section",
        "description": "Fetches news articles based on a specific section and topic.",
        "parameters": {
            "section": {
                "description": "The news section to search within.",
                "type": "str",
                "default": "CAQiW0NCQVNQZ29JTDIwdk1EZGpNWFlTQW1WdUdnSlZVeUlQQ0FRYUN3b0pMMjB2TURKdFpqRnVLaGtLRndvVFIwRkVSMFZVWDFORlExUkpUMDVmVGtGTlJTQUJLQUEqKggAKiYICiIgQ0JBU0Vnb0lMMjB2TURkak1YWVNBbVZ1R2dKVlV5Z0FQAVAB"
            },
            "topic": {
                "description": "The topic for which to get news headlines.",
                "type": "str",
                "default": "TECHNOLOGY"
            },
            "lang": {
                "description": "The language to use for the results, specified as a 2-letter language code (default is 'en').",
                "type": "str, optional",
                "default": "en"
            },
            "country": {
                "description": "The country code to filter the news by country (default is 'US').",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_date_and_time_by_city",
        "description": "Get the current date and time for a specified city.",
        "parameters": {
            "city": {
                "description": "Name of the city to get the date and time for.",
                "type": "str",
                "default": "Los Angeles"
            }
        },
        "domain": "Data"
    },
    {
        "name": "gettechdomains",
        "description": "Retrieve the domains that use a specific technology.",
        "parameters": {
            "tech": {
                "description": "The name of the technology to search for.",
                "type": "str",
                "default": "g-suite"
            }
        },
        "domain": "Data"
    },
    {
        "name": "listar_todos",
        "description": "Fetch a list of all ministries and subsecretariats using the specified API.",
        "parameters": {
            "todos": {
                "description": "The endpoint to retrieve the list of ministries and subsecretariats.",
                "type": "str",
                "default": "ministerios"
            }
        },
        "domain": "Data"
    },
    {
        "name": "i18nlanguages",
        "description": "Fetches a list of application languages that the YouTube website supports via the RapidAPI YouTube v3.11 endpoint.",
        "parameters": {
            "part": {
                "description": "Specifies the **i18nLanguage** resource properties that the API response will include. Set the parameter value to **snippet**.",
                "type": "str",
                "default": "snippet"
            },
            "hl": {
                "description": "Specifies the language that should be used for text values in the API response. Defaults to 'en_US'.",
                "type": "str, optional",
                "default": "en_US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "token",
        "description": "Generates an OAuth token from the RapidAPI 'OAuth Echo' endpoint.",
        "parameters": {
            "client_secret": {
                "description": "The client's secret key. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "client_id": {
                "description": "The client's ID. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "brands_detail",
        "description": "Fetch detailed information about a brand using the provided brand ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the brand to fetch details for. This value should be obtained from the brands `id` field returned in the `/search` endpoint or the `brandId` field returned in the `/products/list` or `/products/detail` endpoints.",
                "type": "int",
                "default": "158155"
            }
        },
        "domain": "Data"
    },
    {
        "name": "draw_date_listing",
        "description": "Fetches a listing of Thai lottery draw dates from the RapidAPI service.",
        "parameters": {
            "page": {
                "description": "The page number of the results to fetch. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_fuel_economy_information",
        "description": "Fetches fuel economy information for a specified vehicle from the official U.S. government source.",
        "parameters": {
            "model": {
                "description": "The vehicle model. Use the /models endpoint to get supported models for the specified make.",
                "type": "str",
                "default": "Chiron"
            },
            "make": {
                "description": "The vehicle make. Use the /makes endpoint to get supported makes.",
                "type": "str",
                "default": "Bugatti"
            },
            "year": {
                "description": "Model year. Currently supports model years from 1985 to 2023. Defaults to '2023'.",
                "type": "str, optional",
                "default": "2023"
            }
        },
        "domain": "Data"
    },
    {
        "name": "flag",
        "description": "Retrieves the flag image of a specified country using the RapidAPI service.",
        "parameters": {
            "country": {
                "description": "The country ISO code or the full name of the country in English.",
                "type": "str",
                "default": "Japan"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getcountrybynumber",
        "description": "Retrieves country information based on a phone number using the Telephone to Country API.",
        "parameters": {
            "q": {
                "description": "The phone number to search for the corresponding country information.",
                "type": "str",
                "default": "12136210002"
            }
        },
        "domain": "Data"
    },
    {
        "name": "video_recommendation",
        "description": "Fetches and returns a list of recommended videos based on the provided video ID using the YouTube Search API.",
        "parameters": {
            "videoid": {
                "description": "The ID of the video for which to fetch recommendations.",
                "type": "str",
                "default": "JdiuB5yTLKw"
            }
        },
        "domain": "Data"
    },
    {
        "name": "youtube_search",
        "description": "Searches for YouTube videos based on a keyword and various optional parameters.",
        "parameters": {
            "query": {
                "description": "The keyword to search for.",
                "type": "str",
                "default": "bobby lee"
            },
            "lang": {
                "description": "The language code for the search results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "order_by": {
                "description": "The sorting order of the search results. Possible values: 'last_hour', 'today', 'this_week', 'this_month', 'this_year'. Defaults to 'this_month'.",
                "type": "str, optional",
                "default": "this_month"
            },
            "country": {
                "description": "The country code for the search results. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "country_details",
        "description": "Fetches the details for a specific country from the GeoDB API, including information on the number of regions.",
        "parameters": {
            "countryid": {
                "description": "An ISO-3166 country code or WikiData id representing the country.",
                "type": "str",
                "default": "US"
            },
            "asciimode": {
                "description": "If set to True, display results using ASCII characters.",
                "type": "bool, optional",
                "default": ""
            },
            "languagecode": {
                "description": "The language code to display the results in the specified language.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_profiles",
        "description": "Generates a list of fake user profiles given a specified size using the Toolbench RapidAPI service.",
        "parameters": {
            "size": {
                "description": "A string indicating the number of fake user profiles to generate. Defaults to '1'.",
                "type": "str",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_social_links",
        "description": "Search for social profile links based on a given query or keywords.",
        "parameters": {
            "query": {
                "description": "The search query or keywords to find social profile links.",
                "type": "str",
                "default": "John Smith"
            },
            "social_networks": {
                "description": "A comma-delimited list of social networks to search for.",
                "type": "str, optional",
                "default": "facebook,tiktok,instagram,snapchat,twitter,youtube,linkedin,github,pinterest"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_agents",
        "description": "Search for real estate agents based on various criteria such as location, price range, language, etc.",
        "parameters": {
            "location": {
                "description": "The city or zip code to search for agents.",
                "type": "str",
                "default": "santa monica"
            },
            "page": {
                "description": "The page number of the results to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "price": {
                "description": "The price range of properties the agent deals with, formatted as 'minPrice_maxPrice'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "agentname": {
                "description": "The name of the agent to search for. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "lang": {
                "description": "The language spoken by the agent. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "photo": {
                "description": "Whether to only show agents with a photo. 1 for yes, 0 for no. Defaults to None.",
                "type": "bool, optional",
                "default": "1"
            },
            "rating": {
                "description": "The rating of the agent, between 1 and 5. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_token_forwarding_wallets",
        "description": "Fetches a list of token forwarding wallets from the RapidAPI Token Forwarding service.",
        "parameters": {
            "is_id": {
                "description": "Identifier for the token forwarding wallet. Defaults to 'dfe02338-43ae-453f-bd51-6f0ea98e4df9'.",
                "type": "str",
                "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
            },
            "limit": {
                "description": "Maximum number of records to return. Defaults to 100.",
                "type": "int",
                "default": "100"
            },
            "offset": {
                "description": "Number of records to skip from the beginning. Defaults to 0.",
                "type": "int",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_all_coins_prices",
        "description": "Fetches the current price and rate change information for a specified cryptocurrency identifier.",
        "parameters": {
            "is_id": {
                "description": "The identifier of the cryptocurrency for which to fetch price and rate change information.",
                "type": "str",
                "default": "BTC"
            }
        },
        "domain": "Data"
    },
    {
        "name": "post_details",
        "description": "Fetches the details of a Reddit post using the provided post ID and RapidAPI key.",
        "parameters": {
            "post_id": {
                "description": "The ID of the Reddit post to retrieve details for.",
                "type": "str",
                "default": "t3_t19inj"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getcountriesbycontinent",
        "description": "Fetch data about countries in a specified continent from the RapidAPI world population service.",
        "parameters": {
            "continent": {
                "description": "The name of the continent for which to fetch countries' data.",
                "type": "str",
                "default": "Europe"
            },
            "rank": {
                "description": "Order in which to rank countries. Can take two values:",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ip",
        "description": "Fetches data for the provided IP address using the IP Geo Location and IP Reputation API.",
        "parameters": {
            "ip": {
                "description": "The IP address for which data is to be fetched. Defaults to '8.8.8.8'.",
                "type": "str",
                "default": "8.8.8.8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_models_by_make_id",
        "description": "Fetches a list of all car models for a given car make ID using the RapidAPI Car Specs API.",
        "parameters": {
            "makeid": {
                "description": "The ID of the car make for which to retrieve the models.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_collections",
        "description": "Retrieve collections from the Blur API based on given criteria.",
        "parameters": {
            "pagesize": {
                "description": "Number of records per page. If not specified, the default is None.",
                "type": "int, optional",
                "default": ""
            },
            "is_from": {
                "description": "Starting point of the records. If not specified, the default is None.",
                "type": "int, optional",
                "default": ""
            },
            "slug": {
                "description": "Slug identifier for the collection. If not specified, the default is None.",
                "type": "str, optional",
                "default": ""
            },
            "contractaddress": {
                "description": "Contract address of the collection. If not specified, the default is None.",
                "type": "str, optional",
                "default": ""
            },
            "orderby": {
                "description": "Order in which results are returned. Either 'asc' or 'desc'. Default is 'desc'.",
                "type": "str, optional",
                "default": "desc"
            },
            "sortby": {
                "description": "Field by which to sort results. Options include 'floorPrice', 'floorPriceOneDay', 'floorPriceOneWeek', 'volumeFifteenMinutes', 'volumeOneDay', 'volumeOneWeek', 'bestCollectionBid', 'totalCollectionBidValue', 'totalSupply', 'numberOwners'. Default is 'volumeOneDay'.",
                "type": "str, optional",
                "default": "volumeOneDay"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_sign_hexagram",
        "description": "Fetches detailed information for a specified sign hexagram category using the Sign Hexagram API.",
        "parameters": {
            "category": {
                "description": "The ID of the category for which to retrieve the hexagram information.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "full_grid_search",
        "description": "Performs a full grid search and retrieves the ranking of a specific business at each coordinate point within the grid. The grid cells in the results are ordered from left to right and then top to bottom.",
        "parameters": {
            "radius": {
                "description": "The distance between coordinate points in the grid. The measurement units are specified by the `radius_units` parameter.",
                "type": "str",
                "default": "1"
            },
            "lat": {
                "description": "The latitude value for the grid center coordinate point.",
                "type": "str",
                "default": "37.341759"
            },
            "grid_size": {
                "description": "The size of the grid (e.g., 3x3, 5x5, 7x7). Allowed values are odd integers between 3 and 15.",
                "type": "str",
                "default": "3"
            },
            "place_id": {
                "description": "The Google Place ID of the business to rank.",
                "type": "str",
                "default": "ChIJoejvAr3Mj4ARtHrbKxtAHXI"
            },
            "query": {
                "description": "The search query or keyword.",
                "type": "str",
                "default": "web design"
            },
            "lng": {
                "description": "The longitude value for the grid center coordinate point.",
                "type": "str",
                "default": "-121.938314"
            },
            "x_user_agent": {
                "description": "The device type for the search. Default is `desktop`.",
                "type": "str, optional",
                "default": ""
            },
            "zoom": {
                "description": "The Google Maps zoom level for the search at each grid point. Default is '13'.",
                "type": "str, optional",
                "default": "13"
            },
            "radius_units": {
                "description": "The units for the `radius` parameter (e.g., 'km' for kilometers, 'mi' for miles). Default is `km`.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_property_managers",
        "description": "Fetches and returns information about the largest property managers for a given location from the AirDNA API.",
        "parameters": {
            "location": {
                "description": "The location to query for the top property managers.",
                "type": "str",
                "default": "santa monica"
            }
        },
        "domain": "Data"
    },
    {
        "name": "au_car_averages",
        "description": "Fetches average car price information for a given car model, year, and make using the ToolBench RapidAPI service.",
        "parameters": {
            "model": {
                "description": "The car model to query.",
                "type": "str",
                "default": "Golf"
            },
            "year": {
                "description": "The production year of the car to query.",
                "type": "str",
                "default": "2007"
            },
            "make": {
                "description": "The car make to query.",
                "type": "str",
                "default": "Volkswagen"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_paid_ipad_apps",
        "description": "Gets a list of the top paid iPad apps from the specified category and country.",
        "parameters": {
            "category": {
                "description": "The App Store category for which to fetch the top paid iPad apps. Defaults to '6016'.",
                "type": "str, optional",
                "default": "6016"
            },
            "country": {
                "description": "The country code for which to fetch the top paid iPad apps. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "lang": {
                "description": "The language code for the response. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "num": {
                "description": "The number of results to return. Defaults to 100.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_crypto_by_id",
        "description": "Retrieve a fake cryptocurrency asset by its unique identifier.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier of the cryptocurrency asset to be retrieved.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_country_details",
        "description": "Fetch details for a country based on the given ISO-3166 country code.",
        "parameters": {
            "code": {
                "description": "The ISO-3166 country code to fetch details for.",
                "type": "str",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_city_detail",
        "description": "Fetch detailed information about a city using its name via the RapidAPI service.",
        "parameters": {
            "name": {
                "description": "The name of the city for which details are to be fetched.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "community_post_comments",
        "description": "Retrieves comments for a YouTube community post using the specified cursor token.",
        "parameters": {
            "cursor": {
                "description": "A token used for pagination to fetch the next set of comments from the Community Post Details endpoint.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getproducts",
        "description": "Search for products by name and retrieves newly added items from various sources.",
        "parameters": {
            "query": {
                "description": "The search query for the products.",
                "type": "str",
                "default": "ipone 14 256Gb"
            },
            "page": {
                "description": "The page number to retrieve.",
                "type": "int",
                "default": "1"
            },
            "country": {
                "description": "The country code to filter the search results. Defaults to 'countryUS'.",
                "type": "str, optional",
                "default": "countryUS"
            },
            "location": {
                "description": "The location to filter the search results. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "lang": {
                "description": "The language code to filter the search results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "period": {
                "description": "The period in days to filter newly added items. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "by_location",
        "description": "Searches for homeless shelters based on provided geographical coordinates and radius.",
        "parameters": {
            "lat": {
                "description": "The latitude of the location to search nearby shelters.",
                "type": "str",
                "default": "47.630703"
            },
            "radius": {
                "description": "The search radius in miles (maximum 10 miles).",
                "type": "str",
                "default": "1.4"
            },
            "lng": {
                "description": "The longitude of the location to search nearby shelters.",
                "type": "str",
                "default": "-122.186370"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_car_specs",
        "description": "Fetches detailed specifications for a car based on the given trim ID.",
        "parameters": {
            "trimid": {
                "description": "The trim ID of the car for which to retrieve specifications.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "genderize",
        "description": "Predict the gender of a person based on their name using the Genderize API.",
        "parameters": {
            "name": {
                "description": "The name of the person whose gender is to be predicted.",
                "type": "str",
                "default": "amir"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_expressions",
        "description": "Fetch expressions that include a specified word from the Dicolink API.",
        "parameters": {
            "mot": {
                "description": "The word for which to retrieve expressions.",
                "type": "str",
                "default": "cheval"
            },
            "limite": {
                "description": "The maximum number of expressions to retrieve. Defaults to '10'.",
                "type": "str, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_profile",
        "description": "Fetches and returns the user profile data from the Spotify API.",
        "parameters": {
            "is_id": {
                "description": "The user's unique Spotify ID.",
                "type": "str",
                "default": "nocopyrightsounds"
            },
            "playlistlimit": {
                "description": "The maximum number of playlists to retrieve. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            },
            "artistlimit": {
                "description": "The maximum number of artists to retrieve. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_company_jobs_count",
        "description": "Retrieves the number of job openings a specified company has posted on LinkedIn.",
        "parameters": {
            "company_id": {
                "description": "The unique identifier of the company whose job openings count is to be retrieved.",
                "type": "str",
                "default": "162479"
            }
        },
        "domain": "Data"
    },
    {
        "name": "address",
        "description": "Sends a request to an address correction and geocoding API using the provided address lines and API key.",
        "parameters": {
            "addressline1": {
                "description": "The first line of the address.",
                "type": "str",
                "default": "506 Fourth Avenue Unit 1"
            },
            "addressline2": {
                "description": "The second line of the address, typically including city, state, and zip code.",
                "type": "str",
                "default": "Asbury Prk, NJ"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getevents",
        "description": "Fetches data about events from the Kalshi trading API.",
        "parameters": {
            "series_ticker": {
                "description": "Series ticker to retrieve contracts for.",
                "type": "str, optional",
                "default": ""
            },
            "status": {
                "description": "Restricts the events to those with certain statuses. Accepted values are: 'open', 'closed', 'settled'.",
                "type": "str, optional",
                "default": ""
            },
            "cursor": {
                "description": "Pointer to the next page of records in the pagination. If provided, it should be the cursor string from a previous request.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "Number of results per page. Defaults to 100 if not specified.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "find_zip_codes_by_city",
        "description": "This function returns all zip codes associated with a given city. If multiple cities share the same name, zip codes for all those cities will be returned. ",
        "parameters": {
            "accept": {
                "description": "Requested content type.",
                "type": "str",
                "default": "application/json"
            },
            "city": {
                "description": "The name of the city for which to find zip codes.",
                "type": "str",
                "default": "Wroc\u0142aw"
            },
            "x_traceid": {
                "description": "A trace ID that is copied to the API response header. Default is 'optional_abc123'.",
                "type": "str, optional",
                "default": "optional_abc123"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_sex_offenders",
        "description": "Search for sex offenders using either GIS parameters or attribute parameters.",
        "parameters": {
            "lastname": {
                "description": "The last name of the sex offender to search for.",
                "type": "str, optional",
                "default": ""
            },
            "zipcode": {
                "description": "The zipcode to search within.",
                "type": "str, optional",
                "default": ""
            },
            "state": {
                "description": "The state to search within. Default is 'California'.",
                "type": "str, optional",
                "default": "California"
            },
            "city": {
                "description": "The city to search within.",
                "type": "str, optional",
                "default": ""
            },
            "firstname": {
                "description": "The first name of the sex offender to search for. Default is 'David'.",
                "type": "str, optional",
                "default": "David"
            },
            "lat": {
                "description": "The latitude for GIS search. Default is 37.",
                "type": "int, optional",
                "default": "37.397568"
            },
            "radius": {
                "description": "The search radius in miles for GIS search. Default is 1 mile.",
                "type": "int, optional",
                "default": "1"
            },
            "lng": {
                "description": "The longitude for GIS search. Default is -122.",
                "type": "int, optional",
                "default": "-122.06492"
            }
        },
        "domain": "Data"
    },
    {
        "name": "word",
        "description": "Generates lorem ipsum text by requesting a specified number of words from the RapidAPI lorem ipsum service.",
        "parameters": {
            "amount": {
                "description": "The number of lorem ipsum words to generate.",
                "type": "int",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_cci_by_number",
        "description": "Fetches the CCI (Control Correlation Identifier) and its definition based on a 6-digit CCI identification number using the specified RapidAPI key.",
        "parameters": {
            "cci": {
                "description": "A 6-digit CCI identification number.",
                "type": "str",
                "default": "000001"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_gas_fee_funding_wallets",
        "description": "Fetches gas fee funding wallet information from the RapidAPI Token Forwarding service.",
        "parameters": {
            "is_id": {
                "description": "The identifier used to fetch specific wallet information. Default is 'dfe02338-43ae-453f-bd51-6f0ea98e4df9'.",
                "type": "str, optional",
                "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
            },
            "limit": {
                "description": "The maximum number of records to retrieve. Default is 100.",
                "type": "int, optional",
                "default": "100"
            },
            "offset": {
                "description": "The number of records to skip before starting to return records. Default is 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_vessel_photo",
        "description": "Fetch the image of a vessel using its ship ID from the Vessel Data API.",
        "parameters": {
            "shipid": {
                "description": "The ID of the ship for which to fetch the image.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "manufacturing_year_detection",
        "description": "Detects the manufacturing year of the vehicle based on the provided VIN identifier using the Tesla VIN Identifier API.",
        "parameters": {
            "vin_identifier": {
                "description": "The Vehicle Identification Number (VIN) of the vehicle to identify the manufacturing year for.",
                "type": "str",
                "default": "0f7885c2af1a6ef9"
            }
        },
        "domain": "Data"
    },
    {
        "name": "screenshot_endpoint",
        "description": "Takes a screenshot of a specified webpage URL with given dimensions.",
        "parameters": {
            "height": {
                "description": "The height of the screenshot in pixels.",
                "type": "str",
                "default": "1080"
            },
            "url": {
                "description": "The URL of the webpage to capture.",
                "type": "str",
                "default": "https://rapidapi.com/marketplace"
            },
            "width": {
                "description": "The width of the screenshot in pixels.",
                "type": "str",
                "default": "1920"
            },
            "fullscreen": {
                "description": "Whether to capture the screenshot in fullscreen mode. Defaults to 'true'.",
                "type": "str, optional",
                "default": "true"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_word_by_start_and_contain",
        "description": "This function retrieves a random word from the Random Word API that starts with the specified `start` string and contains the specified `substring`.",
        "parameters": {
            "substring": {
                "description": "The substring that the word must contain.",
                "type": "str",
                "default": "le"
            },
            "start": {
                "description": "The starting string of the word.",
                "type": "str",
                "default": "fru"
            }
        },
        "domain": "Data"
    },
    {
        "name": "blockit",
        "description": "Detect if an IP address is associated with a proxy, Tor, hosting service, cloud service, or is a Bogon IP.",
        "parameters": {
            "ip": {
                "description": "The IP address to be checked.",
                "type": "str",
                "default": "34.95.185.149"
            }
        },
        "domain": "Data"
    },
    {
        "name": "product",
        "description": "Fetch up-to-date information for a specific product from the IKEA API.",
        "parameters": {
            "countrycode": {
                "description": "The country code where the product is available.",
                "type": "str",
                "default": "us"
            },
            "productid": {
                "description": "The unique identifier for the product.",
                "type": "str",
                "default": ""
            },
            "languagecode": {
                "description": "The language code for the response. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "store": {
                "description": "The specific store identifier.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "business_photos",
        "description": "Fetches photos of a business using its unique Business Id through the RapidAPI service.",
        "parameters": {
            "business_id": {
                "description": "The unique identifier of the business. This can be a google_id, business_id, or google_place_id. Examples of valid IDs include `0x880fd393d427a591:0x8cba02d713a995ed` and `ChIJkaUn1JPTD4gR7ZWpE9cCuow`.",
                "type": "str",
                "default": "0x89c259b5a9bd152b:0x31453e62a3be9f76"
            },
            "limit": {
                "description": "The maximum number of business photos to return. Acceptable values range from 1 to 10000. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            },
            "fields": {
                "description": "A comma-separated list of photo fields to include in the response. By default, all fields are returned. Example: `type,photo_url`.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "The region or country from which to query Google Maps. For a list of supported region/country codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes (Alpha-2 code). Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_countries_by_idd",
        "description": "Searches for countries using their International Direct Dialing (IDD) number.",
        "parameters": {
            "idd": {
                "description": "International Direct Dialing number, starting with '+'.",
                "type": "str",
                "default": 91
            },
            "limit": {
                "description": "The maximum number of records to return in a single page. Defaults to 10.",
                "type": "int, optional",
                "default": 10
            },
            "offset": {
                "description": "The page number from which the search should continue, zero-indexed. Defaults to 0.",
                "type": "int, optional",
                "default": 0
            },
            "fields": {
                "description": "Comma-separated list of fields to filter the response. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "offers",
        "description": "This function retrieves a list of offers for a product identified by the `is_id` parameter from a price comparison API. Latitude, longitude, country, and the API key can be optionally provided to refine the search.",
        "parameters": {
            "is_id": {
                "description": "An identifier for the product, which can be any of the following: UPC, EAN, ISBN, GTIN, or Amazon ASIN.",
                "type": "str",
                "default": "611247373064"
            },
            "latitude": {
                "description": "The latitude for the location filter. Defaults to '37.777805'.",
                "type": "str, optional",
                "default": "37.777805"
            },
            "longitude": {
                "description": "The longitude for the location filter. Defaults to '-122.49493'.",
                "type": "str, optional",
                "default": "-122.49493"
            },
            "country": {
                "description": "The country code for the location filter. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "creditcards",
        "description": "Fetches a specified number of credit card details in a given locale using the RapidAPI service.",
        "parameters": {
            "quantity": {
                "description": "The number of credit card details to retrieve.",
                "type": "int",
                "default": 100
            },
            "locale": {
                "description": "The locale to use for generating credit card details (e.g., 'en_US').",
                "type": "str",
                "default": "en_US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_companies_by_sic_code",
        "description": "Retrieve a list of the top 100 companies related to a specified SIC code using the Toolbench RapidAPI service.",
        "parameters": {
            "sic_code": {
                "description": "The Standard Industrial Classification (SIC) code used to lookup companies.",
                "type": "int",
                "default": "7374"
            }
        },
        "domain": "Data"
    },
    {
        "name": "gas_price",
        "description": "Fetches the current gas price for a specified blockchain using a single API call.",
        "parameters": {
            "chain": {
                "description": "The blockchain to get the current gas price for. Supported values are listed above. If not specified, the default value is None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "txt",
        "description": "Fetches a plain text blocklist of sites for a specified game using the StopModReposts API.",
        "parameters": {
            "game": {
                "description": "The name of the game for which to fetch the blocklist. Defaults to 'minecraft'.",
                "type": "str",
                "default": "minecraft"
            }
        },
        "domain": "Data"
    },
    {
        "name": "provider",
        "description": "Fetches data from a specified provider using the RapidAPI service.",
        "parameters": {
            "provider": {
                "description": "The name of the data provider.",
                "type": "str",
                "default": "name"
            },
            "amount": {
                "description": "The quantity of data to fetch from the provider.",
                "type": "int",
                "default": "3"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getcommunities",
        "description": "Fetches Power BI communities data for a specified page using the RapidAPI service.",
        "parameters": {
            "page": {
                "description": "The page number of Power BI communities to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "bin_iin_lookup",
        "description": "Lookup and retrieve issuer card information using the BIN (Bank Identification Number).",
        "parameters": {
            "bin": {
                "description": "The first 6 digits of the credit or debit card used to identify the card issuer.",
                "type": "int",
                "default": "470886"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getmeaning",
        "description": "Retrieves the meaning of a given word using the Toolbench RapidAPI service.",
        "parameters": {
            "word": {
                "description": "The word for which to find the meaning.",
                "type": "str",
                "default": "apple"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_token_forwarding_transactions",
        "description": "Fetch token forwarding transactions based on specified query parameters.",
        "parameters": {
            "updatedlt": {
                "description": "A timestamp to fetch transactions last updated before this time. Format: 'YYYY-MM-DD HH:MM:SS'.",
                "type": "str",
                "default": "2022-01-11 06:08:17"
            },
            "updatedgte": {
                "description": "A timestamp to fetch transactions last updated after this time. Format: 'YYYY-MM-DD HH:MM:SS'.",
                "type": "str",
                "default": "2023-01-10 06:08:17"
            },
            "is_id": {
                "description": "An identifier to fetch specific transactions.",
                "type": "str",
                "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"
            },
            "offset": {
                "description": "The number of items to skip before starting to collect the result set. Default is 0.",
                "type": "int",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of items to return. Default is 100.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_artists",
        "description": "Fetches information about one or more artists from the Spotify API.",
        "parameters": {
            "ids": {
                "description": "A string of artist IDs separated by commas.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "github",
        "description": "Checks if a given GitHub username is available using the Toolbench RapidAPI service.",
        "parameters": {
            "username": {
                "description": "The GitHub username to check.",
                "type": "str",
                "default": "username"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_for_region",
        "description": "Search for location suggestions based on a given keyword using the RapidAPI realtor16 endpoint.",
        "parameters": {
            "location": {
                "description": "The keyword or location name to search for suggestions.",
                "type": "str",
                "default": "santa monica"
            }
        },
        "domain": "Data"
    },
    {
        "name": "paragraph",
        "description": "Generates a specified amount of Lorem Ipsum paragraphs using the RapidAPI Lorem Ipsum API.",
        "parameters": {
            "amount": {
                "description": "The number of Lorem Ipsum paragraphs to generate. Defaults to 2.",
                "type": "int, optional",
                "default": "2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_rewards",
        "description": "Retrieve the bid rewards for a specific collection using Blur API.",
        "parameters": {
            "slug": {
                "description": "The identifier for the specific collection to retrieve rewards for.",
                "type": "str",
                "default": "nakamigos"
            }
        },
        "domain": "Data"
    },
    {
        "name": "google_images",
        "description": "Fetches JSON data of image results from Google Images based on a query and various optional parameters.",
        "parameters": {
            "query": {
                "description": "The search query for the images.",
                "type": "str",
                "default": "football"
            },
            "gl": {
                "description": "The country to use for the search. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "hl": {
                "description": "The language to use for the search. Defaults to 'en_us'.",
                "type": "str, optional",
                "default": "en_us"
            },
            "duration": {
                "description": "The time duration for the search (e.g., 'd' for day, 'w' for week).",
                "type": "str, optional",
                "default": ""
            },
            "chips": {
                "description": "Additional search filters.",
                "type": "str, optional",
                "default": ""
            },
            "lr": {
                "description": "The language restriction for the search.",
                "type": "str, optional",
                "default": ""
            },
            "ijn": {
                "description": "Index of the search results page. Defaults to '0'.",
                "type": "str, optional",
                "default": "0"
            },
            "html": {
                "description": "If True, returns HTML content.",
                "type": "str, optional",
                "default": ""
            },
            "uule": {
                "description": "Encoded location parameters.",
                "type": "str, optional",
                "default": ""
            },
            "device": {
                "description": "The device to use for the search (e.g., 'desktop', 'mobile'). Defaults to 'desktop'.",
                "type": "str, optional",
                "default": "desktop"
            },
            "safe": {
                "description": "Safe search setting.",
                "type": "str, optional",
                "default": ""
            },
            "nfpr": {
                "description": "Filter option for non-personal results.",
                "type": "str, optional",
                "default": ""
            },
            "tbs": {
                "description": "Additional search parameters.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getinfo",
        "description": "Fetches information about a given mobile number using the Ajith Indian Mobile Info API.",
        "parameters": {
            "mobno": {
                "description": "A 10-digit mobile number to fetch information for.",
                "type": "int",
                "default": "9090909090"
            }
        },
        "domain": "Data"
    },
    {
        "name": "registration_check",
        "description": "Checks vehicle registration information using the RapidAPI service.",
        "parameters": {
            "rego": {
                "description": "The registration number of the vehicle to be checked.",
                "type": "str",
                "default": "CC831Y"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rarity_tools",
        "description": "Fetches collection items data from the Rarity Tools Collection Items Endpoint using the provided slug and RapidAPI key.",
        "parameters": {
            "slug": {
                "description": "The unique identifier for the collection to fetch data for.",
                "type": "str",
                "default": "women-ape-yacht-club"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_holders",
        "description": "Retrieves the top holders in each protocol by making an API request.",
        "parameters": {
            "is_id": {
                "description": "The protocol ID for which to retrieve the top holders.",
                "type": "str",
                "default": "curve"
            },
            "start": {
                "description": "The starting index to retrieve the top holders. Defaults to '0'.",
                "type": "str, optional",
                "default": "0"
            },
            "limit": {
                "description": "The maximum number of top holders to retrieve. Defaults to '10'.",
                "type": "str, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "data",
        "description": "Fetches data from the RapidAPI service based on the provided keyword.",
        "parameters": {
            "keyword": {
                "description": "The keyword used to query the RapidAPI service.",
                "type": "str",
                "default": "Email marketing"
            }
        },
        "domain": "Data"
    },
    {
        "name": "autocomplete_cities",
        "description": "Fetches a list of city names in India that match the input prefix using RapidAPI.",
        "parameters": {
            "city": {
                "description": "The prefix of the city name to autocomplete search for.",
                "type": "str",
                "default": "Chenn"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_crypto",
        "description": "Generates a list of fake cryptocurrency assets using the Random Crypto API.",
        "parameters": {
            "size": {
                "description": "Number of fake cryptocurrency assets to generate. Default is 5.",
                "type": "int, optional",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "channel_channels",
        "description": "Fetches data from the YouTube channel's collections or subscriptions using the RapidAPI service.",
        "parameters": {
            "is_id": {
                "description": "Channel ID to query. Default is 'UC-lHJZR3Gqxm24_Vd_AJ5Yw'.",
                "type": "str",
                "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"
            },
            "gl": {
                "description": "Geolocation code to filter the results by region. Default is 'US'.",
                "type": "str",
                "default": "US"
            },
            "cursor": {
                "description": "Pagination token for results. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "hl": {
                "description": "Language code for the results. Default is 'en'.",
                "type": "str",
                "default": "en"
            },
            "filter": {
                "description": "Filter key for the type of collections. Options are 'all_collections', 'subscriptions', or a custom collection token. Default is None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "searchplayer",
        "description": "Searches for player data using the Toolbench RapidAPI service.",
        "parameters": {
            "player_input": {
                "description": "The name or keyword to search for a player. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_cigar_average_length",
        "description": "Fetches the average length of cigars based on specified filters.",
        "parameters": {
            "wrapper": {
                "description": "The wrapper type of the cigar. Default is 'Connecticut Shade, Ecuador'.",
                "type": "str",
                "default": "Connecticut Shade, Ecuador"
            },
            "name": {
                "description": "The name of the cigar. Default is 'Torpedo'.",
                "type": "str",
                "default": "Torpedo"
            },
            "filler": {
                "description": "The filler type of the cigar. Default is 'Nicaragua'.",
                "type": "str",
                "default": "Nicaragua"
            },
            "country": {
                "description": "The country where the cigar is made. Default is 'Nicaragua'.",
                "type": "str",
                "default": "Nicaragua"
            },
            "color": {
                "description": "The color of the cigar. Default is 'Colorado Claro'.",
                "type": "str",
                "default": "Colorado Claro"
            },
            "strength": {
                "description": "The strength of the cigar. Default is 'Mild-Medium'.",
                "type": "str",
                "default": "Mild-Medium"
            },
            "brandid": {
                "description": "The brand ID of the cigar. Default is 13711.",
                "type": "int",
                "default": "13711"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_country_by_fifa_code",
        "description": "Gets information about a country using its FIFA assigned country code from the Geography API.",
        "parameters": {
            "fifacode": {
                "description": "The FIFA assigned country code.",
                "type": "str",
                "default": "USA"
            },
            "fields": {
                "description": "A comma-separated list of fields to filter the response. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "world_coordinate_to_income",
        "description": "Fetches per capita income data for a given set of geographic coordinates (longitude and latitude) using the provided API key.",
        "parameters": {
            "lon": {
                "description": "Longitude of the geographic coordinate.",
                "type": "int",
                "default": "0"
            },
            "lat": {
                "description": "Latitude of the geographic coordinate.",
                "type": "int",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getproductbyid",
        "description": "Fetches specific product details by product ID from the RapidAPI endpoint.",
        "parameters": {
            "is_id": {
                "description": "The ID of the product to fetch.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_country_population",
        "description": "Fetch the population data for a given country using the Toolbench RapidAPI service.",
        "parameters": {
            "country": {
                "description": "The name of the country for which to fetch the population data.",
                "type": "str",
                "default": "Egypt"
            }
        },
        "domain": "Data"
    },
    {
        "name": "consumers_get_reviews",
        "description": "Retrieve reviews for a specific consumer from the Trustpilot API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the consumer whose reviews are to be fetched.",
                "type": "str",
                "default": "5f9c424654404f0019fb19fc"
            },
            "includereportedreviews": {
                "description": "Specifies whether or not to include reported reviews. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "perpage": {
                "description": "The number of items to include per page for pagination purposes. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "page": {
                "description": "The number of items to include per page for pagination purposes. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_scrabble_score",
        "description": "Fetches the Scrabble score for a given word using the Dicolink API.",
        "parameters": {
            "mot": {
                "description": "The word for which the Scrabble score is to be retrieved.",
                "type": "str",
                "default": "cheval"
            }
        },
        "domain": "Data"
    },
    {
        "name": "application_details_by_id",
        "description": "Retrieves application details from the RapidAPI by application ID.",
        "parameters": {
            "is_id": {
                "description": "The application ID to fetch details for.",
                "type": "str",
                "default": "835599320"
            },
            "country": {
                "description": "The country code to filter results. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "lang": {
                "description": "The language code to filter results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_city_by_id",
        "description": "Fetch details of a city by its ID using the RapidAPI Geography API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the city to be fetched.",
                "type": "str",
                "default": "1796236"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_a_place",
        "description": "Search for a place using the Busy and Popular Times API, similar to how a location is searched on Google, returning the popular times graph if available.",
        "parameters": {
            "query": {
                "description": "The search term for the location.",
                "type": "str",
                "default": "Walmart+8400+Coral+Way+Miami+FL+33155"
            }
        },
        "domain": "Data"
    },
    {
        "name": "media_info",
        "description": "Retrieves information about a media item from the Instagram API.",
        "parameters": {
            "media_id": {
                "description": "The ID of the media item to retrieve information for, used as a query parameter.",
                "type": "str",
                "default": "2489189987845943833_7593209169"
            },
            "mediaid": {
                "description": "The ID of the media item to retrieve information for, included in the URL path.",
                "type": "str",
                "default": "2489189987845943833_7593209169"
            }
        },
        "domain": "Data"
    },
    {
        "name": "protocols",
        "description": "Fetches protocol information from the \"All-in-One Crypto Swiss Knife\" RapidAPI service, optionally filtering by a search query and chain identifier.",
        "parameters": {
            "q": {
                "description": "Search parameter to filter the protocols. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "chain_id": {
                "description": "Chain identifier to filter the protocols. Supported chains: \"eth\", \"bsc\", \"matic\", \"avax\", \"okt\", \"hmy\", \"heco\", \"klay\", \"op\", \"arb\", \"ftm\", \"xdai\", \"cro\", \"mobm\", \"celo\", \"aurora\", \"fuse\", \"evmos\", \"cfx\", \"kava\". Defaults to 'fuse'.",
                "type": "str, optional",
                "default": "fuse"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_asn_by_country",
        "description": "Retrieves all Autonomous System Numbers (ASNs) associated with a given country.",
        "parameters": {
            "country_code": {
                "description": "The ISO 3166-1 alpha-2 country code (e.g., 'US', 'GB') to retrieve all ASNs for.",
                "type": "str",
                "default": "sm"
            }
        },
        "domain": "Data"
    },
    {
        "name": "find_zip_codes_by_city_and_district",
        "description": "Fetch the zip codes for a specified city and district in Poland.",
        "parameters": {
            "accept": {
                "description": "Requested content type.",
                "type": "str",
                "default": "application/json"
            },
            "city": {
                "description": "The name of the city to search for zip codes.",
                "type": "str",
                "default": "Wroc\u0142aw"
            },
            "district": {
                "description": "The district within the specified city to search for zip codes.",
                "type": "str",
                "default": "Opor\u00f3w"
            },
            "x_traceid": {
                "description": "A trace ID that is copied to the API response header. Default is 'optional_abc123'.",
                "type": "str, optional",
                "default": "optional_abc123"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_filters",
        "description": "Fetches the relevant job search filters and their estimated result counts based on the given query parameters. This is useful for refining search results or for analytics purposes.",
        "parameters": {
            "query": {
                "description": "Free-form jobs search query. It is highly recommended to include job title and location as part of the query.",
                "type": "str",
                "default": "Python developer in Texas, USA"
            },
            "language": {
                "description": "Language of the results. Uses a 2-letter language code (e.g., 'en').",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "Country/region from which to make the query. Uses a 2-letter country code (e.g., 'us').",
                "type": "str, optional",
                "default": ""
            },
            "categories": {
                "description": "Deprecated. Specifies job categories/industries as a comma-separated list of category values.",
                "type": "str, optional",
                "default": ""
            },
            "company_types": {
                "description": "Specifies company types as a comma-separated list of company type values.",
                "type": "str, optional",
                "default": ""
            },
            "job_titles": {
                "description": "Specifies job titles as a comma-separated list of job title values.",
                "type": "str, optional",
                "default": ""
            },
            "job_requirements": {
                "description": "Specifies job requirements as a comma-separated list (e.g., 'under_3_years_experience', 'no_degree').",
                "type": "str, optional",
                "default": ""
            },
            "radius": {
                "description": "Distance (in km) within which to return jobs, measured from the location specified in the query.",
                "type": "int, optional",
                "default": ""
            },
            "employers": {
                "description": "Specifies employers as a comma-separated list of employer values.",
                "type": "str, optional",
                "default": ""
            },
            "remote_jobs_only": {
                "description": "Whether to return only remote jobs (default is False).",
                "type": "bool, optional",
                "default": ""
            },
            "employment_types": {
                "description": "Specifies employment types as a comma-separated list (e.g., 'FULLTIME', 'PARTTIME').",
                "type": "str, optional",
                "default": ""
            },
            "date_posted": {
                "description": "Specifies the posting date range for job results. Possible values include 'all', 'today', '3days', 'week', 'month'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_profile_recent_activity_time",
        "description": "Retrieves the time of the latest activity on a given LinkedIn profile using the Fresh LinkedIn Profile Data API.",
        "parameters": {
            "linkedin_url": {
                "description": "The URL of the LinkedIn profile to query.",
                "type": "str",
                "default": "https://www.linkedin.com/in/williamhgates/"
            }
        },
        "domain": "Data"
    },
    {
        "name": "age_calculator",
        "description": "Calculates age based on the provided date and optional timezone.",
        "parameters": {
            "date": {
                "description": "The date of birth in one of the following formats: YYYYMMDD, YYYY-MM-DD, MMDDYYYY, MM-DD-YYYY.",
                "type": "str",
                "default": "19870630"
            },
            "timezone": {
                "description": "The timezone to be considered for age calculation. Default is 'US/Eastern'. Format example: 'US/Eastern', 'US/Pacific', 'Europe/London'.",
                "type": "str, optional",
                "default": "US/Eastern"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fish_api_group",
        "description": "Groups available fish data based on the provided metadata property, value, and attribute using the Fish API.",
        "parameters": {
            "meta_property": {
                "description": "The metadata property to search for.",
                "type": "str",
                "default": "scientific_classification"
            },
            "property_value": {
                "description": "The value of the metadata property that will be matched.",
                "type": "str",
                "default": "actinopterygii"
            },
            "meta_property_attribute": {
                "description": "The attribute of the metadata property to be searched. Defaults to 'class'.",
                "type": "str, optional",
                "default": "class"
            }
        },
        "domain": "Data"
    },
    {
        "name": "addresses",
        "description": "Fetches a list of addresses matching the search query using the RapidAPI AddressR service.",
        "parameters": {
            "q": {
                "description": "The search string used to query addresses.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "keyword_search_at_coordinate_point",
        "description": "Fetch search results for a given query at a specified geographic coordinate point using the RapidAPI Local Rank Tracker service.",
        "parameters": {
            "lat": {
                "description": "Latitude of the coordinate point.",
                "type": "str",
                "default": "37.341759"
            },
            "lng": {
                "description": "Longitude of the coordinate point.",
                "type": "str",
                "default": "-121.938314"
            },
            "query": {
                "description": "The search query or keyword.",
                "type": "str",
                "default": "web design"
            },
            "x_user_agent": {
                "description": "Device type for the search. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "zoom": {
                "description": "Google Maps zoom level, ranging from 0 to 18. Default is '13'.",
                "type": "str, optional",
                "default": "13"
            }
        },
        "domain": "Data"
    },
    {
        "name": "lottery_results_by_date_id",
        "description": "Fetches lottery results for a given date id from the Thai lottery API.",
        "parameters": {
            "dateid": {
                "description": "The date identifier for which to fetch lottery results.",
                "type": "str",
                "default": "20220316"
            }
        },
        "domain": "Data"
    },
    {
        "name": "app_reviews",
        "description": "Fetches app reviews from a specified app store using various filters.",
        "parameters": {
            "app_id": {
                "description": "The app ID for which to get reviews.",
                "type": "str",
                "default": "com.snapchat.android"
            },
            "device": {
                "description": "Only return reviews made on a specific device type. Allowed values are `PHONE`, `TABLET`, `CHROMEBOOK`. Default is `PHONE`.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "The country code to use, specified as a 2-letter code (ISO 3166-1 alpha-2). Default is `us`.",
                "type": "str, optional",
                "default": "us"
            },
            "sort_by": {
                "description": "How to sort the reviews in the results. Allowed values are `MOST_RELEVANT`, `NEWEST`, `RATING`. Default is `MOST_RELEVANT`.",
                "type": "str, optional",
                "default": ""
            },
            "rating": {
                "description": "Only return reviews with a certain star rating. Allowed values are `ANY`, `ONE_STAR`, `TWO_STARS`, `THREE_STARS`, `FOUR_STARS`, `FIVE_STARS`. Default is `ANY`.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "Maximum number of reviews in the results. Default is 10.",
                "type": "int, optional",
                "default": "10"
            },
            "cursor": {
                "description": "Specify a cursor from the previous request to get the next set of results.",
                "type": "str, optional",
                "default": ""
            },
            "language": {
                "description": "The language to use, specified as a 2-letter language code (ISO 639-1 alpha-2). Default is `en`.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "sha_text_hash",
        "description": "Hashes the input text using a specified SHA algorithm and returns the resulting hash.",
        "parameters": {
            "datastring": {
                "description": "The input text to be hashed.",
                "type": "str",
                "default": "enter-your-string-here"
            },
            "mode": {
                "description": "The SHA algorithm to use. Valid values are 1, 256, 384, or 512.",
                "type": "int",
                "default": "256"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getpeoplebytopic",
        "description": "Fetches Azure influencers by topic from the specified page using the RapidAPI key.",
        "parameters": {
            "topic": {
                "description": "The topic to search for Azure influencers.",
                "type": "str",
                "default": "compute"
            },
            "page": {
                "description": "The page number of search results to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_feed",
        "description": "Fetches the Instagram feed for a user.",
        "parameters": {
            "userid": {
                "description": "The ID of the Instagram user whose feed is to be retrieved.",
                "type": "int",
                "default": "2910436321320428760"
            },
            "max_id": {
                "description": "The ID used for pagination to fetch the next page of results. Defaults to '{}'.",
                "type": "str, optional",
                "default": "{}"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_collection_pricing_chart",
        "description": "Retrieves pricing chart data for a specified collection from the Blur API.",
        "parameters": {
            "spanms": {
                "description": "The time span in milliseconds to retrieve the pricing data for. Default is '86400000' (24 hours).",
                "type": "str",
                "default": "86400000"
            },
            "collectionid": {
                "description": "The ID of the NFT collection to retrieve data for. Default is '0xed5af388653567af2f388e6224dc7c4b3241c544'.",
                "type": "str",
                "default": "0xed5af388653567af2f388e6224dc7c4b3241c544"
            },
            "intervalms": {
                "description": "The time interval in milliseconds for data points in the chart. Default is '300000' (5 minutes).",
                "type": "str",
                "default": "300000"
            }
        },
        "domain": "Data"
    },
    {
        "name": "autocomplete_zipcodes_lite",
        "description": "Fetches autocomplete suggestions for USA zip codes using the provided RapidAPI key.",
        "parameters": {
            "zipcode": {
                "description": "The zip code for which to fetch autocomplete suggestions.",
                "type": "str",
                "default": "110"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_transaction_v2",
        "description": "Fetches normalized transaction data from a specified blockchain using the provided transaction ID and API key.",
        "parameters": {
            "blockchain": {
                "description": "The name of the blockchain to query.",
                "type": "str",
                "default": "bitcoin"
            },
            "txid": {
                "description": "The transaction ID for the desired transaction.",
                "type": "str",
                "default": "cd8ec77174e426070d0a50779232bba7312b712e2c6843d82d963d7076c61366"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fetch_business_data",
        "description": "Fetches business-related information associated with a given WhatsApp business account phone number using the Toolbench RapidAPI.",
        "parameters": {
            "phone": {
                "description": "The phone number of the WhatsApp business account for which data is being requested.",
                "type": "int",
                "default": "34655719560"
            }
        },
        "domain": "Data"
    },
    {
        "name": "state",
        "description": "Fetch a list of sub-regions/states/provinces/departments of the world's countries based on specified filters.",
        "parameters": {
            "limit": {
                "description": "Maximum number of records to return. Default is 250.",
                "type": "int, optional",
                "default": "250"
            },
            "iso_a2": {
                "description": "Two-letter country code to filter results. Default is 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "iso_3166_2": {
                "description": "Subregion's ISO-3166-2 letter code to filter results.",
                "type": "str, optional",
                "default": ""
            },
            "fields": {
                "description": "Comma-separated list of fields to include in the result. Default is 'iso_a2'.",
                "type": "str, optional",
                "default": "iso_a2"
            },
            "name": {
                "description": "Partial name filter for states in the specified language. Default is 'tex'.",
                "type": "str, optional",
                "default": "tex"
            },
            "lang": {
                "description": "ISO 639-1 language code for language selection. Overrides Accept-Language header. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_playlist",
        "description": "Fetches playlist details from the Spotify Data API using the provided playlist ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the playlist to fetch.",
                "type": "str",
                "default": "37i9dQZF1DX1ZQxccKVEtV"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getmentions",
        "description": "Fetches Twitter mentions for a given query using the specified parameters.",
        "parameters": {
            "query": {
                "description": "The search query to find mentions for (e.g., brand name, competitor).",
                "type": "str",
                "default": ""
            },
            "period": {
                "description": "The time period for mentions, in days. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "page": {
                "description": "The page number of results to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "consulta_cep",
        "description": "Fetches information about a given CEP (Postal Code) using the RapidAPI service.",
        "parameters": {
            "cep": {
                "description": "The Brazilian postal code (CEP) to be queried.",
                "type": "str",
                "default": "01452922"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_by_url",
        "description": "Fetches details about tracks, albums, and artists from a given Spotify URL using the MusicLinks API.",
        "parameters": {
            "spotify_url": {
                "description": "The Spotify URL for which details are to be fetched.",
                "type": "str",
                "default": "https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C"
            }
        },
        "domain": "Data"
    },
    {
        "name": "pursuit",
        "description": "Performs a search for files using specified query parameters on FilePursuit and returns the search results.",
        "parameters": {
            "q": {
                "description": "The search query.",
                "type": "str",
                "default": ""
            },
            "filetype": {
                "description": "The file extension to filter results by. Only one file extension is accepted per query.",
                "type": "str, optional",
                "default": ""
            },
            "type": {
                "description": "The file extension to filter results by. Only one file extension is accepted per query.",
                "type": "str, optional",
                "default": ""
            },
            "sort": {
                "description": "The sorting order of the results. Accepted values are 'sizeasc', 'sizedesc', 'dateasc', 'datedesc', 'fileasc', and 'filedesc'. By default, 'datedesc' is selected.",
                "type": "str, optional",
                "default": ""
            },
            "start": {
                "description": "The starting count for pagination.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "season_episodes",
        "description": "Fetch episodes for a given season from the Netflix RapidAPI.",
        "parameters": {
            "ids": {
                "description": "Season IDs (separated by commas) for which episodes are to be fetched.",
                "type": "str",
                "default": "80077209,80117715"
            },
            "lang": {
                "description": "Language code for the episodes. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "limit": {
                "description": "The maximum number of episodes to return. Defaults to 25.",
                "type": "int, optional",
                "default": "25"
            },
            "offset": {
                "description": "The offset for pagination. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_places",
        "description": "Fetches a list of places (either countries, cities, or administrative divisions) that match a query and can be filtered by various properties.",
        "parameters": {
            "type": {
                "description": "Filters places by `type`. Specifiable values are 'CITY', 'ADMIN_DIVISION_1', 'ADMIN_DIVISION_2', and 'COUNTRY'. Default is 'CITY'.",
                "type": "str",
                "default": "CITY"
            },
            "language": {
                "description": "Specifies the language (ISO 639-1) to get the localized name of the place. If translation is unavailable, the \"localizedName\" property will be null.",
                "type": "str",
                "default": ""
            },
            "skip": {
                "description": "Number of places to ignore before beginning to return results. Used with `limit` to paginate results. Defaults to 0.",
                "type": "int",
                "default": "0"
            },
            "country": {
                "description": "Filters places by their country `id`. Multiple values can be specified, separated by commas (e.g., 'US,CA'). Default is 'US,CA'.",
                "type": "str",
                "default": "US,CA"
            },
            "limit": {
                "description": "Maximum number of places to return. Used with `skip` to paginate results. Default is 10, maximum is 100.",
                "type": "int",
                "default": "10"
            },
            "admindivision1": {
                "description": "Filters places by their adminDivision1 `id`. Multiple values can be specified, separated by commas (e.g., 'US.CA,US.DE').",
                "type": "str",
                "default": ""
            },
            "admindivision2": {
                "description": "Filters places by their adminDivision2 `id`. Multiple values can be specified, separated by commas.",
                "type": "str",
                "default": ""
            },
            "accuracyradiuskm": {
                "description": "Maximum radius (in kilometers) from the point specified by `latitude` and `longitude` to filter places located within the area. Default is 100 km.",
                "type": "int",
                "default": ""
            },
            "latitude": {
                "description": "Latitude coordinate to filter places by location. Ignored if `longitude` is not specified.",
                "type": "int",
                "default": ""
            },
            "q": {
                "description": "Query string to find places with a similar name. Default is 'New York'.",
                "type": "str",
                "default": "New York"
            },
            "longitude": {
                "description": "Longitude coordinate to filter places by location. Ignored if `latitude` is not specified.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_store_info",
        "description": "Retrieves information on any store in Shopify using the provided RapidAPI key.",
        "parameters": {
            "page": {
                "description": "The page number to retrieve, defaults to None. If provided, it loads the specified page with results. Max page is 100.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "list_playlist_videos",
        "description": "This function lists available videos of a given YouTube playlist. It supports pagination to retrieve multiple pages of results and ensures thumbnails are not blurred by age restrictions.",
        "parameters": {
            "nexttoken": {
                "description": "A string token for fetching the next page of data. If not specified, the first page of data is returned.",
                "type": "str, optional",
                "default": ""
            },
            "playlistid": {
                "description": "The ID of the YouTube playlist. Defaults to 'PLeCdlPO-XhWFzEVynMsmosfdRsIZXhZi0'.",
                "type": "str, optional",
                "default": "PLeCdlPO-XhWFzEVynMsmosfdRsIZXhZi0"
            },
            "lang": {
                "description": "The language code (ISO-639) for localized results. Defaults to 'en-US'. Unsupported codes will fallback to 'en-US'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieving_a_collection",
        "description": "Retrieve detailed information about a specific collection on OpenSea, including real-time statistics such as floor price.",
        "parameters": {
            "collection_slug": {
                "description": "The unique identifier for the collection on OpenSea.",
                "type": "str",
                "default": "ongakucraft"
            }
        },
        "domain": "Data"
    },
    {
        "name": "video_subtitles",
        "description": "Fetches the available subtitles for a given YouTube video using the specified RapidAPI key.",
        "parameters": {
            "video_id": {
                "description": "The ID of the YouTube video for which subtitles are to be fetched.",
                "type": "str",
                "default": "PuQFESk0BrA"
            }
        },
        "domain": "Data"
    },
    {
        "name": "consulta_cadastro_de_contribuintes",
        "description": "Retrieves taxpayer registration details from the Centralized Taxpayer Registry.",
        "parameters": {
            "taxid": {
                "description": "The taxpayer identification number.",
                "type": "str",
                "default": "84447804000123"
            },
            "maxage": {
                "description": "The maximum age of the data in days. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            },
            "states": {
                "description": "Comma-separated states for including taxpayer registry information. Use 'BR' for all states. Defaults to 'BR'.",
                "type": "str, optional",
                "default": "BR"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_backlinks",
        "description": "Fetches the list of top backlinks for a given domain using the Best Backlink Checker API.",
        "parameters": {
            "domain": {
                "description": "The domain for which to retrieve the top backlinks.",
                "type": "str",
                "default": "getecz.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_bank_by_id",
        "description": "Fetch a random fake bank record by its ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the fake bank record to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_available_job_titles",
        "description": "Fetches available LinkedIn job titles based on a provided name using the Toolbench RapidAPI service.",
        "parameters": {
            "name": {
                "description": "The name or keyword to search for job titles.",
                "type": "str",
                "default": "fou"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getzipcodebycounty",
        "description": "Fetches the ZIP code information for a given county using the Zillow API.",
        "parameters": {
            "county": {
                "description": "The name of the county for which the ZIP code information is to be retrieved.",
                "type": "str",
                "default": "Hampshire"
            }
        },
        "domain": "Data"
    },
    {
        "name": "lists_tweets",
        "description": "Fetches a list of tweets from a specified Twitter list using the RapidAPI service.",
        "parameters": {
            "list_id": {
                "description": "The unique identifier for the Twitter list.",
                "type": "str",
                "default": "1591033111726391297"
            },
            "cursor": {
                "description": "The cursor to use for fetching the next page of results. Defaults to 'HBaAgLydmczz0y0AAA=='.",
                "type": "str, optional",
                "default": "HBaAgLydmczz0y0AAA=="
            },
            "count": {
                "description": "The number of tweets to retrieve. Defaults to '20'.",
                "type": "str, optional",
                "default": "20"
            }
        },
        "domain": "Data"
    },
    {
        "name": "tweet_details",
        "description": "Fetch details and comments for a specific tweet using its tweet ID.",
        "parameters": {
            "tweetid": {
                "description": "The ID of the tweet for which details and comments are to be fetched.",
                "type": "str",
                "default": "1668868113725550592"
            },
            "cursor": {
                "description": "A cursor for paginating through comments. Use the value obtained from the previous response to fetch the next page. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "count": {
                "description": "The number of comments to fetch. Defaults to '20'.",
                "type": "str, optional",
                "default": "20"
            }
        },
        "domain": "Data"
    },
    {
        "name": "domainstatus",
        "description": "Retrieves the domain status to determine if it is a webmail or disposable email provider.",
        "parameters": {
            "email": {
                "description": "The email address to check against the domain status.",
                "type": "str, optional",
                "default": ""
            },
            "domain": {
                "description": "The domain to check for its status.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "i18nregions",
        "description": "Fetches a list of content regions supported by the YouTube website.",
        "parameters": {
            "part": {
                "description": "Specifies the i18nRegion resource properties that the API response will include. Should be set to 'snippet'.",
                "type": "str",
                "default": "snippet"
            },
            "hl": {
                "description": "Specifies the language that should be used for text values in the API response. Defaults to 'en_US'.",
                "type": "str, optional",
                "default": "en_US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "geocode_v1_json",
        "description": "Fetches geocoding information from the OpenCage Geocoder API.",
        "parameters": {
            "q": {
                "description": "A query string that can be either specific coordinates (\"latitude,longitude\") or an address.",
                "type": "str",
                "default": "Berlin"
            },
            "key": {
                "description": "The API key obtained from registering at https://geocoder.opencagedata.com/.",
                "type": "str",
                "default": "OPENCAGE-API-Key"
            },
            "language": {
                "description": "An IETF language tag (e.g., 'es' for Spanish or 'pt-BR' for Brazilian Portuguese). Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_details_by_asn_number",
        "description": "Fetch details related to a given Autonomous System Number (ASN) such as IP ranges, country, organization, and CIDR.",
        "parameters": {
            "asn_number": {
                "description": "The ASN number for which details need to be retrieved.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_by_screen_name",
        "description": "Fetch user details from the Twitter API using a given screen name.",
        "parameters": {
            "username": {
                "description": "The screen name of the Twitter user.",
                "type": "str",
                "default": "elonmusk"
            }
        },
        "domain": "Data"
    },
    {
        "name": "whois_lookup",
        "description": "Performs a WHOIS lookup for the given domain using the Toolbench RapidAPI service and returns the data in JSON format.",
        "parameters": {
            "domain": {
                "description": "The domain name to be looked up.",
                "type": "str",
                "default": "facebook.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "sizes_all_countries",
        "description": "Gets the size information of countries in Africa based on the specified country name.",
        "parameters": {
            "country_name": {
                "description": "The name of the country for which to get the size information. Use 'all' to get size information for all countries.",
                "type": "str",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "serp",
        "description": "Fetches search engine results using the given query and optional parameters.",
        "parameters": {
            "query": {
                "description": "The search query to be sent to the search engine.",
                "type": "str",
                "default": "YouTube"
            },
            "proxy": {
                "description": "The country to use as a proxy for the search. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "max": {
                "description": "The maximum number of search results to return. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_user_data",
        "description": "Fetches user data from the Discord API using a given user ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the user whose data is being fetched.",
                "type": "str",
                "default": "25458687581618176"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_paid_apps",
        "description": "Fetch the top paid apps chart from Google Play, optionally filtering by category, region, and language. Results can be limited to a specified number of apps.",
        "parameters": {
            "limit": {
                "description": "Limit the number of results. Allowed values are between 1 and 200. Default is 50. Requests with a limit value between 101-200 will be charged double.",
                "type": "int",
                "default": "50"
            },
            "category": {
                "description": "Get the chart in a specific Google Play category (e.g., 'SOCIAL'). Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "The country code to use, specified as a 2-letter ISO 3166-1 alpha-2 country code. Default is 'us'.",
                "type": "str",
                "default": "us"
            },
            "language": {
                "description": "The language to use, specified as a 2-letter ISO 639-1 alpha-2 language code. Default is 'en'.",
                "type": "str",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "province",
        "description": "Fetches the average price of gas in a specific province in Canada using the Canadian Gas Prices API.",
        "parameters": {
            "province": {
                "description": "A valid province name in Canada. Options include Ontario, Quebec, Alberta, British Columbia, Manitoba, New Brunswick, Newfoundland and Labrador, Nova Scotia, Prince Edward Island, Saskatchewan.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_profile_data",
        "description": "Retrieves profile data from the LinkedIn Profile Data API using a given username.",
        "parameters": {
            "username": {
                "description": "The LinkedIn username for which to retrieve profile data.",
                "type": "str",
                "default": "username"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_tweets",
        "description": "Fetches a user's tweets using the Twttr RapidAPI.",
        "parameters": {
            "twttr_proxy": {
                "description": "Optional proxy to use for the Twitter API request.",
                "type": "str, optional",
                "default": ""
            },
            "twttr_session": {
                "description": "Optional session identifier for the Twitter API request.",
                "type": "str, optional",
                "default": ""
            },
            "cursor": {
                "description": "Optional cursor for paginated results.",
                "type": "str, optional",
                "default": ""
            },
            "user_id": {
                "description": "The Twitter user ID for which to fetch tweets.",
                "type": "str, optional",
                "default": ""
            },
            "username": {
                "description": "The Twitter username for which to fetch tweets (default is 'elonmusk').",
                "type": "str, default='elonmusk'",
                "default": "elonmusk"
            }
        },
        "domain": "Data"
    },
    {
        "name": "blockchain_info_summary",
        "description": "Fetches a basic summary of information related to the specified blockchain from the Chain49 API.",
        "parameters": {
            "blockchain": {
                "description": "The name of the blockchain to get information about.",
                "type": "str",
                "default": "bitcoin"
            }
        },
        "domain": "Data"
    },
    {
        "name": "show_image",
        "description": "Fetch and return the image data of a flower from the API using the given flower ID.",
        "parameters": {
            "is_id": {
                "description": "The identifier for the specific flower.",
                "type": "str",
                "default": "6383808bff3dde72b0fc35d6"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getbookbyid",
        "description": "Retrieve details of a specific book using its unique ID.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier for the book to retrieve.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_related_questions",
        "description": "Fetches related questions from Google SERP \"People Also Ask\" boxes based on a provided query.",
        "parameters": {
            "query": {
                "description": "The search query for which to find related questions.",
                "type": "str",
                "default": "prenatal vitamins"
            },
            "location": {
                "description": "Specify the proxy location for the search. Defaults to 'us'. Supported countries include 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'.",
                "type": "str, optional",
                "default": "us"
            },
            "max_results": {
                "description": "The maximum number of related questions to fetch. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "random_credit_card",
        "description": "Generates a list of fake credit card details.",
        "parameters": {
            "size": {
                "description": "The number of fake credit card details to generate. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rates",
        "description": "Fetches live currency conversion rates based on the specified parameters.",
        "parameters": {
            "output": {
                "description": "The output format of the response. Can be either 'JSON' or 'XML'. Default is 'JSON'.",
                "type": "str",
                "default": "JSON"
            },
            "base": {
                "description": "The base currency for conversion rates. Examples include 'USD', 'GBP', or 'BTC'. Default is 'USD'.",
                "type": "str",
                "default": "USD"
            }
        },
        "domain": "Data"
    },
    {
        "name": "business_units_search_by_domain",
        "description": "Searches for a business unit by its domain name using the Unofficial Trust Pilot API.",
        "parameters": {
            "name": {
                "description": "The domain name to search for.",
                "type": "str",
                "default": "google.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "scrape_contacts_from_website",
        "description": "Scrape emails, phone numbers, and social media profiles from the root domain of a given website.",
        "parameters": {
            "query": {
                "description": "The domain to scrape contact information from (e.g., 'wsgr.com'). This can be any valid URL, and the function will use its root domain for extraction.",
                "type": "str",
                "default": "wsgr.com"
            },
            "match_email_domain": {
                "description": "If True, the function will only return emails that belong to the same domain as the one provided in `query`. Defaults to None.",
                "type": "bool, optional",
                "default": "true"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getgames",
        "description": "Retrieves Diablo 4 game data from the specified page using RapidAPI.",
        "parameters": {
            "page": {
                "description": "The page number of game data to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "student_property_to_rent",
        "description": "Fetch student rental properties based on various search criteria.",
        "parameters": {
            "identifier": {
                "description": "A unique location identifier obtained from the auto-complete endpoint.",
                "type": "str",
                "default": "REGION^1036"
            },
            "sort_by": {
                "description": "The criteria to sort the results by.",
                "type": "str, optional",
                "default": ""
            },
            "page": {
                "description": "The page number to retrieve results from.",
                "type": "int, optional",
                "default": ""
            },
            "max_price": {
                "description": "The maximum price filter for the properties.",
                "type": "int, optional",
                "default": ""
            },
            "search_radius": {
                "description": "The search radius in miles from the specified location. Defaults to '0.0'.",
                "type": "str, optional",
                "default": "0.0"
            },
            "min_price": {
                "description": "The minimum price filter for the properties.",
                "type": "int, optional",
                "default": ""
            },
            "max_bedroom": {
                "description": "The maximum number of bedrooms filter.",
                "type": "int, optional",
                "default": ""
            },
            "furnished_type": {
                "description": "The type of furnishing (comma-separated values). Examples: 'Furnished,PartFurnished,Unfurnished'.",
                "type": "str, optional",
                "default": ""
            },
            "min_bedroom": {
                "description": "The minimum number of bedrooms filter.",
                "type": "int, optional",
                "default": ""
            },
            "has_garden": {
                "description": "Filter to include properties with a garden.",
                "type": "bool, optional",
                "default": ""
            },
            "added_to_site": {
                "description": "The date the property was added to the site.",
                "type": "str, optional",
                "default": ""
            },
            "property_type": {
                "description": "The type of property (comma-separated values). Examples: 'Bungalow,StudentHalls,Detached,SemiDetached,Terraced,Flat'.",
                "type": "str, optional",
                "default": ""
            },
            "keywords": {
                "description": "Keywords to filter properties (comma-separated values). Examples: 'pool, garden'.",
                "type": "str, optional",
                "default": ""
            },
            "has_house_share": {
                "description": "Filter to include properties that have house sharing options.",
                "type": "bool, optional",
                "default": ""
            },
            "has_include_let_agreed": {
                "description": "Filter to include properties that are let agreed.",
                "type": "bool, optional",
                "default": ""
            },
            "has_parking": {
                "description": "Filter to include properties with parking.",
                "type": "bool, optional",
                "default": ""
            },
            "do_not_show_house_share": {
                "description": "Filter to exclude properties with house sharing options.",
                "type": "bool, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "phone",
        "description": "Fetches information about a given phone number using the phone-validation API.",
        "parameters": {
            "phone": {
                "description": "The phone number to be validated, should be in E.164 format.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "artist_featuring",
        "description": "Fetches the featuring tracks of an artist from the Spotify API using RapidAPI.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier of the artist.",
                "type": "str",
                "default": "2w9zwq3AktTeYYMuhMjju8"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ublacklist_txt",
        "description": "Fetches the ublacklist.txt data for a specified game using the StopModReposts API.",
        "parameters": {
            "game": {
                "description": "The name of the game to fetch the blacklist for. Defaults to 'minecraft'.",
                "type": "str",
                "default": "minecraft"
            }
        },
        "domain": "Data"
    },
    {
        "name": "states",
        "description": "Fetches the list of states for a given country using the Referential DB API.",
        "parameters": {
            "countrycode": {
                "description": "The ISO code of the country for which to get the states.",
                "type": "str",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "v1_thesaurus",
        "description": "Fetches synonyms and antonyms for a given word using the API Ninjas Thesaurus API.",
        "parameters": {
            "word": {
                "description": "The word for which to find synonyms and antonyms.",
                "type": "str",
                "default": "bright"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_free_ipad_apps",
        "description": "Retrieve a list of the top free iPad apps from the App Store.",
        "parameters": {
            "country": {
                "description": "The country code for the App Store. Default is 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "category": {
                "description": "The category ID for the apps. Default is '6016'.",
                "type": "str, optional",
                "default": "6016"
            },
            "lang": {
                "description": "The language code for the results. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "num": {
                "description": "The number of results to return. Default is 100.",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "checkthatphone",
        "description": "Validates a given United States phone number and optionally checks its details like carrier look-up, line type, portability status, geoIP, and timezone using an external API service.",
        "parameters": {
            "phone": {
                "description": "The United States phone number to validate.",
                "type": "str",
                "default": "8182925409"
            },
            "ip": {
                "description": "The IP address to associate with the request. Defaults to '172.95.90.55'.",
                "type": "str, optional",
                "default": "172.95.90.55"
            }
        },
        "domain": "Data"
    },
    {
        "name": "liquidation_data",
        "description": "Fetches the summary liquidation data for the specified cryptocurrency.",
        "parameters": {
            "coin": {
                "description": "Name of the cryptocurrency to get detail data for. Necessary if `type` is set to 'detail'.",
                "type": "str, optional",
                "default": ""
            },
            "type": {
                "description": "Type of data to retrieve. If set to 'detail', only data for the specified `coin` will be returned.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "steps",
        "description": "Fetches a random selection of WikiHow steps.",
        "parameters": {
            "count": {
                "description": "The number of step strings to retrieve (maximum 100).",
                "type": "int",
                "default": "3"
            }
        },
        "domain": "Data"
    },
    {
        "name": "walk_transit_and_bike_score",
        "description": "Retrieve the Walk, Transit, and Bike Score for a property using its Zillow property ID (zpid).",
        "parameters": {
            "zpid": {
                "description": "The Zillow property ID of the property. Defaults to 20485700.",
                "type": "int, optional",
                "default": "20485700"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getbycordsadv",
        "description": "Fetch nearby electric vehicle charging stations based on given latitude and longitude coordinates.",
        "parameters": {
            "radius": {
                "description": "Radius in miles within which to search for charging stations.",
                "type": "int",
                "default": "10"
            },
            "lat": {
                "description": "Latitude coordinate for the search center.",
                "type": "int",
                "default": "40.733154296875"
            },
            "lng": {
                "description": "Longitude coordinate for the search center.",
                "type": "int",
                "default": "-73.99571228027344"
            },
            "access_param": {
                "description": "Type of access for the charging stations (e.g., 'public', 'private'). Defaults to 'public'.",
                "type": "str, optional",
                "default": "public"
            },
            "ev_connector_type_param": {
                "description": "Type of EV connector (e.g., 'J1772'). Defaults to 'J1772'.",
                "type": "str, optional",
                "default": "J1772"
            },
            "ev_network_param": {
                "description": "EV network providers to include in the search (e.g., 'Tesla,Tesla Destination'). Defaults to 'Tesla,Tesla Destination'.",
                "type": "str, optional",
                "default": "Tesla,Tesla Destination"
            },
            "per_page": {
                "description": "Number of results to return per page. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            },
            "page": {
                "description": "Number of results to return per page. Defaults to 10.",
                "type": "int, optional",
                "default": "1"
            },
            "owner_type_param": {
                "description": "Type of owner for the charging stations (e.g., 'all'). Defaults to 'all'.",
                "type": "str, optional",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "directory",
        "description": "Retrieves all the Local Area Codes from a given country.",
        "parameters": {
            "country": {
                "description": "An ISO 2-letter country code or the name of the country in English.",
                "type": "str",
                "default": "BR"
            }
        },
        "domain": "Data"
    },
    {
        "name": "recent",
        "description": "Fetches recent arrests from the specified source using the JailBase API.",
        "parameters": {
            "source_id": {
                "description": "The ID of the specific organization to search. Use 'az-mcso' for testing. The full list of source IDs can be found at http://www.jailbase.com/api/#sources_list.",
                "type": "str",
                "default": ""
            },
            "page": {
                "description": "The page number to return, with only 10 records returned per page. Refer to total_records, current_page, and next_page values in the results for pagination details.",
                "type": "int, optional",
                "default": ""
            },
            "json_callback": {
                "description": "The function name to use for JSONP responses.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "trending_games",
        "description": "python",
        "parameters": {
            "pagesize": {
                "description": "The number of results to return per page. Defaults to '20'.",
                "type": "str",
                "default": "20"
            },
            "page": {
                "description": "The page number to retrieve. Defaults to '1'.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_date_and_time_by_timezone",
        "description": "Gets the current date and time for a specified timezone using the Location and Time API.",
        "parameters": {
            "timezone": {
                "description": "The timezone for which to retrieve the date and time.",
                "type": "str",
                "default": "America/Los_Angeles"
            }
        },
        "domain": "Data"
    },
    {
        "name": "validate_cnpj",
        "description": "Validate a CNPJ number using the Toolbench RapidAPI service, ignoring certain characters such as ., -, and /.",
        "parameters": {
            "n": {
                "description": "The CNPJ number to be validated.",
                "type": "str",
                "default": "11.111.111/1111-80"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_trait_offers",
        "description": "Retrieve trait offers for a specified collection from the OpenSea API.",
        "parameters": {
            "slug": {
                "description": "The slug identifier for the collection on OpenSea.",
                "type": "str",
                "default": "cool-cats-nft"
            },
            "value": {
                "description": "The value of the trait to filter by. Defaults to 'classy_1'.",
                "type": "str, optional",
                "default": "classy_1"
            },
            "type": {
                "description": "The type of trait to filter by. Defaults to 'tier'.",
                "type": "str, optional",
                "default": "tier"
            }
        },
        "domain": "Data"
    },
    {
        "name": "job",
        "description": "Search for job opportunities based on a provided query string.",
        "parameters": {
            "query": {
                "description": "A URL-encoded query string specifying the position title and optionally the location. Refer to https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters for more information on query encoding.",
                "type": "str",
                "default": "q=nurse+practitioner"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_grossing_ipad_apps",
        "description": "Fetch a list of the top-grossing iPad apps from the RapidAPI App Store.",
        "parameters": {
            "country": {
                "description": "The country code (e.g., 'us' for the United States). Default is 'us'.",
                "type": "str",
                "default": "us"
            },
            "lang": {
                "description": "The language code (e.g., 'en' for English). Default is 'en'.",
                "type": "str",
                "default": "en"
            },
            "category": {
                "description": "The category ID for the apps. Default is '6016'.",
                "type": "str",
                "default": "6016"
            },
            "num": {
                "description": "The number of top-grossing apps to retrieve. Default is 100.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_free_mac_apps",
        "description": "Fetches a list of the top free Mac apps from the RapidAPI App Store.",
        "parameters": {
            "lang": {
                "description": "The language for the app descriptions. Default is 'en'.",
                "type": "str",
                "default": "en"
            },
            "category": {
                "description": "The category ID for the apps. Default is '6016'.",
                "type": "str",
                "default": "6016"
            },
            "country": {
                "description": "The country code for the App Store. Default is 'us'.",
                "type": "str",
                "default": "us"
            },
            "num": {
                "description": "The number of results to return. Default is 100. Maximum is 200.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "stars_get_image",
        "description": "Gets image links displaying the star rating.",
        "parameters": {
            "stars": {
                "description": "The star rating, an integer between 1 and 5.",
                "type": "int",
                "default": "2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_vehicule_info2",
        "description": "Fetch vehicle information using the PLAQUE IMMATRICULATION API.",
        "parameters": {
            "immatriculation": {
                "description": "The vehicle registration number to query. Defaults to 'AA-123-BC'.",
                "type": "str, optional",
                "default": "AA-123-BC"
            },
            "token": {
                "description": "The API token for authentication. Defaults to 'TokenDemoRapidapi'.",
                "type": "str, optional",
                "default": "TokenDemoRapidapi"
            },
            "host_name": {
                "description": "The API host name. Defaults to 'https://apiplaqueimmatriculation.com'.",
                "type": "str, optional",
                "default": "https://apiplaqueimmatriculation.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_properties_for_sale",
        "description": "Searches for properties for sale in a specified location using various filtering criteria.",
        "parameters": {
            "location": {
                "description": "The location to search for properties (e.g., Address, School, City, Zip, or Neighborhood).",
                "type": "str",
                "default": "santa monica"
            },
            "beds_min": {
                "description": "Minimum number of bedrooms.",
                "type": "int, optional",
                "default": ""
            },
            "baths_max": {
                "description": "Maximum number of bathrooms.",
                "type": "int, optional",
                "default": ""
            },
            "year_built_max": {
                "description": "Maximum year the property was built.",
                "type": "int, optional",
                "default": ""
            },
            "year_built_min": {
                "description": "Minimum year the property was built.",
                "type": "int, optional",
                "default": ""
            },
            "list_date_min": {
                "description": "Minimum listing date (formatted as 'YYYY-MM-DD').",
                "type": "str, optional",
                "default": ""
            },
            "open_house_max": {
                "description": "Maximum open house date (formatted as 'YYYY-MM-DD').",
                "type": "str, optional",
                "default": ""
            },
            "has_tour": {
                "description": "Whether the property has a virtual tour.",
                "type": "bool, optional",
                "default": ""
            },
            "list_price_min": {
                "description": "Minimum listing price.",
                "type": "int, optional",
                "default": ""
            },
            "hoa_fee_optional_max": {
                "description": "Maximum optional HOA fee.",
                "type": "int, optional",
                "default": ""
            },
            "list_date_max": {
                "description": "Maximum listing date (formatted as 'YYYY-MM-DD').",
                "type": "str, optional",
                "default": ""
            },
            "list_price_max": {
                "description": "Maximum listing price.",
                "type": "int, optional",
                "default": ""
            },
            "baths_min": {
                "description": "Minimum number of bathrooms.",
                "type": "int, optional",
                "default": ""
            },
            "open_house_min": {
                "description": "Minimum open house date (formatted as 'YYYY-MM-DD').",
                "type": "str, optional",
                "default": ""
            },
            "type": {
                "description": "Property type as a comma-separated string (default is 'single_family,condos'). Possible values:",
                "type": "str, optional",
                "default": "single_family,condos"
            },
            "sort": {
                "description": "Sort properties by specified criteria. Possible values:",
                "type": "str, optional",
                "default": ""
            },
            "beds_max": {
                "description": "Maximum number of bedrooms.",
                "type": "int, optional",
                "default": ""
            },
            "page": {
                "description": "Page number for paginated results.",
                "type": "int, optional",
                "default": ""
            },
            "lot_sqft_min": {
                "description": "Minimum lot square footage.",
                "type": "int, optional",
                "default": ""
            },
            "lot_sqft_max": {
                "description": "Maximum lot square footage.",
                "type": "int, optional",
                "default": ""
            },
            "hoa_fee_optional_min": {
                "description": "Minimum optional HOA fee.",
                "type": "int, optional",
                "default": ""
            },
            "sqft_max": {
                "description": "Maximum lot square footage.",
                "type": "int, optional",
                "default": ""
            },
            "sqft_min": {
                "description": "Minimum lot square footage.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "list_of_all_countries",
        "description": "Fetches a list of all countries with available climate data from the specified API.",
        "parameters": {
            "lang": {
                "description": "The language code for the country names. Supported languages are 'en', 'fr', 'de', 'nl', 'es', 'pt', 'pl', 'tr', 'gr', 'cn'. Default is 'en'.",
                "type": "str",
                "default": "en"
            }
        },
        "domain": "Data"
    },
    {
        "name": "business_units_get_web_links",
        "description": "Fetches web links of a business unit using the TrustPilot API.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier of the business unit, obtained from the /business-units/search or /business-units/search-by-domain endpoint.",
                "type": "str",
                "default": "46a7e93b000064000500918b"
            },
            "locale": {
                "description": "The locale code for the response. Defaults to 'en-US'.",
                "type": "str, optional",
                "default": "en-US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_grossing_ios_apps",
        "description": "Fetch a list of the top grossing iOS apps from a specified country and category.",
        "parameters": {
            "country": {
                "description": "The country code for the App Store (default is 'us').",
                "type": "str, optional",
                "default": "us"
            },
            "category": {
                "description": "The category ID for the apps (default is '6016').",
                "type": "str, optional",
                "default": "6016"
            },
            "lang": {
                "description": "The language code for the app descriptions (default is 'en').",
                "type": "str, optional",
                "default": "en"
            },
            "num": {
                "description": "The number of results to return (default is 100).",
                "type": "int, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user",
        "description": "Retrieves a user profile from the Moodring API using the provided user ID.",
        "parameters": {
            "userid": {
                "description": "The unique identifier of the user to be retrieved.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "hin_decoder_return_json",
        "description": "Decodes a Hull Identification Number (HIN) using the Toolbench RapidAPI and returns the decoded data in JSON format.",
        "parameters": {
            "hin": {
                "description": "The Hull Identification Number to be decoded.",
                "type": "str",
                "default": "MVIPK003G607"
            }
        },
        "domain": "Data"
    },
    {
        "name": "loading_speed_data",
        "description": "Retrieves the loading speed data of a specified website using the RapidAPI service.",
        "parameters": {
            "website": {
                "description": "The URL of the website for which the loading speed data is being requested.",
                "type": "str",
                "default": "getecz.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "fetch_information",
        "description": "Fetches information based on IP, ASN, CIDR (IPv4 & IPv6), or organization name using the RapidAPI ASN Lookup service.",
        "parameters": {
            "ip": {
                "description": "IP address to lookup. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "asn": {
                "description": "Autonomous System Number to lookup. Defaults to 'AS32934'.",
                "type": "str, optional",
                "default": "AS32934"
            },
            "cidr": {
                "description": "CIDR notation for IP address range to lookup. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "orgname": {
                "description": "Organization name to lookup. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "about",
        "description": "Fetches metadata from the AresPass API and returns it in the specified format.",
        "parameters": {
            "outputformat": {
                "description": "The format of the returned metadata. Allowed values are 'json', 'xml', and 'yaml'. Default is 'xml'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "singleoffer",
        "description": "Fetches information for a single offer from the Avito API.",
        "parameters": {
            "singleav": {
                "description": "The identifier for the single offer to fetch information about.",
                "type": "str",
                "default": "https://www.avito.ma/fr/autre_secteur/maisons_et_villas/Villa_OCP_4_faces_sur_550_metre_de_terrain_49107436.htm"
            }
        },
        "domain": "Data"
    },
    {
        "name": "articles",
        "description": "Fetches articles from a specified newspaper using the RapidAPI service.",
        "parameters": {
            "newspaper_id": {
                "description": "The ID of the newspaper from which to fetch articles.",
                "type": "str",
                "default": "nytimes"
            }
        },
        "domain": "Data"
    },
    {
        "name": "gs1code128",
        "description": "Generates a GS1-128 barcode based on provided data and company prefix, with optional lot and quantity information.",
        "parameters": {
            "data": {
                "description": "The input data to encode into the barcode.",
                "type": "str",
                "default": "0123456789"
            },
            "company_prefix": {
                "description": "The company prefix required for generating the barcode.",
                "type": "str",
                "default": "0123456"
            },
            "lot": {
                "description": "The lot number to include in the barcode. Defaults to 'AB123'.",
                "type": "str, optional",
                "default": "AB123"
            },
            "qty": {
                "description": "The quantity to include in the barcode. Defaults to '100'.",
                "type": "str, optional",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "google_maps_data_id",
        "description": "Fetches the JSON results of the data ID for a specific place using the Google Maps API via RapidAPI.",
        "parameters": {
            "query": {
                "description": "The query string used to search for the place.",
                "type": "str",
                "default": "Statue Of Liberty"
            },
            "gl": {
                "description": "The geographical location from which to execute the query. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "subtitlelist",
        "description": "Fetches a list of subtitles for a given YouTube video.",
        "parameters": {
            "videoid": {
                "description": "The unique identifier for the YouTube video.",
                "type": "str",
                "default": "JY-_GRi56KQ"
            },
            "locale": {
                "description": "The locale for the subtitles. Defaults to 'EN'.",
                "type": "str, optional",
                "default": "EN"
            }
        },
        "domain": "Data"
    },
    {
        "name": "channel_videos_playlists",
        "description": "Retrieve videos or playlists from a YouTube channel using the channel ID.",
        "parameters": {
            "channelid": {
                "description": "The ID of the YouTube channel to fetch videos or playlists from.",
                "type": "str",
                "default": "UCAuUUnT6oDeKwE6v1NGQxug"
            },
            "part": {
                "description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.",
                "type": "str",
                "default": "id,snippet"
            },
            "x_cachebypass": {
                "description": "Cache bypass parameter. The value must be '1' to bypass the cache.",
                "type": "str, optional",
                "default": ""
            },
            "type": {
                "description": "The type of resource to fetch. Acceptable values are 'video', 'playlist'.",
                "type": "str, optional",
                "default": ""
            },
            "order": {
                "description": "The parameter to sort the results. Default is 'date'. Acceptable values are:",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "echo",
        "description": "Sends a GET request to the Echo API with specific headers and query parameters.",
        "parameters": {
            "header1": {
                "description": "The first header to include in the request. Defaults to '1'.",
                "type": "str, optional",
                "default": "1"
            },
            "query2": {
                "description": "The second query parameter to include in the request. Defaults to '2'.",
                "type": "str, optional",
                "default": "2"
            }
        },
        "domain": "Data"
    },
    {
        "name": "marketdata",
        "description": "Fetches regional electricity price forecast based on a provided German zip code.",
        "parameters": {
            "zip": {
                "description": "The postal code in Germany for which to retrieve the electricity price forecast.",
                "type": "str",
                "default": "69256"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_names",
        "description": "Fetch a random list of Indian names based on specified criteria.",
        "parameters": {
            "first": {
                "description": "If True, include first names in the result. Defaults to None.",
                "type": "bool, optional",
                "default": "true"
            },
            "gender": {
                "description": "Specify the gender for names ('male' or 'female'). Defaults to 'male'.",
                "type": "str, optional",
                "default": "male"
            },
            "last": {
                "description": "If True, include last names in the result. Defaults to None.",
                "type": "bool, optional",
                "default": "true"
            },
            "number": {
                "description": "The number of names to fetch. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_chapter",
        "description": "Fetches and returns a specific chapter from the Bible given the book name and various optional parameters.",
        "parameters": {
            "book_name": {
                "description": "The name of the book from the Bible (e.g., 'Genesis', 'Job').",
                "type": "str",
                "default": "genesis"
            },
            "uppercase_mode": {
                "description": "If True, the text will be returned in uppercase. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "text_mode": {
                "description": "The mode of text to return. Defaults to 'vowels'.",
                "type": "str, optional",
                "default": "vowels"
            },
            "chapter": {
                "description": "The specific chapter number to fetch. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_verses_by_bookname",
        "description": "Fetches a range of verses from a specified book and chapter in the Bible using the RapidAPI service.",
        "parameters": {
            "chapterid": {
                "description": "The ID of the chapter to extract verses from.",
                "type": "int",
                "default": "3"
            },
            "bookname": {
                "description": "The name of the book in the Bible.",
                "type": "str",
                "default": "Revelation"
            },
            "versestart": {
                "description": "The starting verse number.",
                "type": "int",
                "default": "7"
            },
            "verseend": {
                "description": "The ending verse number.",
                "type": "int",
                "default": "11"
            }
        },
        "domain": "Data"
    },
    {
        "name": "case_record",
        "description": "This function retrieves a document list for a given claim ID using the Toolbench RapidAPI service.",
        "parameters": {
            "claimid": {
                "description": "The unique identifier for the claim. Defaults to 'dd61c35e-3edd-ea11-a813-000d3a795762'.",
                "type": "str",
                "default": "dd61c35e-3edd-ea11-a813-000d3a795762"
            }
        },
        "domain": "Data"
    },
    {
        "name": "year_end_billboard_global_200",
        "description": "Fetches the Year-End Billboard Global 200 chart for a specified year.",
        "parameters": {
            "year": {
                "description": "The year for which to retrieve the Year-End Billboard Global 200 chart.",
                "type": "int",
                "default": "2021"
            },
            "range": {
                "description": "The range of results to return (e.g., '1-10'). Defaults to '1-10'. If not specified, returns all results.",
                "type": "str, optional",
                "default": "1-10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "ministerio_espec_fico",
        "description": "Fetches information for a single ministry from the specified API.",
        "parameters": {
            "nombre": {
                "description": "The name of the ministry to fetch data for.",
                "type": "str",
                "default": "Ministerio de Educaci\u00f3n"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_related_sites",
        "description": "Finds sites related to a specified URL using the Advanced SERP Operators API.",
        "parameters": {
            "website": {
                "description": "The URL of the website for which to find related sites.",
                "type": "str",
                "default": "facebook.com"
            },
            "location": {
                "description": "The proxy location for the search. Supported countries are 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "max_results": {
                "description": "The maximum number of related sites to return. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "resources_per_country",
        "description": "Fetches a list of the most important resources that an African country relies on to sustain its economy.",
        "parameters": {
            "country_name": {
                "description": "The name of the African country to fetch resources for.",
                "type": "str",
                "default": "kenya"
            }
        },
        "domain": "Data"
    },
    {
        "name": "locationsuggestions",
        "description": "Fetches location suggestions using the Zillow API based on the provided location query.",
        "parameters": {
            "location": {
                "description": "The location query string. This can be a state, county, neighborhood, city, street name, or zip code.",
                "type": "str",
                "default": "Brownsville, TX"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_tokens",
        "description": "Retrieve a set of NFTs based on the specified collection slug using the Blur API.",
        "parameters": {
            "slug": {
                "description": "The identifier for the specific NFT collection.",
                "type": "str",
                "default": "artgobblers"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_airports",
        "description": "Retrieves data of airports based on various filtering parameters and sorting options from an external API. It returns data from over 28,000 airports in the database.",
        "parameters": {
            "lid": {
                "description": "U.S. FAA Location Identifier (12,566 entries), or an empty string.",
                "type": "str, optional",
                "default": ""
            },
            "sortby": {
                "description": "Sort results by a property value. Possible values are: 'iata', 'icao', 'name', 'city', 'subd', 'country', 'tz', 'lid', and 'elevation'. Default is 'iata'.",
                "type": "str, optional",
                "default": "iata"
            },
            "name": {
                "description": "Filter results by name. The value should be sent as comma-separated. For example, for 'Zabrat Airport', send 'Zabrat,Airport'. Default is 'Ishigaki,Airport'.",
                "type": "str, optional",
                "default": "Ishigaki,Airport"
            },
            "limit": {
                "description": "Limit to n results. Default is 50.",
                "type": "int, optional",
                "default": "50"
            },
            "elevationover": {
                "description": "Filter airports with an MSL elevation, or highest point of the landing area in feet, over this value. Default is 50.",
                "type": "int, optional",
                "default": "50"
            },
            "country": {
                "description": "ISO 3166-1 alpha-2 country code (plus XK for Kosovo). Default is 'JP'.",
                "type": "str, optional",
                "default": "JP"
            },
            "city": {
                "description": "Filter results by city. The value should be sent as comma-separated. For example, for 'Zakynthos Island', send 'Zakynthos,Island'. Default is 'Ishigaki'.",
                "type": "str, optional",
                "default": "Ishigaki"
            },
            "skip": {
                "description": "Skip first n results. Default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "sortbyorder": {
                "description": "Specify the sorting order. Possible values are 'asc' and 'desc'. Default is 'desc'.",
                "type": "str, optional",
                "default": "desc"
            },
            "elevationunder": {
                "description": "Filter airports with an MSL elevation, or highest point of the landing area in feet, under this value. Default is 2000.",
                "type": "int, optional",
                "default": "2000"
            },
            "tz": {
                "description": "Timezone expressed as a tz database name (IANA-compliant) or an empty string for Antarctica. Default is 'Asia/Tokyo'.",
                "type": "str, optional",
                "default": "Asia/Tokyo"
            },
            "icao": {
                "description": "Filter results by ICAO code. Default is 'ROIG'.",
                "type": "str, optional",
                "default": "ROIG"
            },
            "subd": {
                "description": "Filter results by subdivision (e.g., state, province, region, etc.). The value should be sent as comma-separated. For example, for 'Newfoundland and Labrador', send 'Newfoundland,and,Labrador'. Default is 'Okinawa'.",
                "type": "str, optional",
                "default": "Okinawa"
            },
            "iata": {
                "description": "Filter results by IATA code. Default is 'ISG'.",
                "type": "str, optional",
                "default": "ISG"
            }
        },
        "domain": "Data"
    },
    {
        "name": "emailverifier",
        "description": "Verify the deliverability of an email address using the Tomba API.",
        "parameters": {
            "email": {
                "description": "The email address to be verified.",
                "type": "str",
                "default": "b.mohamed@tomba.io"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_a_specific_quote",
        "description": "Fetches a specific quote using the provided quote ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the quote to fetch.",
                "type": "str",
                "default": "4"
            }
        },
        "domain": "Data"
    },
    {
        "name": "crops_list",
        "description": "Fetches a list of crops grown in Spain, allowing filtering through multiple query string parameters.",
        "parameters": {
            "subcategory": {
                "description": "Optional. The subcategory of the crop. Default is 'De invierno'.",
                "type": "str",
                "default": "De invierno"
            },
            "family": {
                "description": "Optional. The family of the crop. Default is 'Poaceae'.",
                "type": "str",
                "default": "Poaceae"
            },
            "commonname": {
                "description": "Optional. The common name of the crop. Default is 'Trigo'.",
                "type": "str",
                "default": "Trigo"
            },
            "speciename": {
                "description": "Optional. The species name of the crop. Default is 'Triticum'.",
                "type": "str",
                "default": "Triticum"
            },
            "consistency": {
                "description": "Optional. The consistency of the crop. Default is 'herb\u00e1cea'.",
                "type": "str",
                "default": "herb\u00e1cea"
            },
            "cropcycle": {
                "description": "Optional. The crop cycle of the crop. Default is 'anual'.",
                "type": "str",
                "default": "anual"
            },
            "fruittype": {
                "description": "Optional. The type of fruit of the crop. Default is 'cariopsis'.",
                "type": "str",
                "default": "cariopsis"
            },
            "category": {
                "description": "Optional. The subcategory of the crop. Default is 'De invierno'.",
                "type": "str",
                "default": "Cereales de grano"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_api",
        "description": "Searches for location information using the World Weather Online API.",
        "parameters": {
            "q": {
                "description": "The query value for the location search.",
                "type": "str",
                "default": "london"
            },
            "format": {
                "description": "The format of the response. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_tweet",
        "description": "Searches for tweets based on a given query string using the Twitter Pack API.",
        "parameters": {
            "q": {
                "description": "The query string to search for in tweets.",
                "type": "str",
                "default": "elon musk"
            },
            "cursor": {
                "description": "The cursor string to paginate through results. Defaults to 'scroll:thGAVUV0VFVBaegLaxgNKXty0WloC2kd7Tl7ctEnEVzId6FYCJehgEVVNFUjUBFQAVAAA='.",
                "type": "str, optional",
                "default": "scroll:thGAVUV0VFVBaegLaxgNKXty0WloC2kd7Tl7ctEnEVzId6FYCJehgEVVNFUjUBFQAVAAA="
            },
            "count": {
                "description": "The number of tweets to retrieve. Defaults to 10.",
                "type": "int, optional",
                "default": "10"
            }
        },
        "domain": "Data"
    },
    {
        "name": "trends",
        "description": "Fetches the latest charts data from YouTube Music for a specified country. The charts include top songs, top videos, top artists, and top trending videos. For the US, it has an additional Genres section with some genre-specific charts.",
        "parameters": {
            "country": {
                "description": "ISO 3166-1 alpha-2 country code to specify the region for which to fetch the trending charts.",
                "type": "str",
                "default": "de"
            }
        },
        "domain": "Data"
    },
    {
        "name": "hin_decoder_return_html",
        "description": "Decodes a Hull Identification Number (HIN) for a boat using the HIN decoder API and returns the result as either JSON or HTML.",
        "parameters": {
            "hin": {
                "description": "The Hull Identification Number to be decoded.",
                "type": "str",
                "default": "MVIPK003G607"
            },
            "usertable": {
                "description": "If set to '1', the function returns an HTML table instead of JSON. Defaults to '1'.",
                "type": "str, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_agent",
        "description": "Search for an agent's information using the Zillow API.",
        "parameters": {
            "page": {
                "description": "The page number of the search results to retrieve. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "locationtext": {
                "description": "The location to search for agents, which can be a city name (e.g., 'Newport Beach') or a zip code (e.g., '90278'). Defaults to 'Newport Beach'.",
                "type": "str",
                "default": "Newport Beach"
            },
            "name": {
                "description": "The name of the agent to search for. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "cities_in_a_state",
        "description": "Fetches the list of cities in a given state.",
        "parameters": {
            "statecode": {
                "description": "The code of the state for which the cities are to be fetched.",
                "type": "str",
                "default": "CA"
            },
            "countrycode": {
                "description": "The code of the country where the state is located.",
                "type": "str",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_generations_by_model_id",
        "description": "Returns a list of generations for a given car model specified by its model ID.",
        "parameters": {
            "modelid": {
                "description": "The ID of the car model for which generations are to be retrieved.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_lexical_field",
        "description": "Retrieves the lexical field for a given word using the Dicolink API.",
        "parameters": {
            "mot": {
                "description": "The word for which the lexical field is to be retrieved.",
                "type": "str",
                "default": "cheval"
            },
            "limite": {
                "description": "The limit on the number of results to be retrieved (default is '20').",
                "type": "str, optional",
                "default": "20"
            }
        },
        "domain": "Data"
    },
    {
        "name": "interests",
        "description": "Fetches interests from the specified API using the given parameters.",
        "parameters": {
            "lang": {
                "description": "The language code for the response (default is 'ta').",
                "type": "str",
                "default": "ta"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_all_motivational_pictures",
        "description": "Fetch all motivational pictures, with optional pagination support.",
        "parameters": {
            "limit": {
                "description": "The maximum number of pictures to retrieve. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "skip": {
                "description": "The number of pictures to skip before starting to retrieve. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "response_by_quizid",
        "description": "Fetch all responses for a given quiz ID from the MoodRing API.",
        "parameters": {
            "quizid": {
                "description": "The unique identifier for the quiz.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "custom_captcha",
        "description": "Creates a custom captcha code using the RapidAPI service.",
        "parameters": {
            "string": {
                "description": "The captcha code consisting of numbers or characters, with a maximum length of 8. Defaults to 'smileme'.",
                "type": "str, optional",
                "default": "smileme"
            }
        },
        "domain": "Data"
    },
    {
        "name": "responses_from_a_question",
        "description": "Fetch all responses for a given question using the Moodring API.",
        "parameters": {
            "questionid": {
                "description": "The ID of the question to retrieve responses for.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "mic_lookup",
        "description": "Performs a lookup of a Manufacturer Identification Code (MIC) to retrieve information about a boat manufacturing company using the Hull ID Boat HIN Decoder API.",
        "parameters": {
            "mic": {
                "description": "The Manufacturer Identification Code (MIC) of the boat manufacturing company.",
                "type": "str",
                "default": "YAM"
            }
        },
        "domain": "Data"
    },
    {
        "name": "hosts_txt",
        "description": "Fetches the hosts file for a specific game using the StopModReposts Blocklist API.",
        "parameters": {
            "game": {
                "description": "The name of the game for which to fetch the hosts file. Defaults to 'minecraft'.",
                "type": "str, optional",
                "default": "minecraft"
            }
        },
        "domain": "Data"
    },
    {
        "name": "find_zip_codes_by_city_and_street",
        "description": "Fetch zip codes for a given city and street using the Polish Zip Codes API.",
        "parameters": {
            "accept": {
                "description": "Requested content type.",
                "type": "str",
                "default": "application/json"
            },
            "city": {
                "description": "Name of the city to search for zip codes.",
                "type": "str",
                "default": "Wroc\u0142aw"
            },
            "street": {
                "description": "Name of the street to search for zip codes.",
                "type": "str",
                "default": "Komuny paryskiej"
            },
            "x_traceid": {
                "description": "A traceId that is copied to the API response header. Default is 'optional_abc123'.",
                "type": "str, optional",
                "default": "optional_abc123"
            }
        },
        "domain": "Data"
    },
    {
        "name": "balance",
        "description": "Retrieves the balance sheet statements of a specified stock company.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol of the company (e.g., 'AAPL' for Apple Inc.).",
                "type": "str",
                "default": "MSFT"
            },
            "period": {
                "description": "The reporting period for the balance sheet, which can be 'annual' or 'quarterly'.",
                "type": "str",
                "default": "quarter"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_product_reviews_all_countries",
        "description": "Fetches product reviews for a specific product from different countries using the ASIN code.",
        "parameters": {
            "asin": {
                "description": "The Amazon Standard Identification Number (ASIN) of the product.",
                "type": "str",
                "default": "B091J3NYVF"
            },
            "languagecode": {
                "description": "The language code for the reviews. Defaults to 'EN'.",
                "type": "str, optional",
                "default": "EN"
            },
            "countrycode": {
                "description": "The country code for the reviews. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "cars_get_images",
        "description": "Fetches images of a car model for a specified model year.",
        "parameters": {
            "modelyearid": {
                "description": "The ID of the car model year for which images are to be fetched.",
                "type": "int",
                "default": "7328"
            }
        },
        "domain": "Data"
    },
    {
        "name": "domainsearch",
        "description": "Searches for email addresses associated with a given domain, optionally filtered by department and paginated by page number.",
        "parameters": {
            "domain": {
                "description": "Domain name from which you want to find the email addresses. For example, 'stripe.com'.",
                "type": "str",
                "default": "stripe.com"
            },
            "department": {
                "description": "Get only email addresses for people working in the selected department. Default is 'pr'.",
                "type": "str, optional",
                "default": "pr"
            },
            "page": {
                "description": "Specifies the number of email addresses to skip by page number. Default is 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "nearest_stations",
        "description": "Return the nearest alternative fuel stations within a specified location or coordinates.",
        "parameters": {
            "format": {
                "description": "The response format (json, xml, etc.).",
                "type": "str",
                "default": "json"
            },
            "location": {
                "description": "A free-form input describing the address of the location. Default is '433 Bryant St., San Francisco'.",
                "type": "str, optional",
                "default": "433 Bryant St., San Francisco"
            },
            "latitude": {
                "description": "The latitude of the desired location.",
                "type": "str, optional",
                "default": ""
            },
            "longitude": {
                "description": "The longitude of the desired location.",
                "type": "str, optional",
                "default": ""
            },
            "radius": {
                "description": "The radius (in miles) around the search location to search for stations within.",
                "type": "str, optional",
                "default": ""
            },
            "status": {
                "description": "Return stations that match the given status. Options are 'all', 'E', 'P'.",
                "type": "str, optional",
                "default": ""
            },
            "access": {
                "description": "The accessibility type of the stations. Options are 'all', 'public', 'private'.",
                "type": "str, optional",
                "default": ""
            },
            "fuel_type": {
                "description": "The type of fuel provided by the stations. Options are 'all', 'BD', 'CNG', 'E85', 'ELEC', 'HY', 'LNG', 'LPG'. Default is 'ELEC'.",
                "type": "str, optional",
                "default": "ELEC"
            },
            "cards_accepted": {
                "description": "Payment methods accepted by the stations.",
                "type": "str, optional",
                "default": ""
            },
            "owner_type": {
                "description": "Type of ownership of the stations. Options include 'all', 'FG', 'LG', 'P', 'SG', 'T'.",
                "type": "str, optional",
                "default": ""
            },
            "federal_agency_id": {
                "description": "Filter stations by the federal agency owner IDs.",
                "type": "str, optional",
                "default": ""
            },
            "ev_network": {
                "description": "Electric charging stations belonging to specified networks.",
                "type": "str, optional",
                "default": ""
            },
            "ev_charging_level": {
                "description": "Levels of electric vehicle supply equipment. Options include 'all', '1', '2', 'dc_fast'.",
                "type": "str, optional",
                "default": ""
            },
            "state": {
                "description": "Return only stations within the given state. Must be provided as a two-character state code.",
                "type": "str, optional",
                "default": ""
            },
            "zip": {
                "description": "Return only stations within the given ZIP code.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of results to return. Default is '1'.",
                "type": "str, optional",
                "default": "1"
            },
            "offset": {
                "description": "Offset the results found to paginate the results.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getfunctions_topic",
        "description": "Fetches Power BI DAX functions based on a specified topic and page number using the toolbench RapidAPI.",
        "parameters": {
            "topic": {
                "description": "The topic for which the DAX functions are to be retrieved.",
                "type": "str",
                "default": "dax"
            },
            "page": {
                "description": "The page number of the results to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_deals",
        "description": "Fetch Amazon deals with optional filters for country, language, and category.",
        "parameters": {
            "countrycode": {
                "description": "The country code to filter deals by. Defaults to 'US'.",
                "type": "str",
                "default": "US"
            },
            "languagecode": {
                "description": "The language code to filter deals by. Defaults to 'EN'.",
                "type": "str",
                "default": "EN"
            },
            "categoryid": {
                "description": "The category ID to filter deals by. If not provided, deals from all categories are returned.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getfutureeventsbytopic",
        "description": "Retrieve future Azure events related to a specified topic, paginated by the given page number.",
        "parameters": {
            "topic": {
                "description": "The topic for which to retrieve future Azure events.",
                "type": "str",
                "default": "compute"
            },
            "page": {
                "description": "The page number for the paginated list of events.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_verses",
        "description": "Fetches a specific verse or a range of verses from the Bible in one of 8 text formats based on the given parameters.",
        "parameters": {
            "text_mode": {
                "description": "The text format to return the verse in.",
                "type": "str",
                "default": "half"
            },
            "book_name": {
                "description": "The name of the book of the Bible.",
                "type": "str",
                "default": "John"
            },
            "uppercase_mode": {
                "description": "Whether to return the verse in uppercase. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "verse_num2": {
                "description": "The ending verse number. Defaults to 5.",
                "type": "int, optional",
                "default": "5"
            },
            "verse_num1": {
                "description": "The starting verse number. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "chapter": {
                "description": "The chapter number of the book. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getfunctionsbytopic",
        "description": "Fetch Power BI DAX functions by topic for a specific page using the provided API key.",
        "parameters": {
            "page": {
                "description": "The page number of the results to retrieve.",
                "type": "int",
                "default": "1"
            },
            "topic": {
                "description": "The topic for which to retrieve DAX functions.",
                "type": "str",
                "default": "dax"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_channel_links",
        "description": "Fetches the links associated with a specified channel from the Kick API using the provided RapidAPI key.",
        "parameters": {
            "channel_name": {
                "description": "The name of the channel to retrieve links for. Defaults to 'gmhikaru'.",
                "type": "str",
                "default": "gmhikaru"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_grossing_mac_apps",
        "description": "Fetches a list of the top-grossing Mac apps from the App Store.",
        "parameters": {
            "category": {
                "description": "The category ID for the apps to be fetched. Defaults to '6016' (general category).",
                "type": "str",
                "default": "6016"
            },
            "country": {
                "description": "The country code for the App Store. Defaults to 'us'.",
                "type": "str",
                "default": "us"
            },
            "lang": {
                "description": "The language code for the results. Defaults to 'en'.",
                "type": "str",
                "default": "en"
            },
            "num": {
                "description": "The number of results to return. Defaults to 100. Maximum allowed value is 200.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "user_details",
        "description": "Fetches the details of a specified Spotify user using the RapidAPI service.",
        "parameters": {
            "user_id": {
                "description": "The ID of the Spotify user whose details are to be fetched.",
                "type": "str",
                "default": "cruilla"
            }
        },
        "domain": "Data"
    },
    {
        "name": "list_video_comments",
        "description": "Retrieves comments from a specified YouTube video, with optional pagination and sorting.",
        "parameters": {
            "videoid": {
                "description": "The YouTube video ID. Default is 'dQw4w9WgXcQ'.",
                "type": "str",
                "default": "dQw4w9WgXcQ"
            },
            "lang": {
                "description": "Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported codes will fall back to `en-US`.",
                "type": "str, optional",
                "default": ""
            },
            "nexttoken": {
                "description": "Token for fetching the next page of data. If provided, `videoid` and `sortby` will be ignored.",
                "type": "str, optional",
                "default": ""
            },
            "sortby": {
                "description": "Parameter to sort the comments. Default is `top`.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_word_by_length",
        "description": "Fetches a random word of the specified length using the Random Word API.",
        "parameters": {
            "length": {
                "description": "The desired length of the random word.",
                "type": "int",
                "default": "7"
            }
        },
        "domain": "Data"
    },
    {
        "name": "words",
        "description": "Generates and returns random words based on specified criteria using the Jibber-Jabber API.",
        "parameters": {
            "minimumwordlength": {
                "description": "Minimum length of the words to generate. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "maximumwordlength": {
                "description": "Maximum length of the words to generate. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "numberofwords": {
                "description": "Number of words to generate. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "wordlength": {
                "description": "Minimum length of the words to generate. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getrandomquote",
        "description": "Fetches a random quote from the specified category using the provided API key.",
        "parameters": {
            "category": {
                "description": "The category of the quote to fetch. Defaults to 'life'.",
                "type": "str, optional",
                "default": "life"
            },
            "count": {
                "description": "The number of quotes to fetch. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_quotes",
        "description": "Search for quotes based on a query string, with options for filtering by tags and quote length.",
        "parameters": {
            "q": {
                "description": "The search term for querying quotes.",
                "type": "str",
                "default": "Don't give up."
            },
            "tags": {
                "description": "Comma-separated tags for filtering the quotes (e.g., 'faith', 'inspirational', 'humor'). Defaults to 'inspirational,motivational'.",
                "type": "str, optional",
                "default": "inspirational,motivational"
            },
            "max_length": {
                "description": "Maximum length of the quotes to return. Defaults to 4000.",
                "type": "int, optional",
                "default": 4000
            },
            "limit": {
                "description": "The number of quote results to return. Defaults to 3.",
                "type": "int, optional",
                "default": 3
            },
            "min_length": {
                "description": "Minimum length of the quotes to return. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "makes",
        "description": "Fetches car makes from the RapidAPI service filtered by various query parameters such as limit, direction, sort, page, make, and year.",
        "parameters": {
            "limit": {
                "description": "The maximum number of results to return. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "direction": {
                "description": "The order direction of results, either 'asc' for ascending or 'desc' for descending. Defaults to 'asc'.",
                "type": "str, optional",
                "default": "asc"
            },
            "sort": {
                "description": "The attribute by which to sort the results, such as 'id'. Defaults to 'id'.",
                "type": "str, optional",
                "default": "id"
            },
            "page": {
                "description": "The page number for paginated results. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "make": {
                "description": "The name of the car make to filter results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "year": {
                "description": "The year of the car make to filter results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getgamesbytopic",
        "description": "Fetches game information by topic and page from the Diablo 4 Smartable API.",
        "parameters": {
            "topic": {
                "description": "The topic to search for within the Diablo 4 games.",
                "type": "str",
                "default": "druid"
            },
            "page": {
                "description": "The page number of the results to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rentalizer",
        "description": "Fetches rental property data for a given address from the AirDNA Rentalizer API.",
        "parameters": {
            "address": {
                "description": "The address of the property for which rental data is required.",
                "type": "str",
                "default": "458 19th St, Santa Monica, CA 90402"
            },
            "bathrooms": {
                "description": "The number of bathrooms in the property. Defaults to 2.",
                "type": "int, optional",
                "default": "2"
            },
            "accommodates": {
                "description": "The number of people the property can accommodate. Defaults to '2'.",
                "type": "str, optional",
                "default": "2"
            },
            "bedrooms": {
                "description": "The number of bedrooms in the property. Defaults to 2.",
                "type": "int, optional",
                "default": "2"
            },
            "currency": {
                "description": "The preferred currency for financial data.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_user_by_gender",
        "description": "Fetches user data based on the specified gender from the fake-users6 API.",
        "parameters": {
            "gender": {
                "description": "The gender of the users to be retrieved.",
                "type": "str",
                "default": "male"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_watches_from_reference_number",
        "description": "Retrieve watch details based on a reference number using the Watchsignals API.",
        "parameters": {
            "ref_number": {
                "description": "The reference number of the watch to retrieve details for.",
                "type": "str",
                "default": "11088"
            }
        },
        "domain": "Data"
    },
    {
        "name": "crimes_at_location",
        "description": "Retrieves the crimes that occurred at the specified location on a given date.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve crime data in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2012-02"
            },
            "lat": {
                "description": "The latitude of the location.",
                "type": "str",
                "default": "52.629729"
            },
            "lng": {
                "description": "The longitude of the location.",
                "type": "str",
                "default": "-1.131592"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_individual_news_source_news",
        "description": "Gets news from an individual news source using the specified newspaper ID and API key.",
        "parameters": {
            "newspaperid": {
                "description": "The ID of the newspaper to retrieve news from.",
                "type": "str",
                "default": "guardian"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getstatsbymonth",
        "description": "Fetch Trinidad & Tobago Covid-19 statistics by month using the provided API.",
        "parameters": {
            "yearid": {
                "description": "The year for which the statistics are needed, formatted as a four-digit string (e.g., \"2022\").",
                "type": "str",
                "default": "2022"
            },
            "monthid": {
                "description": "The month for which the statistics are needed, formatted as a two-digit string (e.g., \"01\" for January).",
                "type": "str",
                "default": "01"
            }
        },
        "domain": "Data"
    },
    {
        "name": "md5_text_hash",
        "description": "Generate an MD5 hash for the provided text using a specified RapidAPI key.",
        "parameters": {
            "datastring": {
                "description": "The text string to be hashed using the MD5 algorithm.",
                "type": "str",
                "default": "enter-your-string-here"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_location_by_name_or_zip_code",
        "description": "Search for a location by name or ZIP code and retrieve the key for the weather forecast.",
        "parameters": {
            "zipcode": {
                "description": "The ZIP code of the city. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "lang": {
                "description": "The language of the response. Options include 'en', 'fr', 'nl', 'es', 'pt', 'it', 'tr', 'gr', 'cz', 'pl', 'ru', and 'cn'. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "city": {
                "description": "The name of the city. Defaults to 'New York'.",
                "type": "str, optional",
                "default": "New York"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_offers_by_watch_id",
        "description": "Retrieves offers for a specific watch identified by `watch_id` from the Watch Signals API.",
        "parameters": {
            "watch_id": {
                "description": "The ID of the watch for which to retrieve offers.",
                "type": "str",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_laws_for_one_state",
        "description": "Retrieves gun law documentation links for a specific U.S. state using the provided RapidAPI key.",
        "parameters": {
            "statename": {
                "description": "The name of the state for which to retrieve gun law documentation.",
                "type": "str",
                "default": "north carolina"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_word_by_length_start_and_contain",
        "description": "Fetches a random word from an API that matches specific criteria: a given length, starting substring, and containing another substring.",
        "parameters": {
            "start": {
                "description": "The starting substring of the word.",
                "type": "str",
                "default": "fru"
            },
            "length": {
                "description": "The length of the word.",
                "type": "int",
                "default": "7"
            },
            "substring": {
                "description": "The substring that the word must contain.",
                "type": "str",
                "default": "le"
            }
        },
        "domain": "Data"
    },
    {
        "name": "agent_s_active_listings",
        "description": "Fetches the active listings for a given agent from Zillow's API.",
        "parameters": {
            "zuid": {
                "description": "The Zillow unique identifier for the agent.",
                "type": "str",
                "default": "X1-ZU10c5uqeoxak21_5upaj"
            },
            "page": {
                "description": "The page number of the results to retrieve. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getmindfulnessquote",
        "description": "Fetches a random mindfulness quote, optionally filtered by author or category.",
        "parameters": {
            "author": {
                "description": "The author of the quote. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "category": {
                "description": "The category of the quote. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "locations_search",
        "description": "Searches for locations based on a given term or phrase using the SeLoger API.",
        "parameters": {
            "searchterm": {
                "description": "The term or phrase to search for locations.",
                "type": "str",
                "default": "paris"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getlearningresources_topic",
        "description": "Fetch Power BI learning resources based on a specific topic and page number.",
        "parameters": {
            "topic": {
                "description": "The topic for which to fetch learning resources.",
                "type": "str",
                "default": "dax"
            },
            "page": {
                "description": "The page number of the results to retrieve.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "cars_detail",
        "description": "Fetches detailed information about a car model for a given year using the Consumer Reports API.",
        "parameters": {
            "modelyearid": {
                "description": "The identifier for the car model year.",
                "type": "int",
                "default": "7328"
            }
        },
        "domain": "Data"
    },
    {
        "name": "object_detection",
        "description": "Detects various objects in an image through the Google Lens API, providing bounding boxes, labels/types, and confidence scores.",
        "parameters": {
            "url": {
                "description": "The URL of the image to perform object detection on.",
                "type": "str",
                "default": "https://thumbs.dreamstime.com/b/giraffe-zebra-1533191.jpg"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_religions",
        "description": "Retrieves a list of religions using the specified method through the Matrimony Profiles API.",
        "parameters": {
            "method": {
                "description": "The method parameter to be used in the API request.",
                "type": "str",
                "default": "get_all_religions"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_app_reviews",
        "description": "Fetches app reviews from the iOS store for a given app.",
        "parameters": {
            "sort": {
                "description": "Controls sorting options in the iOS store. Valid values are 'helpful' or 'recent'.",
                "type": "str",
                "default": "helpful"
            },
            "country": {
                "description": "The country code for the iOS store to fetch reviews from.",
                "type": "str",
                "default": "us"
            },
            "page": {
                "description": "The page number of the reviews to fetch.",
                "type": "str",
                "default": "1"
            },
            "appid": {
                "description": "The ID of the app for which to fetch reviews.",
                "type": "str",
                "default": "com.rovio.baba"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_nearby",
        "description": "Search for businesses near specific geographic coordinates using various query parameters.",
        "parameters": {
            "query": {
                "description": "The search query or keyword (e.g., 'Bars and pubs', 'Plumbers').",
                "type": "str",
                "default": "plumbers"
            },
            "lng": {
                "description": "Longitude of the geographic coordinates to search nearby.",
                "type": "int",
                "default": "-121.925337"
            },
            "lat": {
                "description": "Latitude of the geographic coordinates to search nearby.",
                "type": "int",
                "default": "37.359428"
            },
            "x_user_agent": {
                "description": "Device type for the search. Default is 'desktop'.",
                "type": "str, optional",
                "default": ""
            },
            "language": {
                "description": "Language of the results. Default is 'en'. For a list of supported language codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.",
                "type": "str, optional",
                "default": "en"
            },
            "subtypes": {
                "description": "Specific subtypes of businesses to search for, specified as a comma-separated list (e.g., 'Plumber,Carpenter,Electrician').",
                "type": "str, optional",
                "default": ""
            },
            "fields": {
                "description": "A comma-separated list of business fields to include in the response. By default, all fields are returned (e.g., 'business_id,type,phone_number,full_address').",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "Maximum number of businesses to return (1-500). Default is '20'.",
                "type": "str, optional",
                "default": "20"
            },
            "region": {
                "description": "Region or country code to query Google Maps from. Default is 'us'. For a list of supported region/country codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.",
                "type": "str, optional",
                "default": "us"
            }
        },
        "domain": "Data"
    },
    {
        "name": "domain_information",
        "description": "Fetches domain information such as IP address, expiration date, and more using the WHOIS lookup API.",
        "parameters": {
            "search": {
                "description": "The domain to search (e.g., \"google.com\"). Note that \"http://\" or \"https://\" should not be included.",
                "type": "str",
                "default": "google.com"
            }
        },
        "domain": "Data"
    },
    {
        "name": "shorts_sound_attribution",
        "description": "Fetches the Shorts original sound attribution listing from the YouTube API.",
        "parameters": {
            "x_cachebypass": {
                "description": "Cache bypass value, must be set to '1' if used.",
                "type": "str, optional",
                "default": ""
            },
            "lang": {
                "description": "Language code for localized results, such as 'en', 'gb', 'hi', etc.",
                "type": "str, optional",
                "default": ""
            },
            "geo": {
                "description": "ISO 3166-2 country code of the region, such as 'US' (default), 'UK', 'CA', 'IN', etc.",
                "type": "str, optional",
                "default": ""
            },
            "params": {
                "description": "Attribution parameter available in the Shorts info endpoint; defaults to a specific encoded string.",
                "type": "str, optional",
                "default": "8gU1CjMSMQoLMzFaR01oWjFlejgSCzMxWkdNaFoxZXo4GgtTQWoxZktNZVMyOCIICLiCBxICCCI%3D"
            },
            "token": {
                "description": "Pagination token for retrieving additional results.",
                "type": "str, optional",
                "default": ""
            },
            "is_id": {
                "description": "Shorts video ID to be provided if the params value is not available.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_annonce",
        "description": "Fetches advertisement details from the FluxImmo API based on a unique identifier.",
        "parameters": {
            "unique_id": {
                "description": "The unique identifier of the advertisement to fetch.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "check_text",
        "description": "Submits text for analysis to determine if it was generated by a machine or a human using the AI Detection API.",
        "parameters": {
            "term": {
                "description": "The text to be analyzed. Do not include any special characters.",
                "type": "str",
                "default": "Text you think is generated by AI"
            }
        },
        "domain": "Data"
    },
    {
        "name": "organic_results",
        "description": "Fetches JSON data of organic search results from Google using the RapidAPI service.",
        "parameters": {
            "query": {
                "description": "Search query string.",
                "type": "str",
                "default": "Football"
            },
            "device": {
                "description": "Device type for the search results, e.g. 'desktop', 'mobile'. Defaults to 'desktop'.",
                "type": "str, optional",
                "default": "desktop"
            },
            "hl": {
                "description": "Language for the search results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "html": {
                "description": "HTML content toggle. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "duration": {
                "description": "Duration filter, e.g. 'd', 'w', 'm', 'y'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "lr": {
                "description": "Language restrict parameter. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "safe": {
                "description": "Safe search filter. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "uule": {
                "description": "Encoded location parameter. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "nfpr": {
                "description": "No forced personalized results toggle. Defaults to '0'.",
                "type": "str, optional",
                "default": "0"
            },
            "num": {
                "description": "Number of search results to return. Defaults to '10'.",
                "type": "str, optional",
                "default": "10"
            },
            "tbs": {
                "description": "Search filter tools, e.g. 'qdr:h', 'li:1'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "gl": {
                "description": "Geolocation for the search results. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "page": {
                "description": "Page number of the search results. Defaults to '0'.",
                "type": "str, optional",
                "default": "0"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_product_details_all_countries",
        "description": "Fetches the details of a specific product from Amazon using its ASIN code, for a given language and country code.",
        "parameters": {
            "asin": {
                "description": "The Amazon Standard Identification Number (ASIN) of the product.",
                "type": "str",
                "default": "B091J3NYVF"
            },
            "languagecode": {
                "description": "The language code for the product details. Defaults to 'EN'.",
                "type": "str, optional",
                "default": "EN"
            },
            "countrycode": {
                "description": "The country code for the Amazon site to query. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Data"
    },
    {
        "name": "trending_charts",
        "description": "Fetches the trending videos chart for a specified region on YouTube.",
        "parameters": {
            "part": {
                "description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.",
                "type": "str",
                "default": "id,snippet"
            },
            "regioncode": {
                "description": "ISO 3166-2 country code of the region (e.g., 'US' for United States, 'UK' for United Kingdom, 'CA' for Canada, 'IN' for India).",
                "type": "str",
                "default": "US"
            },
            "chart": {
                "description": "The chart parameter specifies the chart to retrieve (e.g., 'mostPopular').",
                "type": "str",
                "default": "mostPopular"
            },
            "x_cachebypass": {
                "description": "The cache bypass value; must be '1' to bypass cache. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_paid_mac_apps",
        "description": "Retrieves a list of the top paid Mac apps from the App Store.",
        "parameters": {
            "category": {
                "description": "Category of the apps to retrieve. Default is '6016'.",
                "type": "str",
                "default": "6016"
            },
            "country": {
                "description": "Country code to filter the app results. Default is 'us'.",
                "type": "str",
                "default": "us"
            },
            "lang": {
                "description": "Language code for the results. Default is 'en'.",
                "type": "str",
                "default": "en"
            },
            "num": {
                "description": "Number of results to return. Default is 100. Maximum is 200.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieving_events",
        "description": "Retrieve a list of events for assets tracked by OpenSea using the OpenSea Data Query API.",
        "parameters": {
            "collection_slug": {
                "description": "The slug of the collection to filter events by.",
                "type": "str, optional",
                "default": ""
            },
            "auction_type": {
                "description": "The type of auction to filter events by.",
                "type": "str, optional",
                "default": ""
            },
            "asset_contract_address": {
                "description": "The contract address of the asset. Defaults to '0x4372f4d950d30c6f12c7228ade77d6cc019404c9'.",
                "type": "str, optional",
                "default": "0x4372f4d950d30c6f12c7228ade77d6cc019404c9"
            },
            "token_id": {
                "description": "The token ID of the asset. Defaults to 309.",
                "type": "int, optional",
                "default": "309"
            },
            "collection_editor": {
                "description": "The editor of the collection.",
                "type": "str, optional",
                "default": ""
            },
            "occurred_after": {
                "description": "Unix timestamp to filter events that occurred after this time.",
                "type": "int, optional",
                "default": ""
            },
            "cursor": {
                "description": "Cursor for pagination.",
                "type": "str, optional",
                "default": ""
            },
            "account_address": {
                "description": "The account address to filter events by.",
                "type": "str, optional",
                "default": ""
            },
            "occurred_before": {
                "description": "Unix timestamp to filter events that occurred before this time. Defaults to 1644800000.",
                "type": "int, optional",
                "default": "1644800000"
            },
            "only_opensea": {
                "description": "Whether to restrict results to OpenSea only events.",
                "type": "bool, optional",
                "default": "false"
            },
            "event_type": {
                "description": "The type of event to filter by (e.g., 'transfer', 'successful').",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "gera_comprovante_rfb",
        "description": "Generates a certificate from Receita Federal in PDF format.",
        "parameters": {
            "taxid": {
                "description": "The tax identification number to be used for generating the certificate.",
                "type": "str",
                "default": "37335118000180"
            },
            "pages": {
                "description": "A comma-separated string specifying which pages to include in the certificate. Default is 'REGISTRATION,MEMBERS'.",
                "type": "str, optional",
                "default": "REGISTRATION,MEMBERS"
            }
        },
        "domain": "Data"
    },
    {
        "name": "locationsuggestions_v2",
        "description": "Fetches location suggestions from the Zillow API based on the given location query.",
        "parameters": {
            "location": {
                "description": "The location query which can be a state, county, neighborhood, city, street name, or zip code.",
                "type": "str",
                "default": "Brownsville, TX"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_block_hash_v2",
        "description": "Gets the block hash by its height for a given blockchain using the Toolbench API.",
        "parameters": {
            "blockheight": {
                "description": "The height or index of the block for which the hash is to be retrieved.",
                "type": "int",
                "default": 15
            },
            "blockchain": {
                "description": "The name of the blockchain from which to retrieve the block hash.",
                "type": "str",
                "default": "bitcoin"
            }
        },
        "domain": "Data"
    },
    {
        "name": "gender_from_name",
        "description": "Infers the gender of a person given their name using the RapidAPI service.",
        "parameters": {
            "name": {
                "description": "The name of the person whose gender is to be inferred.",
                "type": "str",
                "default": "Kate"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_in_area",
        "description": "Search for businesses in a specified geographic area defined by a central coordinate point and zoom level.",
        "parameters": {
            "lat": {
                "description": "Latitude of the center coordinate point of the search area.",
                "type": "str",
                "default": "37.359428"
            },
            "zoom": {
                "description": "Zoom level on which to conduct the search.",
                "type": "str",
                "default": "13"
            },
            "query": {
                "description": "Search query or keyword (e.g., 'Bars and pubs', 'Plumbers').",
                "type": "str",
                "default": "pizza"
            },
            "lng": {
                "description": "Longitude of the center coordinate point of the search area.",
                "type": "str",
                "default": "-121.925337"
            },
            "x_user_agent": {
                "description": "Device type for the search. Defaults to 'desktop'.",
                "type": "str, optional",
                "default": ""
            },
            "region": {
                "description": "Query region code. Defaults to 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "language": {
                "description": "Language code for the results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "subtypes": {
                "description": "Comma-separated list of specific business subtypes (e.g., 'Plumber,Carpenter,Electrician').",
                "type": "str, optional",
                "default": ""
            },
            "fields": {
                "description": "Comma-separated list of business fields to include in the response.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "Maximum number of businesses to return (1-500). Defaults to '20'.",
                "type": "str, optional",
                "default": "20"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getstatsbyday",
        "description": "Fetches Trinidad & Tobago COVID-19 statistics for a specific day using the given year, month, and day identifiers.",
        "parameters": {
            "yearid": {
                "description": "The year identifier in \"YYYY\" format.",
                "type": "str",
                "default": "2022"
            },
            "monthid": {
                "description": "The month identifier in \"MM\" format (e.g., \"01\" for January).",
                "type": "str",
                "default": "01"
            },
            "dayid": {
                "description": "The day identifier in \"DD\" format (e.g., \"01\" for the 1st day of the month).",
                "type": "str",
                "default": "15"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_all_motivational_quotes",
        "description": "Fetch all motivational quotes with optional pagination support.",
        "parameters": {
            "skip": {
                "description": "The number of items to skip before starting to collect the result set.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of quotes to return.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "estimate_ownership_cost",
        "description": "Estimates the ownership cost for a vehicle over the next 5 years based on the vehicle's VIN, annual mileage, and starting mileage.",
        "parameters": {
            "vin": {
                "description": "The Vehicle Identification Number of the car to estimate ownership cost for.",
                "type": "str",
                "default": "5N3AA08D68N901917"
            },
            "mileage_year": {
                "description": "The estimated number of miles driven per year for the next 5 years. Defaults to 15,000.",
                "type": "int, optional",
                "default": "15000"
            },
            "mileage_start": {
                "description": "The starting mileage of the car. Defaults to 50,000 if unspecified.",
                "type": "int, optional",
                "default": "50000"
            }
        },
        "domain": "Data"
    },
    {
        "name": "verse_range_api",
        "description": "Fetches a specific passage range from the Bible in a given translation using the RapidAPI.",
        "parameters": {
            "translation": {
                "description": "The translation/version of the Bible (e.g., 'NIV', 'KJV').",
                "type": "str",
                "default": "KJV"
            },
            "verse_end": {
                "description": "The ending verse number of the passage.",
                "type": "str",
                "default": "3"
            },
            "chapter": {
                "description": "The chapter number of the passage.",
                "type": "str",
                "default": "1"
            },
            "verse_start": {
                "description": "The starting verse number of the passage.",
                "type": "str",
                "default": "1"
            },
            "book": {
                "description": "The book of the Bible from which the passage is fetched (e.g., 'Genesis', 'John').",
                "type": "str",
                "default": "Joh"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_all",
        "description": "Retrieves a list of anime based on the specified search, sort, type, and genre criteria from the given API.",
        "parameters": {
            "page": {
                "description": "The page number to retrieve.",
                "type": "str",
                "default": "1"
            },
            "size": {
                "description": "The number of items per page.",
                "type": "str",
                "default": "10"
            },
            "types": {
                "description": "Comma-separated list of anime types.",
                "type": "str, optional",
                "default": ""
            },
            "genres": {
                "description": "Comma-separated list of genres. Defaults to 'Fantasy,Drama'.",
                "type": "str, optional",
                "default": "Fantasy,Drama"
            },
            "sortby": {
                "description": "The parameter to sort by, either 'ranking' or 'title'. Defaults to 'ranking'.",
                "type": "str, optional",
                "default": "ranking"
            },
            "sortorder": {
                "description": "The sort order, either 'asc' or 'desc'. Defaults to 'asc'.",
                "type": "str, optional",
                "default": "asc"
            },
            "search": {
                "description": "The title or alternate title to search for. Search will ignore sorting. Defaults to 'Fullmetal'.",
                "type": "str, optional",
                "default": "Fullmetal"
            }
        },
        "domain": "Data"
    },
    {
        "name": "rent_zestimate_and_comparable_properties",
        "description": "Returns a property's rent zestimate and its comparable properties in the same area.",
        "parameters": {
            "address": {
                "description": "The address of the property for which the rent zestimate is being requested.",
                "type": "str",
                "default": "1545 Yale St, Santa Monica, CA 90404"
            },
            "bedrooms": {
                "description": "Filter for number of bedrooms. Multiple values can be separated by commas (e.g., '0,1,2,3,4plus').",
                "type": "str, optional",
                "default": ""
            },
            "pets": {
                "description": "Filter for pets. Possible values are 'any', 'dogs', 'cats'. Multiple values can be separated by commas.",
                "type": "str, optional",
                "default": ""
            },
            "amenities": {
                "description": "Filter for amenities such as 'cooling', 'heating', 'parking'. Multiple values can be separated by commas.",
                "type": "str, optional",
                "default": ""
            },
            "laundry": {
                "description": "Filter for laundry type. Possible values are 'any', 'inUnit', 'shared'. Multiple values can be separated by commas.",
                "type": "str, optional",
                "default": ""
            },
            "propertytypes": {
                "description": "Filter for property types such as 'apartment', 'house', 'townhouse', 'condo'. Multiple values can be separated by commas.",
                "type": "str, optional",
                "default": ""
            },
            "activetypes": {
                "description": "Filter for active rental types. Possible values are 'any', 'active', 'inactive'.",
                "type": "str, optional",
                "default": ""
            },
            "deactivateddays": {
                "description": "Filter for inactive rentals within a specific number of days such as '30', '15', '7'.",
                "type": "str, optional",
                "default": ""
            },
            "activateddays": {
                "description": "Filter for inactive rentals within a specific number of days such as '30', '15', '7'.",
                "type": "str, optional",
                "default": ""
            },
            "distanceinmiles": {
                "description": "Filter for distance in miles. Possible values are 'any', '1', '2', '3', '4', '5'.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "country_region_details",
        "description": "Retrieve the details of a specific country region, including the number of cities.",
        "parameters": {
            "regioncode": {
                "description": "An ISO-3166 or FIPS region code identifying the region.",
                "type": "str",
                "default": "CA"
            },
            "countryid": {
                "description": "An ISO-3166 country code or WikiData ID identifying the country.",
                "type": "str",
                "default": "US"
            },
            "asciimode": {
                "description": "If set to True, display results using ASCII characters. Defaults to None.",
                "type": "bool, optional",
                "default": ""
            },
            "languagecode": {
                "description": "The code of the language in which to display results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "post_comments",
        "description": "Retrieves comments of a specified Instagram post using the given media ID.",
        "parameters": {
            "mediaid": {
                "description": "The ID of the Instagram media for which to retrieve comments.",
                "type": "int",
                "default": "2872132510161250751"
            },
            "min_id": {
                "description": "The minimum ID of comments to retrieve, useful for pagination. Defaults to '{}'.",
                "type": "str, optional",
                "default": "{}"
            },
            "max_id": {
                "description": "The maximum ID of comments to retrieve, useful for pagination. Defaults to '{}'.",
                "type": "str, optional",
                "default": "{}"
            }
        },
        "domain": "Data"
    },
    {
        "name": "custom",
        "description": "Fetches custom data from the seeding-data API based on provided parameters.",
        "parameters": {
            "vatid": {
                "description": "The VAT ID to include in the query.",
                "type": "str",
                "default": "vat"
            },
            "quantity": {
                "description": "The number of rows to fetch.",
                "type": "int",
                "default": 100
            },
            "birthday": {
                "description": "The birthday to include in the query.",
                "type": "str",
                "default": "date"
            },
            "is_from": {
                "description": "The country of origin.",
                "type": "str",
                "default": "country"
            },
            "name": {
                "description": "The first name to include in the query.",
                "type": "str",
                "default": "firstName"
            },
            "surname": {
                "description": "The last name to include in the query.",
                "type": "str",
                "default": "lastName"
            }
        },
        "domain": "Data"
    },
    {
        "name": "texts",
        "description": "Fetches a specified quantity of texts from the API with given locale and character length.",
        "parameters": {
            "quantity": {
                "description": "The number of text entries to retrieve.",
                "type": "int",
                "default": 100
            },
            "locale": {
                "description": "The locale code for the desired language of the texts.",
                "type": "str",
                "default": "it_IT"
            },
            "characters": {
                "description": "The length of each text entry in characters.",
                "type": "int",
                "default": 250
            }
        },
        "domain": "Data"
    },
    {
        "name": "suggested_videos",
        "description": "Fetches suggested videos related to a specified video from the YouTube API.",
        "parameters": {
            "type": {
                "description": "The type of the resource being searched for.",
                "type": "str",
                "default": "video"
            },
            "part": {
                "description": "The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include.",
                "type": "str",
                "default": "id,snippet"
            },
            "relatedtovideoid": {
                "description": "The ID of the video for which the related videos are being fetched.",
                "type": "str",
                "default": "7ghhRHRP6t4"
            },
            "maxresults": {
                "description": "The maximum number of results to retrieve. Defaults to 50.",
                "type": "int, optional",
                "default": "50"
            }
        },
        "domain": "Data"
    },
    {
        "name": "places_near_place",
        "description": "Retrieve places near a specified place, with optional filtering criteria.",
        "parameters": {
            "placeid": {
                "description": "The ID of the place from which to find nearby places.",
                "type": "str",
                "default": ""
            },
            "radius": {
                "description": "The radius within which to search for places.",
                "type": "int",
                "default": ""
            },
            "asciimode": {
                "description": "Whether to display results using ASCII characters.",
                "type": "bool, optional",
                "default": ""
            },
            "languagecode": {
                "description": "The language in which to display results.",
                "type": "str, optional",
                "default": ""
            },
            "includedeleted": {
                "description": "Whether to include places marked as deleted. Options: 'ALL', 'SINCE_YESTERDAY', 'SINCE_LAST_WEEK', 'NONE'.",
                "type": "str, optional",
                "default": ""
            },
            "minpopulation": {
                "description": "Minimum population of the places to be included in the results.",
                "type": "int, optional",
                "default": ""
            },
            "distanceunit": {
                "description": "The unit of distance to use ('MI' for miles, 'KM' for kilometers).",
                "type": "str, optional",
                "default": ""
            },
            "sort": {
                "description": "The sorting criteria for results. Format: \u00b1SORT_FIELD, where SORT_FIELD could be 'countryCode', 'elevation', 'name', 'population'.",
                "type": "str, optional",
                "default": ""
            },
            "hateoasmode": {
                "description": "Whether to include HATEOAS-style links in the results.",
                "type": "bool, optional",
                "default": ""
            },
            "nameprefixdefaultlangresults": {
                "description": "When name-prefix matching, whether to match names in the default language if a non-default language is requested.",
                "type": "bool, optional",
                "default": ""
            },
            "nameprefix": {
                "description": "Only include places whose names start with this prefix.",
                "type": "str, optional",
                "default": ""
            },
            "types": {
                "description": "Filter places by these types (comma-separated values such as 'ADM2', 'CITY', 'ISLAND').",
                "type": "str, optional",
                "default": ""
            },
            "countryids": {
                "description": "Only include places in these countries (comma-separated country codes or WikiData IDs).",
                "type": "str, optional",
                "default": ""
            },
            "timezoneids": {
                "description": "Only include places in these time zones.",
                "type": "str, optional",
                "default": ""
            },
            "excludedcountryids": {
                "description": "Exclude places in these countries (comma-separated country codes or WikiData IDs).",
                "type": "str, optional",
                "default": ""
            },
            "offset": {
                "description": "The offset into the results set for pagination.",
                "type": "int, optional",
                "default": ""
            },
            "maxpopulation": {
                "description": "Maximum population of the places to be included in the results.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "news",
        "description": "Fetch the latest and breaking news based on various optional filters such as language, country, category, and more.",
        "parameters": {
            "language": {
                "description": "A comma-separated string of languages (maximum 5) to restrict the search to. Possible options include 'en', 'ar', 'jp', 'in', 'es', 'fr'.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "A comma-separated string of 2-letter ISO 3166-1 countries (maximum 5) to restrict the search to. Possible options include 'us', 'gb', 'in', 'jp', 'ae', 'sa', 'au', 'ca'.",
                "type": "str, optional",
                "default": ""
            },
            "page": {
                "description": "Page number to page through results if total results are greater than the page size.",
                "type": "int, optional",
                "default": ""
            },
            "category": {
                "description": "A comma-separated string of categories (maximum 5) to restrict the search to. Possible options include 'top', 'business', 'science', 'technology', 'sports', 'health', 'entertainment'.",
                "type": "str, optional",
                "default": ""
            },
            "qintitle": {
                "description": "Keywords or phrases to search for specifically in the news title.",
                "type": "str, optional",
                "default": ""
            },
            "q": {
                "description": "Keywords or phrases to search for in both the news title and content. Note that the 'qintitle' and 'q' parameters cannot be used together in the same query.",
                "type": "str, optional",
                "default": ""
            },
            "domain": {
                "description": "A comma-separated string of domains (maximum 5) to restrict the search to. Use the /domains endpoint to find top source IDs.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "child_comments",
        "description": "python",
        "parameters": {
            "commentid": {
                "description": "The ID of the parent comment.",
                "type": "int",
                "default": "17927163800262715"
            },
            "mediaid": {
                "description": "The ID of the media the comment belongs to.",
                "type": "int",
                "default": "2872132510161250751"
            },
            "max_id": {
                "description": "The max_id parameter for pagination in the API request. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "min_id": {
                "description": "The min_id parameter for pagination in the API request. Default is '{}'.",
                "type": "str, optional",
                "default": "{}"
            }
        },
        "domain": "Data"
    },
    {
        "name": "net_worth_history_sparklines",
        "description": "Fetch the net worth history sparklines for a given cryptocurrency address.",
        "parameters": {
            "address": {
                "description": "The cryptocurrency address for which the net worth history is to be fetched.",
                "type": "str",
                "default": "0x60618d7f1966310d90177640880edaed41e15f2d"
            }
        },
        "domain": "Data"
    },
    {
        "name": "blake2b_text_hash_with_key",
        "description": "Hashes the given text using the BLAKE2b algorithm with a provided key via the Toolbench RapidAPI service.",
        "parameters": {
            "datastring": {
                "description": "The text to be hashed.",
                "type": "str",
                "default": "enter-your-string-here"
            },
            "keystring": {
                "description": "The key to be used for hashing the text.",
                "type": "str",
                "default": "enter-your-key-here"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_asset",
        "description": "Retrieve information about a specific NFT from the Blur API.",
        "parameters": {
            "contractaddress": {
                "description": "The contract address of the NFT.",
                "type": "str",
                "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6"
            },
            "tokenid": {
                "description": "The token ID of the NFT.",
                "type": "str",
                "default": "541"
            }
        },
        "domain": "Data"
    },
    {
        "name": "property_listings",
        "description": "Retrieve rental property listings from Airbnb and Vrbo based on various filter criteria.",
        "parameters": {
            "location": {
                "description": "The location for which to retrieve rental property listings.",
                "type": "str",
                "default": "santa monica"
            },
            "room_types": {
                "description": "Comma-separated list of room types. Possible values are 'entire_home', 'private_room', and 'shared_room'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "number_of_months": {
                "description": "The number of months for the rental period. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "bedrooms_max": {
                "description": "The maximum number of bedrooms in the rental properties. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "accommodates_max": {
                "description": "The maximum number of people the property can accommodate. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "start_month": {
                "description": "The starting month for the rental period. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "bedrooms_min": {
                "description": "The minimum number of bedrooms in the rental properties. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "show_regions": {
                "description": "Whether to show regions in the query results. Defaults to None.",
                "type": "bool, optional",
                "default": ""
            },
            "accommodates_min": {
                "description": "The minimum number of people the property can accommodate. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "currency": {
                "description": "The currency in which the prices should be displayed. Defaults to 'native'.",
                "type": "str, optional",
                "default": "native"
            },
            "start_year": {
                "description": "The starting year for the rental period. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_zipcode_by_city",
        "description": "Retrieve the ZIP code for a given city using the Redfin Base API.",
        "parameters": {
            "city": {
                "description": "The name of the city for which to retrieve the ZIP code.",
                "type": "str",
                "default": "Holtsville"
            }
        },
        "domain": "Data"
    },
    {
        "name": "pl_car_averages",
        "description": "Fetches and returns Polish car averages for a given vehicle's year, make, and model.",
        "parameters": {
            "year": {
                "description": "The year of the car.",
                "type": "str",
                "default": "2012"
            },
            "make": {
                "description": "The make of the car.",
                "type": "str",
                "default": "bmw"
            },
            "model": {
                "description": "The model of the car.",
                "type": "str",
                "default": "5 series"
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_devices",
        "description": "Searches for devices using the given query string on the RapidAPI's mobile phones database and returns the results.",
        "parameters": {
            "query": {
                "description": "The search query string to find matching devices.",
                "type": "str",
                "default": "iphone 14"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_reference_numbers_of_a_specific_brand",
        "description": "Fetches the reference numbers for a specified brand using the WatchSignals API.",
        "parameters": {
            "is_id": {
                "description": "The identifier for the specific brand.",
                "type": "str",
                "default": "382"
            }
        },
        "domain": "Data"
    },
    {
        "name": "au_decode",
        "description": "Decodes an Australian VIN (Vehicle Identification Number) using the RapidAPI VIN Decoder service.",
        "parameters": {
            "vin": {
                "description": "The Vehicle Identification Number to decode.",
                "type": "str",
                "default": "WVWZZZAUZGW001953"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_user_followers",
        "description": "Fetches the followers of a specified Twitter user using the RapidAPI Twitter API.",
        "parameters": {
            "user": {
                "description": "The ID of the Twitter user whose followers are to be fetched.",
                "type": "str",
                "default": "2455740283"
            },
            "count": {
                "description": "The number of followers to retrieve.",
                "type": "str",
                "default": "20"
            },
            "cursor": {
                "description": "The cursor for pagination. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "search_jobs",
        "description": "Search for remote jobs using various filters such as salary, company, job title, and location.",
        "parameters": {
            "salarymin": {
                "description": "Minimum salary to filter jobs by. Defaults to '100'.",
                "type": "str",
                "default": "100"
            },
            "company": {
                "description": "Company name to filter jobs by. Defaults to 'SpaceX'.",
                "type": "str",
                "default": "SpaceX"
            },
            "title": {
                "description": "Job title or role to filter jobs by. Defaults to 'PHP'.",
                "type": "str",
                "default": "PHP"
            },
            "location": {
                "description": "Location to filter jobs by. Defaults to 'remote'.",
                "type": "str",
                "default": "remote"
            },
            "page": {
                "description": "Page number for paginated results. Defaults to '1'.",
                "type": "str",
                "default": "1"
            },
            "perpage": {
                "description": "Number of jobs to show per page. Defaults to '5'.",
                "type": "str",
                "default": "5"
            }
        },
        "domain": "Data"
    },
    {
        "name": "getcountrybyip",
        "description": "Retrieves the country information for a given IP address using the Country by IP API. Both IPv4 and IPv6 are supported.",
        "parameters": {
            "ip": {
                "description": "The IP address for which to retrieve the country information.",
                "type": "str",
                "default": "4.98.25.25"
            }
        },
        "domain": "Data"
    },
    {
        "name": "list_all_countries",
        "description": "Fetches information about a country using its ISO 3166-1 alpha-2 code from the World Bank API via RapidAPI.",
        "parameters": {
            "iso2code": {
                "description": "ISO 3166-1 alpha-2 code of the country for which information is to be fetched.",
                "type": "str",
                "default": "br"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_game_details",
        "description": "Fetches the basic information about a game using the provided game ID and RapidAPI key.",
        "parameters": {
            "gameid": {
                "description": "The unique identifier of the game you want to get details for.",
                "type": "str",
                "default": "9726635"
            }
        },
        "domain": "Data"
    },
    {
        "name": "top_free_ios_apps",
        "description": "Retrieves a list of the top free iOS apps from the App Store using the RapidAPI service.",
        "parameters": {
            "lang": {
                "description": "The language code for the results (default is 'en').",
                "type": "str",
                "default": "en"
            },
            "country": {
                "description": "The country code for the results (default is 'us').",
                "type": "str",
                "default": "us"
            },
            "num": {
                "description": "The number of application results to return (default is 100, with a max of 200).",
                "type": "int",
                "default": "100"
            },
            "category": {
                "description": "The category ID to filter the applications (default is '6016').",
                "type": "str",
                "default": "6016"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_trims_by_generation_id",
        "description": "Returns a list of all trims (engine types) available for a given generation of a car model.",
        "parameters": {
            "generationid": {
                "description": "The ID of the generation for which to retrieve trims.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_address_transactions",
        "description": "Fetches transactions for a given address from the specified network.",
        "parameters": {
            "network": {
                "description": "The blockchain network to query (default is 'BSC_TESTNET').",
                "type": "str, optional",
                "default": "BSC_TESTNET"
            },
            "limit": {
                "description": "The maximum number of transactions to return (default is '10').",
                "type": "str, optional",
                "default": "10"
            },
            "offset": {
                "description": "The number of transactions to skip before starting to return results (default is '0').",
                "type": "str, optional",
                "default": "0"
            },
            "monitoraddressid": {
                "description": "The ID of the address to monitor (default is '8485d9c3-7f52-4ba7-8ec2-41543effa6ae').",
                "type": "str, optional",
                "default": "8485d9c3-7f52-4ba7-8ec2-41543effa6ae"
            }
        },
        "domain": "Data"
    },
    {
        "name": "post_search",
        "description": "Searches Reddit posts using given search query parameters via the Toolbench RapidAPI.",
        "parameters": {
            "query": {
                "description": "The search query string. Supports the following term types:",
                "type": "str",
                "default": "/r/funny,cat"
            },
            "after": {
                "description": "The previous result's sort key value for pagination.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "videos",
        "description": "Retrieves YouTube video details based on the provided parameters.",
        "parameters": {
            "part": {
                "description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.",
                "type": "str",
                "default": "snippet,contentDetails,statistics"
            },
            "is_id": {
                "description": "The ID of the YouTube video for which details are to be fetched.",
                "type": "str",
                "default": "arj7oStGLkU"
            },
            "x_cachebypass": {
                "description": "Set this parameter to '1' to bypass the cache. Default is None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "getverseofachapter",
        "description": "Fetches a specific verse from a chapter in a given book of the Bible.",
        "parameters": {
            "book": {
                "description": "The name of the book in the Bible.",
                "type": "str",
                "default": "Luke"
            },
            "chapter": {
                "description": "The chapter number in the book.",
                "type": "int",
                "default": "1"
            },
            "verse": {
                "description": "The verse number in the chapter.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "issuspicious",
        "description": "Fetches a history of changes in suspicious or stolen NFTs.",
        "parameters": {
            "contractaddress": {
                "description": "The contract address of the NFTs to filter the results. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "afterid": {
                "description": "An ID to filter results that come after this specific ID. Default is None.",
                "type": "int, optional",
                "default": ""
            },
            "pagesize": {
                "description": "The number of records to fetch per page. Default is 50.",
                "type": "int, optional",
                "default": "50"
            },
            "beforeid": {
                "description": "An ID to filter results that come before this specific ID. Default is None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "estimate_transaction_fee_v2",
        "description": "Estimate the transaction fee for a given confirmation target on a specified blockchain.",
        "parameters": {
            "confirmationtarget": {
                "description": "Number of blocks within which the transaction should be confirmed.",
                "type": "int",
                "default": 1
            },
            "blockchain": {
                "description": "Name of the blockchain for which the transaction fee is being estimated.",
                "type": "str",
                "default": "bitcoin"
            },
            "conservative": {
                "description": "If set to True, enables conservative fee estimation mode for Bitcoin-like blockchains. If False, enables economical mode. This parameter has no effect on Ethereum-like blockchains. Default is None.",
                "type": "bool, optional",
                "default": true
            }
        },
        "domain": "Data"
    },
    {
        "name": "consulta_simples_nacional",
        "description": "Queries the Simples Nacional system for information related to a given tax ID.",
        "parameters": {
            "taxid": {
                "description": "The tax ID (CNPJ) to be queried.",
                "type": "str",
                "default": "37335118000180"
            },
            "maxage": {
                "description": "The maximum age of the data (in days) to be retrieved. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            },
            "history": {
                "description": "Whether to include historical data in the query. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            }
        },
        "domain": "Data"
    },
    {
        "name": "get_word_by_start",
        "description": "Fetches a random word that begins with the specified starting string from the Random Word API.",
        "parameters": {
            "start": {
                "description": "The starting string to filter the words.",
                "type": "str",
                "default": "fru"
            }
        },
        "domain": "Data"
    },
    {
        "name": "post_likes",
        "description": "Gets the list of users who liked a specific Instagram post.",
        "parameters": {
            "mediaid": {
                "description": "The unique identifier of the Instagram media (post) to retrieve likers for.",
                "type": "int",
                "default": 2869228867263131000
            }
        },
        "domain": "Data"
    },
    {
        "name": "countries_allcontries",
        "description": "Fetches information about a specific country in Africa from an API.",
        "parameters": {
            "country_name": {
                "description": "The name of the country for which to fetch details.",
                "type": "str",
                "default": "all"
            }
        },
        "domain": "Data"
    },
    {
        "name": "games",
        "description": "Returns a list of games from the Jet Set Radio API with optional parameters for limiting and sorting the results.",
        "parameters": {
            "limit": {
                "description": "Limit the number of items returned in the response. Defaults to '5'.",
                "type": "str, optional",
                "default": "5"
            },
            "orderby": {
                "description": "Order in which to sort the results. Possible values are 'asc' or 'desc'. The default value is 'asc'.",
                "type": "str, optional",
                "default": "asc"
            },
            "sortby": {
                "description": "Field by which to sort the results. Possible values are any field on the document, such as 'name' or 'stats'. Defaults to 'name'.",
                "type": "str, optional",
                "default": "name"
            }
        },
        "domain": "Data"
    },
    {
        "name": "coins_list",
        "description": "Fetches a list of available cryptocurrencies based on provided filters and sorting options.",
        "parameters": {
            "edition_currency_id": {
                "description": "The unique identifier for the edition currency, returned in the `/get-meta-data` endpoint.",
                "type": "int",
                "default": "12"
            },
            "total_volume_min": {
                "description": "Minimum total volume for the cryptocurrency. Refer to `rangeFilters/total_volume/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "chg_24h_min": {
                "description": "Minimum 24-hour change value for the cryptocurrency. Refer to `rangeFilters/chg_24h/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "lang_id": {
                "description": "Language ID, with 1 being the default. Refer to `all_langs/lang_ID` in the `/get-meta-data` endpoint.",
                "type": "int, optional",
                "default": "1"
            },
            "total_volume_max": {
                "description": "Maximum total volume for the cryptocurrency. Refer to `rangeFilters/total_volume/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "chg_7d_max": {
                "description": "Maximum 7-day change value for the cryptocurrency. Refer to `rangeFilters/chg_7d/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "time_utc_offset": {
                "description": "Time offset in seconds from UTC. Default is 28800 (UTC+8).",
                "type": "int, optional",
                "default": "28800"
            },
            "chg_7d_min": {
                "description": "Minimum 7-day change value for the cryptocurrency. Refer to `rangeFilters/chg_7d/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "market_cap_max": {
                "description": "Maximum market capitalization for the cryptocurrency. Refer to `rangeFilters/market_cap/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "market_cap_min": {
                "description": "Minimum market capitalization for the cryptocurrency. Refer to `rangeFilters/market_cap/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "chg_24h_max": {
                "description": "Maximum 24-hour change value for the cryptocurrency. Refer to `rangeFilters/chg_24h/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "volume_24h_max": {
                "description": "Maximum 24-hour trading volume for the cryptocurrency. Refer to `rangeFilters/volume_24h/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "volume_24h_min": {
                "description": "Minimum 24-hour trading volume for the cryptocurrency. Refer to `rangeFilters/volume_24h/steps` for available values.",
                "type": "int, optional",
                "default": ""
            },
            "sort": {
                "description": "Sorting criteria. Allowed values are `NAME_UP` (Name), `PERC1D_DN` (Chg 24h), `PERC7D_DN` (Chg 7D), `MARKETCAP_DN` (Market Cap), `VOLUME24_DN` (Vol 24h), `TOTAL_VOLUME_DN` (Total vol). Default is `PERC1D_DN`.",
                "type": "str, optional",
                "default": "PERC1D_DN"
            },
            "page": {
                "description": "Page number for pagination. Default is 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Data"
    },
    {
        "name": "reviews",
        "description": "Fetches product reviews from the Otto data service using the provided parameters.",
        "parameters": {
            "page": {
                "description": "The page number to retrieve.",
                "type": "str",
                "default": "1"
            },
            "productid": {
                "description": "The ID of the product to look up reviews for.",
                "type": "str",
                "default": "417479273"
            },
            "sortby": {
                "description": "The criteria to sort the reviews by. Defaults to 'newest'.",
                "type": "str, optional",
                "default": "newest"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieve_listings",
        "description": "Fetches a list of listings from the Blur API based on provided parameters.",
        "parameters": {
            "pagesize": {
                "description": "Number of listings to retrieve per page.",
                "type": "int",
                "default": "20"
            },
            "pagenumber": {
                "description": "Page number to retrieve. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "orderby": {
                "description": "Order by which the listings should be sorted, either 'ASC' for ascending or 'DESC' for descending. Defaults to 'ASC'.",
                "type": "str, optional",
                "default": "ASC"
            },
            "contractaddress": {
                "description": "Specific contract address to filter listings by. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "autocomplete_addresses",
        "description": "Fetches autocompleted addresses from the USA using the RapidAPI service.",
        "parameters": {
            "address": {
                "description": "The partial address input to autocomplete.",
                "type": "str",
                "default": "48 sunrise dr"
            }
        },
        "domain": "Data"
    },
    {
        "name": "lookup",
        "description": "Lookup people by name and optional US state using the RapidAPI service.",
        "parameters": {
            "name": {
                "description": "The name of the person to lookup.",
                "type": "str",
                "default": "Warren Buffett"
            },
            "state": {
                "description": "The US state to narrow down the search. Defaults to 'NE'.",
                "type": "str, optional",
                "default": "NE"
            }
        },
        "domain": "Data"
    },
    {
        "name": "time_zone",
        "description": "Fetch the current time for a specified time zone in ISO-6801 format (HHmmss.SSSZ).",
        "parameters": {
            "zoneid": {
                "description": "The ID of the time zone for which the current time is to be fetched.",
                "type": "str",
                "default": "America__Los_Angeles"
            }
        },
        "domain": "Data"
    },
    {
        "name": "retrieving_assets",
        "description": "Retrieve a list of assets from the OpenSea API with various filter parameters.",
        "parameters": {
            "owner": {
                "description": "The wallet address of the owner of the assets. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "order_direction": {
                "description": "The order of the results. Can be 'asc' or 'desc'. Default is 'desc'.",
                "type": "str, optional",
                "default": "desc"
            },
            "asset_contract_address": {
                "description": "The contract address for the assets. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of assets to return. Default is 20.",
                "type": "int, optional",
                "default": "20"
            },
            "collection_slug": {
                "description": "The collection slug to filter assets. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "cursor": {
                "description": "A cursor to paginate results. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "token_ids": {
                "description": "Specific token IDs to filter assets. Default is None.",
                "type": "int, optional",
                "default": ""
            },
            "asset_contract_addresses": {
                "description": "Specific contract addresses to filter assets. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "collection": {
                "description": "The collection name to filter assets. Default is 'ongakucraft'.",
                "type": "str, optional",
                "default": "ongakucraft"
            },
            "include_orders": {
                "description": "Whether to include order information for the assets. Default is None.",
                "type": "bool, optional",
                "default": ""
            },
            "collection_editor": {
                "description": "The editor of the collection to filter assets. Default is None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Data"
    },
    {
        "name": "number_captcha",
        "description": "Creates a numeric CAPTCHA code using the specified length and RapidAPI key.",
        "parameters": {
            "length": {
                "description": "Length of the numeric CAPTCHA, ranging from 1 to 8. Default is 4.",
                "type": "int, optional",
                "default": "4"
            }
        },
        "domain": "Data"
    },
    {
        "name": "addresses_addressid",
        "description": "Fetch detailed information about a specific address using the given address ID.",
        "parameters": {
            "addressid": {
                "description": "The ID of the address to fetch details for.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Data"
    }
]