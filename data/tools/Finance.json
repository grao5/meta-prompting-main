[
    {
        "name": "t3ma",
        "description": "Fetches the Triple Exponential Moving Average (T3MA) for a given financial instrument.",
        "parameters": {
            "symbol": {
                "description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supported intervals include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.",
                "type": "str",
                "default": "1min"
            },
            "format": {
                "description": "Format of the response data, either 'CSV' or 'JSON'. Default is 'json'.",
                "type": "str, optional",
                "default": "json"
            },
            "v_factor": {
                "description": "Volume factor used in the calculation of the T3MA.",
                "type": "int, optional",
                "default": 0.7
            },
            "series_type": {
                "description": "Type of series to use in the calculation. Supported values are 'open', 'high', 'low', and 'close'. Default is 'close'.",
                "type": "str, optional",
                "default": "close"
            },
            "outputsize": {
                "description": "Number of data points to return. Default is 30.",
                "type": "int, optional",
                "default": 30
            },
            "time_period": {
                "description": "Number of periods over which to calculate the T3MA. Default is 9.",
                "type": "int, optional",
                "default": 9
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_profile",
        "description": "Retrieves the company profile information for a given performance ID using the RapidAPI Morning Star service.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock, obtained from endpoints such as /auto-complete, /get-summary, or /get-movers.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_meta_data",
        "description": "Fetches meta data from the cryptocurrency markets API using provided locale information and optional parameters.",
        "parameters": {
            "locale_info": {
                "description": "The language code.",
                "type": "str",
                "default": "en_US"
            },
            "lang_id": {
                "description": "The language ID, default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "time_utc_offset": {
                "description": "The UTC offset in seconds, default is 28800 (UTC+8).",
                "type": "int, optional",
                "default": "28800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_insider_holders_stock",
        "description": "Fetches insider holders' information for a given stock symbol using the mboum-finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch insider holders' information.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_trends",
        "description": "Fetch the latest market trends and relevant news based on the specified trend type.",
        "parameters": {
            "trend_type": {
                "description": "The type of trend to retrieve. Supported trend types include:",
                "type": "str",
                "default": ""
            },
            "country": {
                "description": "The country for which to fetch trends, specified as a 2-letter country code (ISO 3166). Default is 'us'.",
                "type": "str, optional",
                "default": "us"
            },
            "language": {
                "description": "The language to use for the results, specified as a 2-letter language code (ISO 639-1). Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_trading_information",
        "description": "Fetch trading information for a specific stock using its performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock, which can be obtained from the auto-complete, get-summary, or get-movers endpoints.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coin",
        "description": "Fetches the value of a specified cryptocurrency.",
        "parameters": {
            "coin": {
                "description": "The cryptocurrency symbol (e.g., 'btc', 'eth') for which the value will be fetched. Default is 'btc'.",
                "type": "str",
                "default": "btc"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_3_month_historical_daily_prices",
        "description": "Fetches 3 months of historical daily stock prices for the given ticker.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol to fetch historical prices for.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getlistbysecuritiescode",
        "description": "Fetches the securities report data for a specified company using its securities code.",
        "parameters": {
            "securities_code": {
                "description": "The securities code of the company whose report data is to be fetched.",
                "type": "int",
                "default": "7203"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "indexes_intraday",
        "description": "Fetches intraday time series data (Date, Open, High, Low, Close, Volume) for a specified index symbol within a given time interval.",
        "parameters": {
            "interval": {
                "description": "Time interval in minutes, e.g., `1` for 1-minute intervals, `5` for 5-minute intervals.",
                "type": "int",
                "default": "1"
            },
            "is_from": {
                "description": "The start date and time for the query. Supported formats include **YYYY-mm-dd HH:MM** and **YYYY-mm-dd**, e.g., '2020-04-21 10:00' or '2020-04-21'.",
                "type": "str",
                "default": "2020-04-21 10:00"
            },
            "to": {
                "description": "The end date and time for the query. Supported formats include **YYYY-mm-dd HH:MM** and **YYYY-mm-dd**, e.g., '2020-04-21 10:30' or '2020-04-22'.",
                "type": "str",
                "default": "2020-04-21 10:30"
            },
            "symbol": {
                "description": "The symbol of the index to query. Examples include `^GSPC` (S&P 500 index) or `SPX:INDEX` (S&P 500 index). Valid suffixes are:",
                "type": "str",
                "default": "^GSPC"
            },
            "adjust": {
                "description": "Whether the price should be adjusted. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_earnings",
        "description": "Retrieve earnings information for a particular stock symbol using the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve earnings information.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "company_balance_sheet",
        "description": "Retrieves the balance sheet of a public company for a specified period.",
        "parameters": {
            "period": {
                "description": "Period for which to get the company's balance sheet. Can be 'QUARTERLY' or 'ANNUAL'.",
                "type": "str",
                "default": ""
            },
            "symbol": {
                "description": "Stock symbol (ticker) of the company, e.g., 'MSFT' or 'AAPL'.",
                "type": "str",
                "default": "AAPL:NASDAQ"
            },
            "language": {
                "description": "The language to use for the results, specified as a 2-letter language code according to ISO 639-1. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v1_convertcurrency",
        "description": "Converts an amount of currency from one type to another using the API Ninjas Convert Currency API endpoint.",
        "parameters": {
            "amount": {
                "description": "The amount of currency to convert.",
                "type": "int",
                "default": "5000"
            },
            "have": {
                "description": "The currency you currently hold. Must be a 3-character currency code (e.g., 'USD').",
                "type": "str",
                "default": "USD"
            },
            "want": {
                "description": "The currency to which you want to convert. Must be a 3-character currency code (e.g., 'EUR').",
                "type": "str",
                "default": "EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "quotes_get_mashup",
        "description": "Fetch additional information for a specific market quote.",
        "parameters": {
            "symbol": {
                "description": "The market quote symbol for which the information is to be fetched. Only one symbol is allowed.",
                "type": "str",
                "default": "IBIO"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbols_press_releases",
        "description": "Fetches a list of press releases for a given stock symbol from Seeking Alpha's API.",
        "parameters": {
            "ticker_slug": {
                "description": "The slug representing the stock ticker symbol.",
                "type": "str",
                "default": "NVDA"
            },
            "page_number": {
                "description": "The page number of the press releases to fetch.",
                "type": "int",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_key_statistics_stock",
        "description": "Fetches key statistics data for a given stock symbol from the MBOUM Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve key statistics data.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "converter",
        "description": "Performs currency conversion between multiple currencies using the given parameters.",
        "parameters": {
            "target": {
                "description": "The currency code to convert to. This should be a valid three-letter currency code. Multiple target currencies can be specified, separated by a comma.",
                "type": "str",
                "default": "EUR,INR,JPY"
            },
            "source": {
                "description": "The currency code to convert from. This should be a valid three-letter currency code, e.g., USD or EUR.",
                "type": "str",
                "default": "USD"
            },
            "amount": {
                "description": "The amount to convert from the source currency to the target currency. Defaults to 1 if not provided.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_capitalization",
        "description": "Fetches the market capitalization of a cryptocurrency in US Dollars.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the cryptocurrency.",
                "type": "str",
                "default": "BTC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "profile",
        "description": "Fetches company profile data such as sector, industry, location, and executives using the given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch company profile data.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_litecoin_block_by_hash_or_height",
        "description": "Fetches detailed information about a Litecoin block by its hash or height.",
        "parameters": {
            "hash": {
                "description": "The hash or height of the Litecoin block you want to retrieve details for.",
                "type": "str",
                "default": "1234314"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "balance_sheet_statement",
        "description": "Fetches the balance sheet statement of a specified company by its ticker symbol.",
        "parameters": {
            "ticker": {
                "description": "The ticker symbol of the company whose balance sheet statement is to be retrieved.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_time_series",
        "description": "Fetches stock time series data and key news events for a specified period and symbol.",
        "parameters": {
            "period": {
                "description": "The period for which to return time series and key events. Supported values are:",
                "type": "str",
                "default": ""
            },
            "symbol": {
                "description": "The stock symbol (ticker) to query. Examples include:",
                "type": "str",
                "default": "AAPL:NASDAQ"
            },
            "language": {
                "description": "The language code for the results (default is 'en'). Refer to ISO 639-1 for available 2-letter language codes.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "short_ticker",
        "description": "Fetches the latest and daily average prices for the specified cryptocurrency in the given market and against the provided fiat currencies.",
        "parameters": {
            "market": {
                "description": "The market type, possible values include 'global' and 'local'.",
                "type": "str",
                "default": "global"
            },
            "crypto": {
                "description": "The cryptocurrency to get ticker information for, default is 'ETH'.",
                "type": "str, optional",
                "default": "ETH"
            },
            "fiats": {
                "description": "A comma-separated string of fiat currencies to return values for, default is 'USD,EUR'.",
                "type": "str, optional",
                "default": "USD,EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_company_overview",
        "description": "Retrieve the overview details of a public company or stock, supporting multiple stock types such as stock, index, mutual fund, and futures.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol (ticker) for which to obtain the overview. Examples include 'MSFT:NASDAQ', 'MSFT', '^DJI', 'VTSAX'.",
                "type": "str",
                "default": "AAPL:NASDAQ"
            },
            "language": {
                "description": "The 2-letter language code indicating the language for the results, as per ISO 639-1. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_latest_current_block",
        "description": "Retrieve the latest (current) block being mined on a specified blockchain.",
        "parameters": {
            "chain": {
                "description": "The blockchain to get the latest block from. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "gethistoricalscoresbyyear",
        "description": "Fetches historical Environmental, Social, Governance and Overall scores for companies based on the given year.",
        "parameters": {
            "year": {
                "description": "The year for which to fetch the historical scores (must be less than or equal to 2020).",
                "type": "str",
                "default": "2020"
            },
            "content_type": {
                "description": "The type of content to return. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "sedol": {
                "description": "The SEDOL identifier of the company. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "isin": {
                "description": "The ISIN identifier of the company. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "companyname": {
                "description": "The name of the company. Default is 'Apple Inc.'.",
                "type": "str, optional",
                "default": "Apple Inc."
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_search",
        "description": "Search for available cryptocurrencies that match a given string.",
        "parameters": {
            "string": {
                "description": "A word or name to search for relevant cryptocurrencies.",
                "type": "str",
                "default": "bit"
            },
            "time_utc_offset": {
                "description": "UTC offset value in seconds (default is 28800, representing UTC+8).",
                "type": "int, optional",
                "default": "28800"
            },
            "lang_id": {
                "description": "Language ID value, with a default of 1, corresponding to the all_langs/lang_ID returned from the get-meta-data endpoint.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "company_income_statement",
        "description": "Fetch the income statement of a public company for a given period and in a specified language.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol (ticker) of the company for which to fetch the income statement. Examples: 'MSFT:NASDAQ', 'MSFT', 'AAPL'.",
                "type": "str",
                "default": "AAPL:NASDAQ"
            },
            "period": {
                "description": "The period for which to retrieve the income statement. Options are 'QUARTERLY' or 'ANNUAL'.",
                "type": "str",
                "default": ""
            },
            "language": {
                "description": "The language to use for the results, specified as a two-letter language code as per ISO 639-1. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getlatestbysecuritiescode",
        "description": "Fetches the latest securities report data for a given company based on its securities code.",
        "parameters": {
            "securities_code": {
                "description": "The securities code representing the company.",
                "type": "int",
                "default": "7203"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_cashflow_statement",
        "description": "Fetches the cash flow statement for a given stock symbol from Yahoo Finance using RapidAPI.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch the cash flow statement.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_index_trend",
        "description": "Fetch the index trend earnings history information for a specific stock symbol from the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to fetch the index trend data for.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_funding_rate_history",
        "description": "Retrieve the funding rate history for a specific derivative product category over a given time interval.",
        "parameters": {
            "interval": {
                "description": "Kline interval. Possible values are: 1, 3, 5, 15, 30, 60, 120, 240, 360, 720, \"D\" (day), \"M\" (month), \"W\" (week).",
                "type": "str",
                "default": "D"
            },
            "start": {
                "description": "Start timestamp point for the result, in milliseconds.",
                "type": "int",
                "default": "1652112000000"
            },
            "category": {
                "description": "Derivatives products category. Possible values are \"linear\" and \"inverse\".",
                "type": "str",
                "default": "linear"
            },
            "end": {
                "description": "End timestamp point for the result, in milliseconds.",
                "type": "int",
                "default": "1652544000000"
            },
            "symbol": {
                "description": "Symbol of the derivative product.",
                "type": "str",
                "default": "BTCUSDT"
            },
            "limit": {
                "description": "Limit for data size per page, max size is 200. Defaults to showing 200 pieces of data per page.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "conversion",
        "description": "Performs cryptocurrency conversion from a given cryptocurrency symbol to another and retrieves conversion data.",
        "parameters": {
            "tsym": {
                "description": "The target cryptocurrency symbol to convert to.",
                "type": "str",
                "default": "USDT"
            },
            "fsyms": {
                "description": "The source cryptocurrency symbol to convert from.",
                "type": "str",
                "default": "ETH"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_aggressive_small_caps",
        "description": "Fetch data for aggressive small cap stocks with earnings growth rates greater than 25% using the mboum-finance API.",
        "parameters": {
            "start": {
                "description": "The starting index for fetching the data. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_parent_get_highest_rated_investments",
        "description": "Retrieve the highest rated investments as displayed in the Parent tab.",
        "parameters": {
            "type": {
                "description": "The type of investment, one of the following values: 'etf' or 'fund'.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The security ID for which to retrieve the highest rated investments.",
                "type": "str",
                "default": "F00000O2CG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_five_yr_avg_div_yield",
        "description": "Fetches the five-year average dividend yield for a given stock symbol and region.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol (e.g., 'AAPL' for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region of the stock market. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ultosc",
        "description": "Fetches the Ultimate Oscillator (ULTOSC) data for a given financial instrument using the Twelve Data API. The Ultimate Oscillator takes into account three different time periods to enhance the quality of overbought and oversold signals.",
        "parameters": {
            "symbol": {
                "description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supported values are '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.",
                "type": "str",
                "default": "1min"
            },
            "time_period_1": {
                "description": "First time period for the oscillator calculation. Defaults to 7.",
                "type": "int, optional",
                "default": 7
            },
            "time_period_2": {
                "description": "Second time period for the oscillator calculation. Defaults to 14.",
                "type": "int, optional",
                "default": 14
            },
            "format": {
                "description": "Output format, either 'CSV' or 'JSON'. Defaults to 'json'.",
                "type": "str, optional",
                "default": "json"
            },
            "time_period_3": {
                "description": "Third time period for the oscillator calculation. Defaults to 28.",
                "type": "int, optional",
                "default": 28
            },
            "outputsize": {
                "description": "Number of data points to return. Defaults to 30.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_annual_avg_div_rate",
        "description": "Fetches the annual average dividend rate for a given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The market region for the stock. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "options",
        "description": "Fetches stock and options trading data for the given ticker symbol using the RapidAPI service.",
        "parameters": {
            "ticker": {
                "description": "The ticker symbol for the U.S. trading stock or ETF.",
                "type": "str",
                "default": "aapl"
            },
            "x_rapidapi_proxy_secret": {
                "description": "The RapidAPI proxy secret for authentication. Defaults to 'a755b180-f5a9-11e9-9f69-7bf51e845926'.",
                "type": "str, optional",
                "default": "a755b180-f5a9-11e9-9f69-7bf51e845926"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "earnings_trend",
        "description": "Retrieves the earnings trend for a given stock ticker using the Toolbench RapidAPI.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which the earnings trend is to be retrieved.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "options_prices",
        "description": "Fetch current options data given the input parameters.",
        "parameters": {
            "type": {
                "description": "The type of option contract ('Call' or 'Put').",
                "type": "str",
                "default": "Call"
            },
            "symbol": {
                "description": "The symbol of the asset to look for, e.g., 'AAPL' (Apple Inc), 'MSFT' (Microsoft).",
                "type": "str",
                "default": "AAPL"
            },
            "min_strike": {
                "description": "A lower bound for the strike price. Default is 50. If provided, the strike range [min_strike, max_strike] takes priority over the strike parameter.",
                "type": "int, optional",
                "default": "50"
            },
            "min_expiry": {
                "description": "A lower bound for the expiration date in the format 'YYYY-MM-DD'. Default is '2021-05-21'. If provided, the expiry range [min_expiry, max_expiry] takes priority over the expiration parameter.",
                "type": "str, optional",
                "default": "2021-05-21"
            },
            "max_expiry": {
                "description": "An upper bound for the expiration date in the format 'YYYY-MM-DD'. Default is '2023-12-14'. If provided, the expiry range [min_expiry, max_expiry] takes priority over the expiration parameter.",
                "type": "str, optional",
                "default": "2023-12-14"
            },
            "max_strike": {
                "description": "An upper bound for the strike price. Default is 90. If provided, the strike range [min_strike, max_strike] takes priority over the strike parameter.",
                "type": "int, optional",
                "default": "90"
            },
            "strike": {
                "description": "A lower bound for the strike price. Default is 50. If provided, the strike range [min_strike, max_strike] takes priority over the strike parameter.",
                "type": "int, optional",
                "default": "122.00"
            },
            "expiration": {
                "description": "The expiration date of the option in the format 'YYYY-MM-DD'. Default is '2023-12-14'.",
                "type": "str, optional",
                "default": "2023-12-14"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_list_by_ticker",
        "description": "Retrieves a list of news articles for a specified ticker ID from the Webull API.",
        "parameters": {
            "tickerid": {
                "description": "The unique identifier for the ticker.",
                "type": "int",
                "default": "913256135"
            },
            "pagesize": {
                "description": "The number of news articles to retrieve per page. Default is 20, maximum is 20.",
                "type": "int, optional",
                "default": "20"
            },
            "currentnewsid": {
                "description": "The ID of the last news article returned in the previous request. Pass 0 for the first query. Default is 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "industries_list_best_performing",
        "description": "Retrieves a list of the best performing industries for a given region.",
        "parameters": {
            "regionid": {
                "description": "The ID of the region for which to list best performing industries.",
                "type": "int",
                "default": "6"
            },
            "industrytype": {
                "description": "The time period for evaluating industry performance. One of 'today', '5d', '1m', or '3m'. Default is 'today'.",
                "type": "str, optional",
                "default": "today"
            },
            "pagesize": {
                "description": "The number of results per page. Maximum is 20. Default is 20.",
                "type": "int, optional",
                "default": "20"
            },
            "pageindex": {
                "description": "The index of the page to retrieve. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "direction": {
                "description": "The order direction of the results. Use -1 for descending and 1 for ascending. Default is -1.",
                "type": "int, optional",
                "default": "-1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_equity_latest_data",
        "description": "Fetches the latest equity data for a given equity slug.",
        "parameters": {
            "slug": {
                "description": "The unique identifier for the equity, retrieved from screener results.",
                "type": "str",
                "default": "saudi-aramco"
            },
            "lang": {
                "description": "Language code for the data. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_realtime_rates",
        "description": "Gets the real-time price of a specified cryptocurrency coin using RapidAPI.",
        "parameters": {
            "symbol": {
                "description": "The symbol of the cryptocurrency coin (e.g., 'BTC' for Bitcoin).",
                "type": "str",
                "default": "BTC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "price_by_symbol",
        "description": "Fetches the live price of a stock by its symbol.",
        "parameters": {
            "input": {
                "description": "The stock symbol to query.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "key_statistics",
        "description": "Fetches key statistics for a given stock ticker using the Toolbench RapidAPI service.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol to retrieve key statistics for.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "exchange_range",
        "description": "Retrieves the minimum and maximum payment amounts required to make an exchange for a specified pair of assets.",
        "parameters": {
            "from_to": {
                "description": "Underscore separated pair of asset tickers (e.g., 'btc_usd').",
                "type": "str",
                "default": "btc_eth"
            },
            "api_key": {
                "description": "Your specific API key for the service. Defaults to 'your_api_key'.",
                "type": "str, optional",
                "default": "your_api_key"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbols_faq",
        "description": "Fetch answers to common questions for a given ticker symbol.",
        "parameters": {
            "ticker_slug": {
                "description": "The ticker symbol for which to fetch FAQ answers (e.g., 'NVDA').",
                "type": "str",
                "default": "NVDA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "currency_news",
        "description": "Fetch the latest news related to a specific currency, forex, or cryptocurrency pair.",
        "parameters": {
            "from_symbol": {
                "description": "A 3-letter currency code or symbol (ISO 4217) representing the base currency (e.g., 'USD').",
                "type": "str",
                "default": "USD"
            },
            "to_symbol": {
                "description": "A 3-letter currency code or symbol (ISO 4217) representing the target currency (e.g., 'EUR').",
                "type": "str",
                "default": "EUR"
            },
            "language": {
                "description": "The language of the news results, specified as a 2-letter language code (ISO 639-1). Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getdivision",
        "description": "Divides two numbers by making an API call to a division service.",
        "parameters": {
            "divisor": {
                "description": "The divisor in the division operation.",
                "type": "int",
                "default": ""
            },
            "dividend": {
                "description": "The dividend in the division operation.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "historical_exchange_rates",
        "description": "Fetch historical exchange rate data for a specific date using the RapidAPI service.",
        "parameters": {
            "date": {
                "description": "The date for which to retrieve exchange rate data, formatted as 'YYYY-MM-DD'.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "hull_moving_average",
        "description": "Calculates the Hull Moving Average (HMA) indicator for a given cryptocurrency market symbol using the Qvantana API.",
        "parameters": {
            "exchange": {
                "description": "Name of the cryptocurrency exchange (e.g., 'binance').",
                "type": "str",
                "default": "binance"
            },
            "market": {
                "description": "Type of the market (e.g., 'spot', 'usdt-perpetual').",
                "type": "str",
                "default": "spot"
            },
            "symbol": {
                "description": "Trading symbol of the cryptocurrency (e.g., 'BTCUSD').",
                "type": "str",
                "default": "btcusdt"
            },
            "interval": {
                "description": "Time interval for the HMA calculation (e.g., '1d', '1h').",
                "type": "str",
                "default": "1m"
            },
            "is_from": {
                "description": "Start time for fetching data in UNIX timestamp format, default is '1683895800'.",
                "type": "str, optional",
                "default": "1683895800"
            },
            "backtracks": {
                "description": "Number of periods to look back, default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "length": {
                "description": "Length of the HMA, default is 9.",
                "type": "int, optional",
                "default": "9"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v2_auto_complete",
        "description": "Retrieve auto-complete suggestions for a product name from the ASOS API.",
        "parameters": {
            "q": {
                "description": "The product name to get auto-complete suggestions for.",
                "type": "str",
                "default": "bikini top"
            },
            "store": {
                "description": "The store code. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "country": {
                "description": "The country code. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "currency": {
                "description": "The currency code. Default is 'USD'.",
                "type": "str, optional",
                "default": "USD"
            },
            "sizeschema": {
                "description": "The size schema code. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "lang": {
                "description": "The language code. Default is 'en-US'.",
                "type": "str, optional",
                "default": "en-US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_the_next_dividend_payout_date",
        "description": "Fetches the next dividend payout date for a given stock ticker using the Sunday Finance API.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol to lookup for the next dividend payout date.",
                "type": "str",
                "default": "aapl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "charts_chain",
        "description": "Retrieves the historical Total Value Locked (TVL) data for a specified blockchain chain.",
        "parameters": {
            "chain": {
                "description": "The slug identifier of the blockchain chain. This can be obtained from the /v1/tvl/chains endpoint or the chains property on /v1/tvl/protocols.",
                "type": "str",
                "default": "Ethereum"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "fetchdividends",
        "description": "Fetches the dividends data for a given ISIN using the RapidAPI service.",
        "parameters": {
            "isin": {
                "description": "The International Securities Identification Number (ISIN) for which to fetch dividends data.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_daily_influencer_posts_by_coin_ticker",
        "description": "Fetch daily social media posts from top influencers by a specific coin ticker.",
        "parameters": {
            "cointicker": {
                "description": "The ticker symbol of the coin for which to retrieve influencer posts.",
                "type": "str",
                "default": "BTC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v3_auto_complete",
        "description": "Fetches auto-suggestions based on a given symbol or company name using the RapidAPI Fidelity Investments endpoint.",
        "parameters": {
            "q": {
                "description": "Symbol or company name for which to fetch auto-suggestions.",
                "type": "str",
                "default": "apple"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "yh_historical",
        "description": "Retrieves the historical data for a given stock ticker within specified date ranges.",
        "parameters": {
            "ticker": {
                "description": "The ticker symbol of the stock.",
                "type": "str",
                "default": ""
            },
            "sdate": {
                "description": "The start date for retrieving historical data in YYYY-MM-DD format.",
                "type": "str",
                "default": ""
            },
            "edate": {
                "description": "The end date for retrieving historical data in YYYY-MM-DD format.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "earnings",
        "description": "This function retrieves the earnings information for a given company using the Yahoo Finance Complete API.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol of the company for which earnings information is to be retrieved.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_undervalued_large_caps",
        "description": "Fetches a list of potentially undervalued large cap stocks from the API.",
        "parameters": {
            "start": {
                "description": "The starting index for the results. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_5_year_historical_quarterly_prices",
        "description": "Fetches the 5-year historical quarterly stock prices for a given ticker.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol to retrieve historical data for.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "yearly_income_statements",
        "description": "Fetches the annual income statements for a given stock symbol using the specified RapidAPI key.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which the annual income statements are to be fetched.",
                "type": "str",
                "default": "MSFT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "search_exchange",
        "description": "Search for exchanges based on a query string or category.",
        "parameters": {
            "q": {
                "description": "A query string to search for specific exchanges. Defaults to 'B'.",
                "type": "str, optional",
                "default": "B"
            },
            "category": {
                "description": "The category to filter the exchanges, for example, 'Cryptocurrency'. Defaults to 'Cryptocurrency'.",
                "type": "str, optional",
                "default": "Cryptocurrency"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_net_share_purchase_activity",
        "description": "Fetches net share purchase activity information for a particular stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve net share purchase activity information.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_v2_list_trending",
        "description": "Fetches a list of trending news from the Seeking Alpha API.",
        "parameters": {
            "size": {
                "description": "The number of items per response, with a maximum of 40. Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            },
            "since": {
                "description": "Unix timestamp (Epoch timestamp) to filter data from this date onwards. Can be used together with the 'until' parameter to filter data by date range. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "until": {
                "description": "Unix timestamp (Epoch timestamp) to filter data up to this date. Can be used together with the 'since' parameter to filter data by date range. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "calendars_get_earning_calendar",
        "description": "Fetches the earnings calendar for a specified date range and stock exchange.",
        "parameters": {
            "is_from": {
                "description": "The starting epoch timestamp in seconds (e.g., 1661187600).",
                "type": "int",
                "default": ""
            },
            "to": {
                "description": "The ending epoch timestamp in seconds (e.g., 1661619600).",
                "type": "int",
                "default": ""
            },
            "lang": {
                "description": "The language code for the response (default is 'en').",
                "type": "str, optional",
                "default": "en"
            },
            "screenername": {
                "description": "The screener name value returned in the /countries/list endpoint (default is 'america').",
                "type": "str, optional",
                "default": "america"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stockprice",
        "description": "Fetches the live price of a given stock symbol from the exchange using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch the live price (e.g., TATAMOTORS, M&M).",
                "type": "str",
                "default": "TATAMOTORS"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_latest_price",
        "description": "Fetch the latest Thai oil price data from the specified API.",
        "parameters": {
            "info": {
                "description": "Whether to include additional info in the API request. Defaults to None.",
                "type": "bool, optional",
                "default": "true"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "premium_daily",
        "description": "Fetches the daily zip files of filed 10-Q and 10-K reports for a given date using the provided RapidAPI key.",
        "parameters": {
            "date": {
                "description": "The date for which to fetch the report in YYYY-MM-DD format.",
                "type": "str",
                "default": "2023-07-07"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ultimateoscillator",
        "description": "Fetches the Ultimate Oscillator (UO) indicator data for a given cryptocurrency symbol from the Qvantana API.",
        "parameters": {
            "exchange": {
                "description": "The exchange to retrieve data from.",
                "type": "str",
                "default": "binance"
            },
            "interval": {
                "description": "The interval time frame for the data (e.g., '1h', '1d').",
                "type": "str",
                "default": "1m"
            },
            "market": {
                "description": "The type of market to query (e.g., 'spot', 'usdt-perpetual', 'inverse-perpetual').",
                "type": "str",
                "default": "spot"
            },
            "symbol": {
                "description": "The cryptocurrency symbol to retrieve the indicator for.",
                "type": "str",
                "default": "btcusdt"
            },
            "is_from": {
                "description": "The starting time for the data retrieval in Unix timestamp format. Defaults to '1683895800'.",
                "type": "str, optional",
                "default": "1683895800"
            },
            "shortperiod": {
                "description": "The short time period used for the Ultimate Oscillator. Defaults to 7.",
                "type": "int, optional",
                "default": "7"
            },
            "mediumperiod": {
                "description": "The medium time period used for the Ultimate Oscillator. Defaults to 14.",
                "type": "int, optional",
                "default": "14"
            },
            "longperiod": {
                "description": "The long time period used for the Ultimate Oscillator. Defaults to 28.",
                "type": "int, optional",
                "default": "28"
            },
            "backtracks": {
                "description": "The number of past periods to include in the analysis. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "account_transaction_history",
        "description": "Gets an array of all transactions for a given address on the Binance Smart Chain.",
        "parameters": {
            "address": {
                "description": "The address to scan for transactions.",
                "type": "str",
                "default": "0x0000000000000000000000000000000000000123"
            },
            "network": {
                "description": "Specify the network to be used, either 'mainnet' or 'testnet'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "supply_chain",
        "description": "Fetches supply chain information for a given stock ticker.",
        "parameters": {
            "ticker": {
                "description": "The stock symbol of the company to get supply chain information for.",
                "type": "str",
                "default": "IBM"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "all_crypto",
        "description": "Fetches a datatable of cryptocurrency information from the RapidAPI endpoint.",
        "parameters": {
            "page": {
                "description": "The page number of the data to retrieve. Defaults to '1'.",
                "type": "str, optional",
                "default": "1"
            },
            "lang": {
                "description": "The language code for the data. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_stock_historical_price_data",
        "description": "Fetch historical pricing data for a given stock symbol over a specified date range and interval.",
        "parameters": {
            "symbol": {
                "description": "Ticker symbol for the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "start_date": {
                "description": "The start date for fetching historical data in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2022-03-02"
            },
            "time_interval": {
                "description": "The time interval for the data; can be 'daily', 'weekly', or 'monthly'.",
                "type": "str",
                "default": "daily"
            },
            "end_date": {
                "description": "The end date for fetching historical data in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2022-03-03"
            },
            "region": {
                "description": "The region for the stock market. Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "marketbyid",
        "description": "Retrieves detailed information about a specific market based on the provided market UUID.",
        "parameters": {
            "is_id": {
                "description": "The unique identifier (UUID) of the market.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "streams_investor_relations",
        "description": "Fetches the most recent messages posted by verified Investor Relations customers from the StockTwits API.",
        "parameters": {
            "since": {
                "description": "Returns results with an ID greater than (more recent than) the specified ID.",
                "type": "int, optional",
                "default": ""
            },
            "max": {
                "description": "Returns results with an ID less than (older than) or equal to the specified ID.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of results to return, default and max limit is 30. This limit must be a number under 30. Defaults to '20'.",
                "type": "str, optional",
                "default": "20"
            },
            "callback": {
                "description": "Defines your own callback function name for JSONP support, add this parameter as the value. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_daily_low",
        "description": "Fetches the daily low stock price for a given symbol from the specified region using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region code where the stock is listed. Defaults to 'US'. Valid options include 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stochrsi",
        "description": "Fetches the Stochastic Relative Strength Index (STOCHRSI) for a given financial instrument using the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The instrument symbol, which can be an equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The interval between two consecutive points in the time series. Supported values include `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "fast_dma_type": {
                "description": "The type of moving average used for smoothing. Supported values are `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`. Defaults to `SMA`.",
                "type": "str",
                "default": "SMA"
            },
            "series_type": {
                "description": "The type of series data. Supported values are `open`, `high`, `low`, `close`. Defaults to `close`.",
                "type": "str",
                "default": "close"
            },
            "fast_d_period": {
                "description": "The period for the fast D moving average. Defaults to 3.",
                "type": "int",
                "default": 3
            },
            "outputsize": {
                "description": "The number of data points to return. Defaults to 30.",
                "type": "int",
                "default": 30
            },
            "fast_k_period": {
                "description": "The period for the fast K moving average. Defaults to 3.",
                "type": "int",
                "default": 3
            },
            "format": {
                "description": "The output format of the API response. Supported values are `json` and `csv`. Defaults to `json`.",
                "type": "str",
                "default": "json"
            },
            "time_period": {
                "description": "The period for the RSI calculation. Defaults to 14.",
                "type": "int",
                "default": 14
            }
        },
        "domain": "Finance"
    },
    {
        "name": "summary_details",
        "description": "Fetches and returns a detailed summary of any public stock using a given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch the summary details.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_news",
        "description": "Fetches the latest news related to a specific stock symbol/ticker.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol or ticker for which to fetch news. Examples include 'MSFT:NASDAQ', 'MSFT', '^DJI', and 'VTSAX'.",
                "type": "str",
                "default": "AAPL:NASDAQ"
            },
            "language": {
                "description": "The language in which to return the results, specified as a 2-letter ISO 639-1 code. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_10_year_historical_quarterly_prices",
        "description": "Fetch the 10-year historical quarterly prices for a given stock ticker.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which the historical data is to be fetched.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_the_market_calendar",
        "description": "Fetches the market calendar for a given month and year using the Tradier API.",
        "parameters": {
            "month": {
                "description": "The month for which to retrieve the market calendar. Defaults to '11'.",
                "type": "str",
                "default": "11"
            },
            "year": {
                "description": "The year for which to retrieve the market calendar. Defaults to '2013'.",
                "type": "str",
                "default": "2013"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_get_movers",
        "description": "Get market movers for a given exchange and category.",
        "parameters": {
            "exchange": {
                "description": "The stock exchange to retrieve data from. Accepted values include US, ADX, AMEX, ATHEX, EURONEXT_BRU, ASX, BAHRAIN, BCBA, BCS, BELEX, BET, BER, BIST, BME, BMFBOVESPA, BMV, BSE, BSSE, BVC, BVL, BVB, BVCV, BX, CSE, DFM, DUS, OMXCOP, OMXTSE, OMXHEX, EGX, EURONEXT, EURONEXT_PAR, EURONEXT_AMS, EURONEXT_LIS, FWB, GPW, HAN, HKEX, HNX, HOSE, IDX, JSE, LSE, LSIN, MIL, MOEX, MYX, MUN, NAG, NASDAQ, NEO, NEWCONNECT, NGM, NSE, NSENG, NYSE, NZX, KRX, OTC, OMXICE, OMXRSE, OMXSTO, OMXVSE, LUXSE, OSL, PSE, QSE, SGX, SIX, SWB, SZSE, SSE, SET, TADAWUL, TASE, TPEX, TSE, TSX, TSXV, TWSE, UPCOM, XETR.",
                "type": "str",
                "default": "US"
            },
            "name": {
                "description": "The category of movers to retrieve. Accepted values include volume_gainers, percent_change_gainers, percent_change_loosers, percent_range_gainers, percent_range_loosers, gap_gainers, gap_loosers, percent_gap_gainers, percent_gap_loosers. Defaults to 'volume_gainers'.",
                "type": "str, optional",
                "default": "volume_gainers"
            },
            "locale": {
                "description": "The language code for the results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "calendars_get_economic_calendar",
        "description": "Fetch the economic calendar for a specified date range and set of countries.",
        "parameters": {
            "is_from": {
                "description": "The start date in the format yyyy-MM-dd (e.g., '2022-08-21').",
                "type": "str",
                "default": ""
            },
            "to": {
                "description": "The end date in the format yyyy-MM-dd (e.g., '2022-09-05').",
                "type": "str",
                "default": ""
            },
            "minimportance": {
                "description": "The minimum importance level of events to fetch. Valid values are -1, 0, or 1.",
                "type": "int, optional",
                "default": ""
            },
            "lang": {
                "description": "The language code for the response. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "countries": {
                "description": "A comma-separated list of country codes to include (e.g., 'US,EU,JP'). Default includes multiple countries.",
                "type": "str, optional",
                "default": "US,EU,JP,AU,DE,GB,CA,FR,IT,NZ,ES,MX,CH,TR,ZA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "transcripts_list_deprecated",
        "description": "Fetches a list of transcripts for a specific symbol.",
        "parameters": {
            "is_id": {
                "description": "Symbol to query for data. Only one symbol can be queried at a time.",
                "type": "str",
                "default": "aapl"
            },
            "until": {
                "description": "The value of meta/page/minmaxPublishOn/min JSON object returned to load the next page. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "size": {
                "description": "The number of items per response. Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "quote_get_margin_requirements",
        "description": "Fetches the margin requirements for a given stock symbol from the Schwab API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve margin requirements.",
                "type": "str",
                "default": "TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "currencies_list",
        "description": "Fetch a list of all available currencies using the investing-cryptocurrency-markets API.",
        "parameters": {
            "time_utc_offset": {
                "description": "The UTC offset value in seconds. For example, UTC+8 is represented as 28800 (8 * 60 * 60). Default is 28800.",
                "type": "int, optional",
                "default": "28800"
            },
            "lang_id": {
                "description": "The language ID as returned by the .../get-meta-data endpoint. Default is 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "all_coins_ticker",
        "description": "Fetches ticker information for a range of cryptocurrencies.",
        "parameters": {
            "start": {
                "description": "The starting index for fetching tickers.",
                "type": "int",
                "default": "0"
            },
            "limit": {
                "description": "The number of tickers to fetch from the starting index.",
                "type": "int",
                "default": "100"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "earnings_history",
        "description": "Fetches the earnings history of a given stock ticker using the Toolbench RapidAPI.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to fetch the earnings history.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getfscore",
        "description": "Fetches the Piotroski F-Score for a given stock ticker using the RapidAPI service.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which the F-Score is to be retrieved.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "minus_di",
        "description": "Fetches the Minus Directional Indicator (MINUS_DI) for a given financial instrument.",
        "parameters": {
            "symbol": {
                "description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The interval between two consecutive points in the time series data. Supported intervals are: '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.",
                "type": "str",
                "default": "1min"
            },
            "outputsize": {
                "description": "The number of data points to return. Defaults to 30 if no date parameters are set, otherwise set to maximum.",
                "type": "int, optional",
                "default": 30
            },
            "time_period": {
                "description": "The number of periods to consider in the calculation. Defaults to 9.",
                "type": "int, optional",
                "default": 9
            },
            "format": {
                "description": "The format of the data returned. Can be 'CSV' or 'JSON'. Defaults to 'json'.",
                "type": "str, optional",
                "default": "json"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_litecoin_block_hash",
        "description": "Fetches the hash of a Litecoin block by its index using the RapidAPI service.",
        "parameters": {
            "i": {
                "description": "The index of the Litecoin block.",
                "type": "int",
                "default": "23"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_mark_price_kline",
        "description": "Fetches the mark price kline data for a specified trading symbol within a given time range and interval.",
        "parameters": {
            "interval": {
                "description": "The Kline interval. Possible values are '1', '3', '5', '15', '30', '60', '120', '240', '360', '720', 'D', 'M', 'W'.",
                "type": "str",
                "default": "D"
            },
            "start": {
                "description": "The start timestamp for the result in milliseconds.",
                "type": "int",
                "default": "1652112000000"
            },
            "symbol": {
                "description": "The trading symbol to query.",
                "type": "str",
                "default": "BTCUSDT"
            },
            "category": {
                "description": "The derivatives products category. Currently available categories include 'linear' and 'inverse' (inverse futures).",
                "type": "str",
                "default": "linear"
            },
            "end": {
                "description": "The end timestamp for the result in milliseconds.",
                "type": "int",
                "default": "1652544000000"
            },
            "limit": {
                "description": "The limit for data size per page, with a maximum of 200. Defaults to 200 pieces of data per page.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "open_interest",
        "description": "Fetch the total amount of unsettled contracts for a given symbol and period from the Bybit API.",
        "parameters": {
            "symbol": {
                "description": "The trading symbol for which to retrieve open interest data.",
                "type": "str",
                "default": "BTCUSD"
            },
            "period": {
                "description": "The data recording period, which can be one of '5min', '15min', '30min', '1h', '4h', or '1d'.",
                "type": "str",
                "default": "5min"
            },
            "limit": {
                "description": "The maximum number of data points to return. The default is 50, with a maximum allowable value of 200.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_growth_technology_stocks",
        "description": "Retrieves a list of technology stocks with revenue and earnings growth in excess of 25% from the mboum-finance API.",
        "parameters": {
            "start": {
                "description": "The starting index for the list of stocks. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "latest_spac_deals_ipos_closings",
        "description": "Fetches the latest SPAC events from a specified category using the SPACHero database API.",
        "parameters": {
            "event": {
                "description": "The type of SPAC event to retrieve. Options include 'ipo', 'closings', 'deals', and 'rumor'.",
                "type": "str",
                "default": "deals"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "doji",
        "description": "Fetches a list of stocks having a Doji signal from the specified page using the Toolbench RapidAPI service.",
        "parameters": {
            "page": {
                "description": "The page number to fetch the Doji signal stocks from. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_recommendation_trend",
        "description": "Fetches stock recommendation trends using the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch recommendation trends.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_financial_stmts",
        "description": "Fetch financial statements for a given stock symbol.",
        "parameters": {
            "frequency": {
                "description": "The frequency of the financial statements. It can be either 'annual' or 'quarterly'.",
                "type": "str",
                "default": "quarterly"
            },
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "statement_type": {
                "description": "The type of financial statement to retrieve. It can be 'income', 'balance', 'cash', or a list containing these types.",
                "type": "str",
                "default": "income"
            },
            "region": {
                "description": "The region of the stock market. Defaults to 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_splits",
        "description": "Fetch the list of all stock splits for a given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch stock splits.",
                "type": "str",
                "default": "MSFT"
            },
            "orderby": {
                "description": "The order in which to sort the stock splits. Defaults to 'Ascending'.",
                "type": "str, optional",
                "default": "Ascending"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "crypto_exchanges",
        "description": "Fetches the list of cryptocurrency exchanges available at Twelve Data API.",
        "parameters": {
            "format": {
                "description": "The desired response format. Acceptable values are 'json' (default) and 'csv'.",
                "type": "str",
                "default": "json"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_signals",
        "description": "Fetches trading signals and trends for a specified cryptocurrency pair from the given exchange and market type.",
        "parameters": {
            "coin": {
                "description": "The cryptocurrency pair to get signals for (e.g., BTC, ETH, TRX).",
                "type": "str",
                "default": "BTC"
            },
            "exchange": {
                "description": "The exchange to get signals from (e.g., Binance, Bybit, Huobi, Kucoin, Coinex, MXC, Gate).",
                "type": "str",
                "default": "Bybit"
            },
            "market_type": {
                "description": "The market type to get signals for (e.g., SPOT, FUTURES).",
                "type": "str",
                "default": "SPOT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_list_pairs",
        "description": "Fetches a list of available cryptocurrency pairs from the RapidAPI endpoint.",
        "parameters": {
            "lang_id": {
                "description": "The language ID returned in the /get-meta-data endpoint. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "time_utc_offset": {
                "description": "UTC offset value in seconds. For example, UTC+8 is represented as 28800. Defaults to 28800.",
                "type": "int, optional",
                "default": "28800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_3_summary",
        "description": "Fetches a summary of stock performance and related metrics from the Stocky API.",
        "parameters": {
            "keyword": {
                "description": "The stock keyword to search for. Default is 'GOOG'.",
                "type": "str",
                "default": "GOOG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_global_stats",
        "description": "Fetches global statistics available on CoinRanking using the RapidAPI service.",
        "parameters": {
            "referencecurrencyuuid": {
                "description": "UUID of the reference currency in which all the prices are calculated. Defaults to US Dollar UUID 'yhjMzLPhuIDl'.",
                "type": "str",
                "default": "yhjMzLPhuIDl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ema",
        "description": "Fetch the Exponential Moving Average (EMA) for a given financial instrument.",
        "parameters": {
            "symbol": {
                "description": "The financial instrument's symbol. Examples include 'AAPL' for Apple Inc., 'EUR/USD' for Euro to US Dollar, 'ETH/BTC' for Ethereum to Bitcoin, etc.",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The time interval between successive data points. Supported intervals include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.",
                "type": "str",
                "default": "1min"
            },
            "series_type": {
                "description": "The type of series to use in the calculations. Supported values are 'open', 'high', 'low', and 'close'. Defaults to 'close'.",
                "type": "str, optional",
                "default": "close"
            },
            "format": {
                "description": "The format of the response data. Supported values are 'JSON' and 'CSV'. Defaults to 'JSON'.",
                "type": "str, optional",
                "default": "json"
            },
            "outputsize": {
                "description": "The number of data points to return. Defaults to 30 when no date parameter is set, otherwise is set to the maximum available.",
                "type": "int, optional",
                "default": 30
            },
            "time_period": {
                "description": "The number of periods to use in the calculation of the EMA. Defaults to 9.",
                "type": "int, optional",
                "default": 9
            }
        },
        "domain": "Finance"
    },
    {
        "name": "forex_quotes",
        "description": "Fetches the real-time price of a forex currency pair.",
        "parameters": {
            "target": {
                "description": "The target currency code (e.g., 'USD').",
                "type": "str",
                "default": "USD"
            },
            "source": {
                "description": "The source currency code (e.g., 'EUR').",
                "type": "str",
                "default": "EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbols_get_profile",
        "description": "Fetch summary information for a stock quote, index, exchange, etc., given an issue ID.",
        "parameters": {
            "issueid": {
                "description": "The value of the issueId field obtained from previous endpoints such as .../auto-complete or .../symbols/translate.",
                "type": "int",
                "default": "36276"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_price_difference",
        "description": "Fetches the price difference of a specified cryptocurrency from the Crypto Arbitrage Trading API using the provided RapidAPI key.",
        "parameters": {
            "name": {
                "description": "The name of the cryptocurrency for which to fetch the price difference.",
                "type": "str",
                "default": "MOVR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_yearly_high",
        "description": "Fetch the yearly high stock price for a given ticker symbol from the specified region using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region in which the stock is listed. Defaults to 'US'. Valid options include 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', and 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "shares_float",
        "description": "Provides the current shares float for a given stock symbol using the Holistic Finance Stock Data API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve the shares float.",
                "type": "str",
                "default": "MSFT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_stock_price",
        "description": "Retrieve the current stock price for a given ticker symbol from the Yahoo! Finance API.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock. For example, \"AAPL\" is the ticker symbol for Apple Inc.",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The market region of the ticker symbol. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_price_fair_value",
        "description": "Fetches the price vs fair value data for a given stock.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock. This value can be obtained from endpoints such as /auto-complete, /get-summary, or /get-movers.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "options_historical",
        "description": "Returns historical options data based on the given parameters.",
        "parameters": {
            "expiration": {
                "description": "The expiration date of the option in the format YYYY-mm-dd, e.g., '2018-04-20'.",
                "type": "str",
                "default": "2018-04-20"
            },
            "type": {
                "description": "The type of option contract, either 'Call' or 'Put'.",
                "type": "str",
                "default": "Call"
            },
            "strike": {
                "description": "The strike price of the option, e.g., 100.",
                "type": "int",
                "default": "100"
            },
            "symbol": {
                "description": "The symbol of the asset, e.g., 'AAPL' for Apple Inc, 'MSFT' for Microsoft.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "analysis_list_deprecated",
        "description": "Fetches a list of analyses for a specified financial symbol using the Seeking Alpha API.",
        "parameters": {
            "is_id": {
                "description": "The symbol to query for data. Only one symbol is allowed at a time.",
                "type": "str",
                "default": "aapl"
            },
            "size": {
                "description": "The number of items per response. Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            },
            "until": {
                "description": "The value used to load the next page of data. This corresponds to the value of meta/page/minmaxPublishOn/min in the JSON response.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "states_list",
        "description": "Fetches a list of states with optional filtering and sorting criteria.",
        "parameters": {
            "country_id": {
                "description": "The ID of the country to filter states by.",
                "type": "str, optional",
                "default": ""
            },
            "sortorder": {
                "description": "The order in which to sort the results. Can be 'asc' for ascending or 'desc' for descending.",
                "type": "str, optional",
                "default": ""
            },
            "sortby": {
                "description": "The field by which to sort the results (e.g., 'name', 'code').",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "The maximum number of results to retrieve.",
                "type": "int, optional",
                "default": ""
            },
            "country_code": {
                "description": "The code of the country to filter states by. Defaults to 'IN'.",
                "type": "str, optional",
                "default": "IN"
            },
            "country_name": {
                "description": "The name of the country to filter states by.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "aroon",
        "description": "Fetches the Aroon Indicator (AROON) for a given financial instrument symbol. The Aroon Indicator is used to identify trends, the beginning of a new trend, and its strength in price movements.",
        "parameters": {
            "symbol": {
                "description": "The financial instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The time interval between data points in the time series. Supported values include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.",
                "type": "str",
                "default": "1min"
            },
            "format": {
                "description": "The format of the returned data. Can be 'json' or 'csv'. Defaults to 'json'.",
                "type": "str, optional",
                "default": "json"
            },
            "time_period": {
                "description": "The look-back period for the Aroon calculation. Defaults to 14.",
                "type": "int, optional",
                "default": 14
            },
            "outputsize": {
                "description": "The number of data points to return. Defaults to 30.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "rocp",
        "description": "Calculates the Rate of Change Percentage (ROCP) for a given financial instrument over a specified time period.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supports `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Financial instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "outputsize": {
                "description": "Number of data points to be retrieved. Default is `30` if no date parameters are set.",
                "type": "int, optional",
                "default": 30
            },
            "time_period": {
                "description": "Number of intervals used to calculate the ROCP. Default is `9`.",
                "type": "int, optional",
                "default": 9
            },
            "format": {
                "description": "Format of the output data. Can be `csv` or `json`. Default is `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "series_type": {
                "description": "The type of price series to use. Supports `open`, `high`, `low`, or `close`. Default is `close`.",
                "type": "str, optional",
                "default": "close"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "listportfolios",
        "description": "Fetches a list of portfolios from the Trader Wagon API based on the given parameters.",
        "parameters": {
            "limit": {
                "description": "The number of results to return. Default is 10.",
                "type": "int, optional",
                "default": "10"
            },
            "portfoliotype": {
                "description": "The type of portfolio to filter by. Default is None.",
                "type": "str, optional",
                "default": ""
            },
            "available": {
                "description": "Specifies whether to list only available portfolios. Default is 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "current_block_number",
        "description": "Retrieve the current block number of the Binance Smart Chain.",
        "parameters": {
            "network": {
                "description": "The network to query, either 'mainnet' or 'testnet'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stories_list",
        "description": "Retrieves a list of stories related to a specific sticker using the BB Finance API.",
        "parameters": {
            "template": {
                "description": "The category of the sticker, which can be one of the following: COMMODITY, CURRENCY, INDEX, INDEXFUTURE, RATE, or STOCK.",
                "type": "str",
                "default": "CURRENCY"
            },
            "is_id": {
                "description": "The value of the 'id' field returned by the /market/auto-complete endpoint.",
                "type": "str",
                "default": "usdjpy"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stocks_get_financials",
        "description": "Fetches financial information related to a stock ticker or symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock exchange and ticker symbol in the format \"exchange:symbol\" (e.g., \"NASDAQ:TSLA\").",
                "type": "str",
                "default": "NASDAQ:TSLA"
            },
            "columns": {
                "description": "A comma-separated list of financial metrics to retrieve (e.g., \"ADR,ADX,average_volume\").",
                "type": "str",
                "default": "name,average_volume,close,open,change"
            },
            "screenername": {
                "description": "The screener name field value as returned by the /countries/list endpoint. Defaults to 'america'.",
                "type": "str, optional",
                "default": "america"
            },
            "lang": {
                "description": "The language code for the returned data. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "crypto_info",
        "description": "Fetches detailed information about a cryptocurrency by its slug name.",
        "parameters": {
            "slug": {
                "description": "The unique identifier (slug) for the cryptocurrency.",
                "type": "str",
                "default": "binance-usd"
            },
            "lang": {
                "description": "The language code for the response. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "search_leaderboard",
        "description": "Search the Binance Futures leaderboard based on various criteria.",
        "parameters": {
            "istrader": {
                "description": "Include only copytraders if True.",
                "type": "bool, optional",
                "default": "false"
            },
            "statisticstype": {
                "description": "The statistics type to filter the leaderboard.",
                "type": "str, optional",
                "default": ""
            },
            "periodtype": {
                "description": "The period type to filter the leaderboard.",
                "type": "str, optional",
                "default": ""
            },
            "isshared": {
                "description": "Include shared positions if True.",
                "type": "bool, optional",
                "default": "true"
            },
            "tradetype": {
                "description": "The trade type to filter the leaderboard. 'PERPETUAL' represents USD\u24c8-M, and 'DELIVERY' represents COIN-M.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "time_series_endpoint",
        "description": "Retrieve historical exchange rates for specified date range and currency conversions.",
        "parameters": {
            "start_date": {
                "description": "The start date for the time series data in `YYYY-MM-DD` format.",
                "type": "str",
                "default": "2019-01-01"
            },
            "end_date": {
                "description": "The end date for the time series data in `YYYY-MM-DD` format.",
                "type": "str",
                "default": "2019-01-02"
            },
            "is_from": {
                "description": "Three-letter currency code of the base currency to convert from. Defaults to 'USD'.",
                "type": "str, optional",
                "default": "USD"
            },
            "to": {
                "description": "A comma-separated list of target currency codes to convert to. Defaults to 'EUR,GBP'.",
                "type": "str, optional",
                "default": "EUR,GBP"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_stock_profile_data",
        "description": "Fetches the stock profile data for a specified ticker symbol and region.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region in which the stock is listed. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_dividends_splits",
        "description": "Fetches stock dividends and splits data for a given ticker ID using the Webull API.",
        "parameters": {
            "tickerid": {
                "description": "The ticker ID of the stock for which to fetch dividends and splits data. This is the value of the tickerId field returned from endpoints such as /stock/search, /market/get-common-ranking, /market/get-top-active, and /market/get-top-gainers.",
                "type": "int",
                "default": "913255598"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "mama",
        "description": "Fetches the MESA Adaptive Moving Average (MAMA) for a given instrument symbol and time interval from the Twelve Data API.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "format": {
                "description": "Response format. Supports `csv` or `json`. Default is `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "slow_limit": {
                "description": "Slow limit parameter for MAMA calculation.",
                "type": "int, optional",
                "default": 0.05
            },
            "series_type": {
                "description": "Type of series data. Supports: `open`, `high`, `low`, `close`. Default is `close`.",
                "type": "str, optional",
                "default": "close"
            },
            "fast_limit": {
                "description": "Fast limit parameter for MAMA calculation.",
                "type": "int, optional",
                "default": 0.5
            },
            "outputsize": {
                "description": "Number of data points to return. Default is `30` if no date parameters are set, otherwise set to maximum.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_stat",
        "description": "Retrieves stock statistics for a given ticker ID from the Webull API.",
        "parameters": {
            "tickerid": {
                "description": "The value of the ticker ID to fetch statistics for. This ID can be obtained from other endpoints such as /stock/search or /market/get-common-ranking.",
                "type": "int",
                "default": "913255598"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_5_year_historical_monthly_prices",
        "description": "Fetch 5-year historical monthly stock prices for a given ticker symbol.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which historical data is to be fetched.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "basic_daily",
        "description": "Fetch daily 10-Q and 10-K report zip files from the SEC financial statement dataset.",
        "parameters": {
            "date": {
                "description": "The specific date for which to fetch the daily zip file, formatted as 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2023-07-07"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_all_social_spikes_by_coin_name",
        "description": "Retrieve social media spikes for a given coin name within the last 24 hours.",
        "parameters": {
            "coinname": {
                "description": "The name of the cryptocurrency for which to retrieve social media spikes.",
                "type": "str",
                "default": "Bitcoin"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v1_mortgagecalculator",
        "description": "Calculates mortgage-related information using the API Ninjas Mortgage Calculator API endpoint.",
        "parameters": {
            "interest_rate": {
                "description": "Annual interest rate (in %). For example, a 3.5% interest rate would be 3.5. Cannot exceed 10000.",
                "type": "int",
                "default": "3.5"
            },
            "downpayment": {
                "description": "Downpayment on the home or asset. Cannot exceed home_value.",
                "type": "int, optional",
                "default": ""
            },
            "home_value": {
                "description": "Total value of the home or asset. Must be greater than downpayment.",
                "type": "int, optional",
                "default": ""
            },
            "monthly_hoa": {
                "description": "Monthly homeowner association fees.",
                "type": "int, optional",
                "default": ""
            },
            "annual_property_tax": {
                "description": "Annual property tax owed.",
                "type": "str, optional",
                "default": ""
            },
            "duration_years": {
                "description": "Duration of the loan in years. Must be between 1 and 10000. If not set, default value is 30 years.",
                "type": "int, optional",
                "default": ""
            },
            "loan_amount": {
                "description": "Principal loan amount. Default is 200000.",
                "type": "int, optional",
                "default": "200000"
            },
            "annual_home_insurance": {
                "description": "Annual homeowner's insurance bill.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbols_get_option_expirations",
        "description": "Fetches the option expiration dates for a given symbol from the Seeking Alpha API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to query for option expiration data.",
                "type": "str",
                "default": "aapl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ticker_per_symbol",
        "description": "Fetch ticker data for a specified cryptocurrency symbol in a given market.",
        "parameters": {
            "market": {
                "description": "The market to retrieve data from. Possible values are: 'global' or 'local'.",
                "type": "str",
                "default": "global"
            },
            "symbol": {
                "description": "The cryptocurrency symbol in the form of 'ETH<fiat>', where '<fiat>' is a valid ISO currency code (e.g., ETHUSD, ETHEUR).",
                "type": "str",
                "default": "ETHUSD"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "transactions_feed",
        "description": "Fetches the latest large whale transactions for popular blockchains with optional filtering.",
        "parameters": {
            "s_amount_usd": {
                "description": "Filters transactions by value in USD. Use 'desc' for descending order.",
                "type": "str",
                "default": "desc"
            },
            "size": {
                "description": "Number of transactions to fetch. Defaults to '20'.",
                "type": "str",
                "default": "20"
            },
            "t_blockchain": {
                "description": "Specifies the blockchain to filter transactions. Defaults to 'ethereum'.",
                "type": "str",
                "default": "ethereum"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "risk",
        "description": "Fetches core metrics to measure the risk of investing in a mutual fund from the specified API.",
        "parameters": {
            "symbol": {
                "description": "The symbol ticker of the mutual fund.",
                "type": "str",
                "default": "VFIAX"
            },
            "dp": {
                "description": "The number of decimal places for floating values. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "Filter results by country name or alpha code. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_balance_sheet_stock",
        "description": "Fetches the balance sheet data for a given stock symbol using the mboum-finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve balance sheet data.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "typical_price",
        "description": "Fetches the Typical Price Indicator for a given market, exchange, symbol, and interval.",
        "parameters": {
            "market": {
                "description": "The market type. Available options are 'spot', 'usdt-perpetual', and 'inverse-perpetual'.",
                "type": "str",
                "default": "spot"
            },
            "exchange": {
                "description": "The exchange name.",
                "type": "str",
                "default": "binance"
            },
            "symbol": {
                "description": "The symbol representing the security (e.g., \"BTCUSD\").",
                "type": "str",
                "default": "btcusdt"
            },
            "interval": {
                "description": "The interval for which the typical price is calculated (e.g., '1m', '5m', '1h').",
                "type": "str",
                "default": "1m"
            },
            "backtracks": {
                "description": "The number of intervals back to retrieve. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "length": {
                "description": "The number of periods used in calculating the typical price. Default is 18.",
                "type": "int, optional",
                "default": "18"
            },
            "is_from": {
                "description": "The start time in Unix timestamp format. Default is '1683895800'.",
                "type": "str, optional",
                "default": "1683895800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "tokens",
        "description": "Retrieves a list of tokens and their contract information based on the specified blockchain network.",
        "parameters": {
            "network": {
                "description": "The name of the blockchain network. Supported networks include arbitrum, aurora, avalanche, bsc, cronos, ethereum, fantom, harmony, heco, kcc, metis, moonriver, oasisemerald, optimism, polygon, and telos.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_exchanges",
        "description": "Retrieve a list of exchanges where a specific coin can be traded.",
        "parameters": {
            "uuid": {
                "description": "UUID of the coin for which to request exchanges.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            },
            "search": {
                "description": "Value to search for within results, such as exchange names.",
                "type": "str, optional",
                "default": ""
            },
            "orderby": {
                "description": "Field to order the results by. Allowed values are \"24hVolume\" and \"price\". Defaults to \"24hVolume\".",
                "type": "str, optional",
                "default": "24hVolume"
            },
            "orderdirection": {
                "description": "Order direction, either \"asc\" for ascending or \"desc\" for descending. Defaults to \"desc\".",
                "type": "str, optional",
                "default": "desc"
            },
            "offset": {
                "description": "Offset for pagination. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "Limit for pagination. Defaults to 50. Should be within the range 0-100.",
                "type": "int, optional",
                "default": "50"
            },
            "referencecurrencyuuid": {
                "description": "UUID of the reference currency whose rate is used to calculate the volume. Defaults to \"yhjMzLPhuIDl\" (US Dollar).",
                "type": "str, optional",
                "default": "yhjMzLPhuIDl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_parent_get_recent_investment_rating_change",
        "description": "Fetches the recent investment rating change as displayed in the Parent tab for a given security.",
        "parameters": {
            "type": {
                "description": "The type of security, either 'etf' or 'fund'.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The security ID used to query the investment rating change.",
                "type": "str",
                "default": "F00000O2CG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "bin",
        "description": "Queries the BIN (Bank Identification Number) information using the Toolbench RapidAPI.",
        "parameters": {
            "bin": {
                "description": "The BIN (Bank Identification Number) to be checked.",
                "type": "str",
                "default": "557054"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "quote",
        "description": "Retrieve the latest quote for the specified financial instrument.",
        "parameters": {
            "symbol": {
                "description": "The symbol of the financial instrument (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').",
                "type": "str",
                "default": "AMZN"
            },
            "interval": {
                "description": "Time interval between data points. Supported values are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1day"
            },
            "outputsize": {
                "description": "The number of data points to retrieve. Defaults to 30.",
                "type": "int, optional",
                "default": 30
            },
            "format": {
                "description": "The format of the response. Can be 'csv' or 'json'. Defaults to 'json'.",
                "type": "str, optional",
                "default": "json"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "fetchlatestnav",
        "description": "Fetch the latest Net Asset Value (NAV) for mutual fund(s) based on various filtering parameters.",
        "parameters": {
            "mutualfundfamily": {
                "description": "Defines the mutual fund family.",
                "type": "str, optional",
                "default": ""
            },
            "schemecode": {
                "description": "Defines the scheme code. Supports multiple comma-separated scheme codes.",
                "type": "str, optional",
                "default": ""
            },
            "schemename": {
                "description": "Defines the scheme name.",
                "type": "str, optional",
                "default": ""
            },
            "schemetype": {
                "description": "Defines the scheme type.",
                "type": "str, optional",
                "default": ""
            },
            "additional": {
                "description": "Additional information for fetching NAV.",
                "type": "str, optional",
                "default": ""
            },
            "schemecategory": {
                "description": "Defines the scheme category.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v1_salestax",
        "description": "This function fetches sales tax breakdowns for a specified location via the API Ninjas Sales Tax API. The breakdown includes state, county, city, and any additional special sales taxes, represented in decimal form (e.g., 0.1 means 10% tax). You must specify either a ZIP code or a combination of city and state.",
        "parameters": {
            "state": {
                "description": "The name of the state for which sales tax information is required.",
                "type": "str, optional",
                "default": ""
            },
            "city": {
                "description": "The name of the city for which sales tax information is required.",
                "type": "str, optional",
                "default": ""
            },
            "zip_code": {
                "description": "A valid US ZIP code for which sales tax information is required. Defaults to '90210'.",
                "type": "str, optional",
                "default": "90210"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbol_strength",
        "description": "Fetches the combined strength of 8 individual currencies using calculations applied to 28 Forex pairs for a given timeframe.",
        "parameters": {
            "timeframe": {
                "description": "The timeframe for the currency strength data. Supported values are 'h1' for 1 hour, 'h4' for 4 hours, 'd1' for 1 day, and 'w1' for 1 week.",
                "type": "str",
                "default": "h1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_company_historical_data",
        "description": "Fetches daily historical pricing data for a specified company over a given period of months.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol of the company to fetch historical data for.",
                "type": "str",
                "default": "amzn"
            },
            "months": {
                "description": "The number of months of historical data to retrieve.",
                "type": "str",
                "default": "3"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "analyst_ratings_us_equities",
        "description": "Fetches analyst ratings for US equities using the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for the US equity.",
                "type": "str",
                "default": ""
            },
            "exchange": {
                "description": "Filter by exchange name or MIC code.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "Filter by country name or alpha code.",
                "type": "str, optional",
                "default": ""
            },
            "rating_change": {
                "description": "Filter by rating change action: `Maintains`, `Upgrade`, `Downgrade`, `Initiates`, or `Reiterates`.",
                "type": "str, optional",
                "default": ""
            },
            "outputsize": {
                "description": "Number of records in the response; default is `30`.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_financials",
        "description": "Fetches financial information for a given stock.",
        "parameters": {
            "is_id": {
                "description": "The identifier of the stock. Use the market/auto-complete API to get the correct values.",
                "type": "str",
                "default": "aapl:us"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "recommendations",
        "description": "Fetches analyst recommendations for a given stock symbol, optionally filtered by exchange and country.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to get recommendations for.",
                "type": "str",
                "default": ""
            },
            "exchange": {
                "description": "Filter recommendations by exchange name or mic code.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "Filter recommendations by country name or alpha code.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "generate_wallet",
        "description": "Generate a new cryptocurrency wallet for a specified blockchain.",
        "parameters": {
            "chain": {
                "description": "The blockchain for which to generate the wallet. Supported values are:",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "income_statement",
        "description": "Fetches the income statement for a specified company using the given RapidAPI key.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol of the company. Defaults to 'AAPL'.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "spac_price_targets",
        "description": "Fetches the latest SPAC (Special Purpose Acquisition Company) price targets from analysts, filtered by a specific SPAC symbol.",
        "parameters": {
            "symbol": {
                "description": "The SPAC symbol to filter the price targets by. Defaults to 'SOFI'.",
                "type": "str",
                "default": "SOFI"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_fullsize_chart",
        "description": "Fetches the full-size chart data for a specific cryptocurrency pair.",
        "parameters": {
            "pair_id": {
                "description": "The identifier of the cryptocurrency pair.",
                "type": "int",
                "default": "33"
            },
            "pair_interval": {
                "description": "The interval for the chart data in seconds.",
                "type": "int, optional",
                "default": "900"
            },
            "lang_id": {
                "description": "The language ID for the data. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "time_utc_offset": {
                "description": "The time offset in UTC seconds. For example, UTC+8 corresponds to 28800 seconds. Default is 28800.",
                "type": "int, optional",
                "default": "28800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_auto_complete",
        "description": "Fetch auto-complete suggestions for stock market queries.",
        "parameters": {
            "query": {
                "description": "The search query for which auto-complete suggestions are needed.",
                "type": "str",
                "default": "nasdaq"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_v2_list_by_symbol",
        "description": "Fetches the latest news articles associated with a given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve news. This is typically obtained from the auto-complete or other relevant endpoints.",
                "type": "str",
                "default": "AAPL"
            },
            "page": {
                "description": "The page number for paginated results. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "pagesize": {
                "description": "The number of news articles to return per page. Defaults to 30.",
                "type": "int, optional",
                "default": "30"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "maxindex",
        "description": "Fetches the index of the highest value over a specified period (MAXINDEX) using the Twelve Data API.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supported values: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "time_period": {
                "description": "The number of data points to consider. Defaults to 9.",
                "type": "int, optional",
                "default": 9
            },
            "series_type": {
                "description": "Type of series data to retrieve. Supported values: `open`, `high`, `low`, `close`. Defaults to 'close'.",
                "type": "str, optional",
                "default": "close"
            },
            "outputsize": {
                "description": "The amount of data to retrieve. Default is 30 if no date parameters are set, otherwise it is set to maximum.",
                "type": "int, optional",
                "default": 30
            },
            "format": {
                "description": "The format to receive the data in. Supported values: `CSV`, `JSON`. Defaults to 'json'.",
                "type": "str, optional",
                "default": "json"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_list_top",
        "description": "Fetches the top news from all supported areas.",
        "parameters": {
            "symbol": {
                "description": "The symbol of the quote, market, etc., such as 'IMRN'. Only one is allowed at a time. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_get_price_chart",
        "description": "Fetches data to draw a price chart based on the given interval and market ID.",
        "parameters": {
            "interval": {
                "description": "The time interval for the price chart. Options include: 'd1', 'd3', 'ytd', 'm1', 'm3', 'm6', 'y1', 'y5'.",
                "type": "str",
                "default": "y1"
            },
            "is_id": {
                "description": "The ID value obtained from the '/market/auto-complete' endpoint.",
                "type": "str",
                "default": "inmex:ind"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_modifiers",
        "description": "Fetches the modifiers of a coin's supply and their balance using the CoinRanking API.",
        "parameters": {
            "uuid": {
                "description": "The UUID of the coin for which to request the modifiers.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            },
            "offset": {
                "description": "Offset for pagination. Default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "Limit for pagination. Default is 50. Must be in the range 0-100.",
                "type": "int, optional",
                "default": "50"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_get_ipo_center",
        "description": "Fetches IPO center information for a specified region.",
        "parameters": {
            "regionid": {
                "description": "The ID of the region for which the IPO center information is to be fetched, obtained from the `/regions/list` endpoint.",
                "type": "int",
                "default": "6"
            },
            "status": {
                "description": "The status filter for the IPO information. It can be one of the following: 'filing', 'pricing', or 'buying'. Default is 'filing'.",
                "type": "str, optional",
                "default": "filing"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "earnings_revisions",
        "description": "Retrieve earnings revisions for a given stock ticker using the Toolbench RapidAPI service.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve earnings revisions.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_balance_sheet",
        "description": "Retrieves the balance sheet data for a specified stock symbol using the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve the balance sheet data.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_1_autocomplete",
        "description": "Fetch autocomplete suggestions for a given stock ticker or company name using the RapidAPI Stock Exchange service.",
        "parameters": {
            "keyword": {
                "description": "The stock ticker or company name to search for. Defaults to 'GOOG'.",
                "type": "str, optional",
                "default": "GOOG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "todas_as_moedas",
        "description": "Gets the latest exchange rate information for all currencies in a specified format.",
        "parameters": {
            "format": {
                "description": "Format of the response which can be 'json', 'jsonp', or 'xml'.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v1_inflation",
        "description": "Fetches current monthly and annual inflation percentages from the API Ninjas Inflation API endpoint.",
        "parameters": {
            "type": {
                "description": "Inflation indicator type. Can be either \"CPI\" (Consumer Price Index) or \"HICP\" (Harmonized Index of Consumer Prices). Defaults to \"CPI\" if not provided.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_search",
        "description": "Search for news articles that match a given keyword.",
        "parameters": {
            "keyword": {
                "description": "The term or phrase to search for in news articles.",
                "type": "str",
                "default": "apple"
            },
            "pageindex": {
                "description": "The index of the page to retrieve. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "pagesize": {
                "description": "The number of results per page. Maximum is 20. Default is 20.",
                "type": "int, optional",
                "default": "20"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "quote_get_option_fundamentals",
        "description": "Fetch the option fundamentals for a given stock symbol using the specified RapidAPI key.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve option fundamentals.",
                "type": "str",
                "default": "TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_price",
        "description": "Fetches the current price and details for a given public stock using the RapidAPI service.",
        "parameters": {
            "ticker": {
                "description": "The ticker symbol of the stock for which to retrieve the price and details.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "free_access",
        "description": "Grant access to a unique URL for the Walnut Trading Dashboard using the provided API key.",
        "parameters": {
            "get_dash_url": {
                "description": "The URL parameter required to get access to the dashboard.",
                "type": "str",
                "default": "True"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "asset",
        "description": "Fetches the UUID and details for all assets, with optional query parameters to filter the results.",
        "parameters": {
            "status": {
                "description": "The status of the assets to return. Can be 'ACTIVE' or 'INACTIVE'. Defaults to 'ACTIVE'.",
                "type": "str",
                "default": "ACTIVE"
            },
            "type": {
                "description": "The type of assets to return. Can be 'CRYPTO' or 'FIAT'. Defaults to None.",
                "type": "str",
                "default": ""
            },
            "symbol": {
                "description": "The ticker symbol of the assets to return (e.g., 'BTC'). Defaults to None.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "markets_equities_groups",
        "description": "Fetches equities groups such as global-equity and countries-equity from the Seeking Alpha API based on the given category.",
        "parameters": {
            "category": {
                "description": "The category of equities to fetch. For example, 'global-equity' or 'countries-equity'.",
                "type": "str",
                "default": "countries-equity"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getlatestbyedinetcode",
        "description": "Fetch the latest securities report data for a company specified by its EDINET code using the RapidAPI service.",
        "parameters": {
            "edinet_code": {
                "description": "The EDINET code of the company to fetch data for.",
                "type": "str",
                "default": "E02142"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "financial_balance_sheet",
        "description": "Fetches the balance sheet data of a company identified by the given ticker symbol.",
        "parameters": {
            "symbol": {
                "description": "Ticker symbol of the company to retrieve the financial balance sheet for.",
                "type": "str",
                "default": "MSFT"
            },
            "formstyle": {
                "description": "Format style of the returned data ('dataframe' or other formats). Defaults to 'dataframe'.",
                "type": "str, optional",
                "default": "dataframe"
            },
            "freq": {
                "description": "Frequency of the data ('Q' for quarterly or 'A' for annual). Defaults to 'Q'.",
                "type": "str, optional",
                "default": "Q"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "yearly_cashflow_statements",
        "description": "Fetch annual cash flow statements for a given stock symbol from the Freedom Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch annual cash flow statements.",
                "type": "str",
                "default": "MSFT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_quotes",
        "description": "Fetches real-time stock quotes for given company symbols.",
        "parameters": {
            "symbols": {
                "description": "Comma-separated list of stock symbols for which to retrieve real-time quotes.",
                "type": "str",
                "default": "MSFT, PLTR, PG, TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "full_stock_price",
        "description": "Fetches the current stock price for a given symbol using the Toolbench RapidAPI.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to query.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "linearregintercept",
        "description": "Calculates the linear regression intercept for the specified symbol and interval using the specified parameters and the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The instrument symbol (e.g., equity, index, ETF, forex, or cryptocurrency) to calculate the intercept for.",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The interval between two consecutive data points in the time series (e.g., `1min`, `5min`, `15min`, etc.).",
                "type": "str",
                "default": "1min"
            },
            "series_type": {
                "description": "The type of series to consider (e.g., `open`, `high`, `low`, `close`). Default is `close`.",
                "type": "str, optional",
                "default": "close"
            },
            "time_period": {
                "description": "The period of time over which to calculate the intercept. Default is 9.",
                "type": "int, optional",
                "default": 9
            },
            "format": {
                "description": "The format of the returned data (`csv` or `json`). Default is `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "outputsize": {
                "description": "The number of data points to retrieve. Default is 30.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "form5500_planname",
        "description": "Retrieves information about a specific plan based on the provided Employer Identification Number (EIN) using the Form 5500 API.",
        "parameters": {
            "ein": {
                "description": "Employer Identification Number (EIN) for the plan.",
                "type": "int",
                "default": "311334685"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "calculate_repayment_schedule",
        "description": "Calculates the repayment schedule for a loan using specified parameters.",
        "parameters": {
            "installmentcount": {
                "description": "Number of installments for the loan repayment.",
                "type": "str",
                "default": ""
            },
            "principalamount": {
                "description": "Principal amount of the loan.",
                "type": "str",
                "default": ""
            },
            "annualinterestrate": {
                "description": "Annual interest rate of the loan.",
                "type": "str",
                "default": ""
            },
            "startdate": {
                "description": "Start date of the loan repayment schedule.",
                "type": "str",
                "default": ""
            },
            "repaymentinterval": {
                "description": "Repayment interval, defaults to monthly if not provided.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "forex_pairs_list",
        "description": "Fetches a list of available forex pairs from the Twelve Data API, with optional filters for base currency, symbol, response format, and quote currency.",
        "parameters": {
            "currency_base": {
                "description": "Filter the results by base currency. Defaults to 'EUR'.",
                "type": "str",
                "default": "EUR"
            },
            "symbol": {
                "description": "Filter the results by symbol. Optional.",
                "type": "str",
                "default": ""
            },
            "format": {
                "description": "The format of the response. Can be 'json' or 'csv'. Defaults to 'json'.",
                "type": "str",
                "default": "json"
            },
            "currency_quote": {
                "description": "Filter the results by quote currency. Optional.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_token_balance",
        "description": "Fetches the balance of a specific token for a given address using the PancakeSwap API.",
        "parameters": {
            "address": {
                "description": "The blockchain address to check the token balance for.",
                "type": "str",
                "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
            },
            "token": {
                "description": "The token identifier (contract address or symbol) to check the balance of.",
                "type": "str",
                "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_most_actives",
        "description": "Fetches the most active stocks ordered by intraday trade volume using the Yahoo Finance API.",
        "parameters": {
            "start": {
                "description": "The start index for the request. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_stock_quote_type_data",
        "description": "Fetch stock quote type data for a given stock symbol and region using the specified RapidAPI key.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol for the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region code for the stock market. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_financial_details",
        "description": "Retrieves financial details for a given stock using the Morningstar API.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID value obtained from the /auto-complete, /get-summary, or /get-movers endpoints.",
                "type": "str",
                "default": "0P0000OQN8"
            },
            "datatype": {
                "description": "The data frequency. One of the following: 'A' for Annual or 'Q' for Quarterly. Defaults to 'A'.",
                "type": "str, optional",
                "default": "A"
            },
            "reporttype": {
                "description": "The report type. One of the following: 'R' for Restated or 'A' for As originally reported. Defaults to 'A'.",
                "type": "str, optional",
                "default": "A"
            },
            "type": {
                "description": "The data frequency. One of the following: 'A' for Annual or 'Q' for Quarterly. Defaults to 'A'.",
                "type": "str, optional",
                "default": "incomeStatement"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "executives",
        "description": "Fetches information about the current composition of executives for a given stock symbol using the Holistic Finance Stock Data API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve executive information.",
                "type": "str",
                "default": "MSFT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ideas_get_comments",
        "description": "Fetches comments related to an idea post from the TradingView API.",
        "parameters": {
            "uuid": {
                "description": "The unique identifier of the idea post obtained from the `.../ideas/list` endpoint.",
                "type": "str",
                "default": "CRK6Iv51"
            },
            "lang": {
                "description": "The language code for the comments. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_information",
        "description": "Fetch real-time stock information for a given stock name using the Toolbench RapidAPI.",
        "parameters": {
            "name": {
                "description": "The name of the stock for which to retrieve information.",
                "type": "str",
                "default": "TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getesgnews",
        "description": "Fetch ESG (Environmental, Social, and Governance) news articles from a specified API. The results include ESG-specific topics such as SASB, UN SDGs, Modern Slavery, and Gender Equality.",
        "parameters": {
            "content_type": {
                "description": "The content type for the news search. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "date": {
                "description": "The date for the news search in DD/MM/YYYY format. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "companyname": {
                "description": "The name of the company to search for news articles. Defaults to 'Apple Inc.'.",
                "type": "str, optional",
                "default": "Apple Inc."
            },
            "sedol": {
                "description": "The SEDOL (Stock Exchange Daily Official List) number to use for the news search. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "isin": {
                "description": "The ISIN (International Securities Identification Number) to use for the news search. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "medprice",
        "description": "Fetches the median price (MEDPRICE) of a given financial instrument over a specified interval using the Twelve Data API.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supported values are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol such as equity, index, ETF, forex, or cryptocurrency. Examples include `AAPL`, `EUR/USD`, `ETH/BTC`.",
                "type": "str",
                "default": "AAPL"
            },
            "format": {
                "description": "Response format. Can be `CSV` or `JSON`. Defaults to `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "outputsize": {
                "description": "Number of data points in the response. Defaults to `30`.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "kline_candlestick_data",
        "description": "Fetch Kline/Candlestick data from the RapidAPI crypto markets endpoint for the specified cryptocurrency symbol and interval.",
        "parameters": {
            "interval": {
                "description": "The interval for each candlestick (e.g., '1m', '5m', '1h').",
                "type": "str",
                "default": ""
            },
            "symbol": {
                "description": "The symbol of the cryptocurrency (e.g., 'BTCUSDT').",
                "type": "str",
                "default": "BTCUSDT"
            },
            "starttime": {
                "description": "The start time for the data in ISO 8601 format. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "endtime": {
                "description": "The end time for the data in ISO 8601 format. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of data points to retrieve. Defaults to 500 and maximum allowed is 1000.",
                "type": "int, optional",
                "default": "500"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbol_order_book_ticker",
        "description": "Fetches the order book ticker information for a specific cryptocurrency symbol using RapidAPI.",
        "parameters": {
            "symbol": {
                "description": "The symbol for the cryptocurrency (e.g., 'BTCUSDT'). Defaults to 'BTCUSDT'. If not provided, bookTickers for all symbols will be returned in an array.",
                "type": "str",
                "default": "BTCUSDT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_2_year_historical_quarterly_prices",
        "description": "Retrieves 2-year historical quarterly prices for a given stock ticker.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve historical prices.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "estimates",
        "description": "Retrieves estimates for a specified stock symbol using the Holistic Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve estimates.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_net_income",
        "description": "Fetches the net income of a given stock symbol from the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region of the stock market. Defaults to 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', and 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getbymonth",
        "description": "Fetches earning data for a specific month and year using the RapidAPI service.",
        "parameters": {
            "month": {
                "description": "The month for which to fetch earnings data.",
                "type": "str",
                "default": "05"
            },
            "year": {
                "description": "The year for which to fetch earnings data.",
                "type": "str",
                "default": "2022"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "spac_top_10_rankings",
        "description": "Fetches the top 10 SPAC (Special Purpose Acquisition Company) rankings based on specified criteria such as gainers, losers, and volume leaders for a given period and equity type.",
        "parameters": {
            "sortby": {
                "description": "Criteria to sort the rankings by. Can be 'gainers', 'losers', or 'volume'.",
                "type": "str",
                "default": "gainers"
            },
            "period": {
                "description": "Time period to consider for the rankings. Can be 'daily', 'weekly', or 'monthly'.",
                "type": "str",
                "default": "daily"
            },
            "type": {
                "description": "Type of SPAC equity. Can be 'common', 'unit', or 'warrant'.",
                "type": "str",
                "default": "common"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ln",
        "description": "Returns the natural logarithm (LN) transforms of all data points for a given financial instrument using the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The financial instrument symbol, which can be an equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`, etc.).",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The interval between two consecutive points in the time series. Supported intervals: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "outputsize": {
                "description": "The number of data points to retrieve. The default value is `30` when no date parameters are set; otherwise, it is set to the maximum available.",
                "type": "int, optional",
                "default": 30
            },
            "format": {
                "description": "The output format of the data. Supported values are `CSV` and `JSON`. The default value is `JSON`.",
                "type": "str, optional",
                "default": "json"
            },
            "series_type": {
                "description": "The type of data series to retrieve. Supported values are `open`, `high`, `low`, and `close`. The default value is `close`.",
                "type": "str, optional",
                "default": "close"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "cash_flow_statement",
        "description": "Fetches the company cash flow statement by year, with data in thousands of dollars.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol of the company.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getcurrentbyvaluegrowthmomentum",
        "description": "Fetches a list of stocks based on the specified current value, growth, and momentum criteria.",
        "parameters": {
            "momentum": {
                "description": "The momentum criteria for filtering stocks.",
                "type": "str",
                "default": "A"
            },
            "growth": {
                "description": "The growth criteria for filtering stocks.",
                "type": "str",
                "default": "A"
            },
            "value": {
                "description": "The value criteria for filtering stocks.",
                "type": "str",
                "default": "A"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "latest_exchange_rates",
        "description": "Fetches the latest exchange rate data using the provided parameters.",
        "parameters": {
            "resolution": {
                "description": "The frequency of updates for the exchange rates. Possible values are '1m' for minute, '1h' for hourly, and '1d' for daily updates.",
                "type": "str, optional",
                "default": ""
            },
            "currencies": {
                "description": "A comma-separated list of currency codes (e.g., 'USD,EUR,AUD,GBP') to get exchange rates for. If not provided, rates for all available currencies are returned.",
                "type": "str, optional",
                "default": ""
            },
            "base": {
                "description": "The base currency for the exchange rates. Defaults to 'USD'.",
                "type": "str, optional",
                "default": "USD"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "currency_options",
        "description": "Fetches currency options data for a specified stock using the Investing Financial Stocks API.",
        "parameters": {
            "slug": {
                "description": "The stock identifier slug to specify the stock for which currency options are to be retrieved.",
                "type": "str",
                "default": "usd-jpy"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "auto_complete_deprecated",
        "description": "Fetches suggestions for a given term or phrase from the Trading View API.",
        "parameters": {
            "text": {
                "description": "Any term or phrase for which to get suggestions.",
                "type": "str",
                "default": "tesla"
            },
            "type": {
                "description": "The category of suggestions to retrieve, one of the following:",
                "type": "str, optional",
                "default": ""
            },
            "lang": {
                "description": "The language code for the suggestions. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            },
            "exchange": {
                "description": "The exchange code as provided by the Trading View API's exchanges list endpoint.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_token_price",
        "description": "Retrieves the price of a specified token using the PancakeSwap API.",
        "parameters": {
            "token": {
                "description": "The contract address of the token. Defaults to the address of the BUSD token.",
                "type": "str",
                "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_ticker_for_specific_coin",
        "description": "Retrieves the ticker information for a specific cryptocurrency coin using the Coinlore API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the specific cryptocurrency coin for which the ticker information is to be retrieved.",
                "type": "int",
                "default": "90"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v1_convert",
        "description": "Converts a sum of money from one currency to another using the specified conversion type and RapidAPI key.",
        "parameters": {
            "to": {
                "description": "The currency ID to convert to.",
                "type": "int",
                "default": "980"
            },
            "sum": {
                "description": "The sum of money to convert.",
                "type": "int",
                "default": "100"
            },
            "is_from": {
                "description": "The currency ID to convert from.",
                "type": "int",
                "default": "840"
            },
            "type": {
                "description": "The type of conversion, defaults to 'commercial'.",
                "type": "str, optional",
                "default": "commercial"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ticker",
        "description": "Fetches financial data for a given ticker symbol using the RapidAPI service.",
        "parameters": {
            "t": {
                "description": "The ticker symbol for the financial instrument. Examples include 'ABNB:NASDAQ', '.DJI:INDEXDJX', 'EUR-USD', and 'BTC-USD'.",
                "type": "str",
                "default": "ABNB:NASDAQ"
            },
            "gl": {
                "description": "The country code to filter the search results. Defaults to 'US'.",
                "type": "str, optional",
                "default": "US"
            },
            "hl": {
                "description": "The language code to filter the search results. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "tvl_protocol",
        "description": "Fetch the Total Value Locked (TVL) for a specified DeFi protocol from the RapidAPI Toolbench.",
        "parameters": {
            "protocol": {
                "description": "The slug identifier for the DeFi protocol.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "tema",
        "description": "Calculates the Triple Exponential Moving Average (TEMA) for a given financial instrument.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "format": {
                "description": "Format of the returned data, either `csv` or `json`. Defaults to `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "outputsize": {
                "description": "Number of data points in the result. Default is `30`.",
                "type": "int, optional",
                "default": 30
            },
            "time_period": {
                "description": "Time period over which the TEMA is calculated. Default is `9`.",
                "type": "int, optional",
                "default": 9
            },
            "series_type": {
                "description": "Type of price data to analyze. Supports: `open`, `high`, `low`, `close`. Default is `close`.",
                "type": "str, optional",
                "default": "close"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_liquidity_value",
        "description": "Retrieves the liquidity value of a specified cryptocurrency in US Dollars.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the cryptocurrency.",
                "type": "str",
                "default": "BTC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "statistics",
        "description": "Fetch statistical data from the Immersive Roulette API.",
        "parameters": {
            "duration": {
                "description": "The number of hours for which to retrieve statistics. Defaults to 3 hours.",
                "type": "int",
                "default": "3"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_markets_of_coin",
        "description": "Fetches the top 50 markets for a given cryptocurrency coin.",
        "parameters": {
            "is_id": {
                "description": "The ID of the cryptocurrency coin.",
                "type": "int",
                "default": "90"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "equity_earnings",
        "description": "Returns earnings (EPS, quarterly) history data for a given security within a specified date range.",
        "parameters": {
            "to": {
                "description": "The query end date (supported format is **YYYY-mm-dd**), e.g., '2020-04-17'.",
                "type": "str",
                "default": "2020-04-17"
            },
            "is_from": {
                "description": "The query start date (supported format is **YYYY-mm-dd**), e.g., '2019-01-01'.",
                "type": "str",
                "default": "2019-01-01"
            },
            "symbol": {
                "description": "The symbol of the asset to look for, e.g., 'AAPL' (Apple Inc), 'T' (AT&T Inc).",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_realtime_volume",
        "description": "Fetches the real-time trading volume of a cryptocurrency in US Dollars.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the cryptocurrency (e.g., 'BTC' for Bitcoin).",
                "type": "str",
                "default": "BTC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_institution_ownership",
        "description": "Retrieves the institutional ownership information for a given stock symbol using the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch institutional ownership data.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getlistbyedinetcode",
        "description": "Fetches all securities report data of the company specified by the given EDINET code.",
        "parameters": {
            "edinet_code": {
                "description": "The EDINET code of the company for which to fetch securities report data.",
                "type": "str",
                "default": "E02142"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ideas_get_view_count",
        "description": "Fetches the view count for a specific idea post from the Trading View API.",
        "parameters": {
            "uuid": {
                "description": "The unique identifier for an idea, as returned by the /ideas/list endpoint.",
                "type": "str",
                "default": "CRK6Iv51"
            },
            "lang": {
                "description": "The language code for the response. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "assetbyid",
        "description": "Retrieves the details of an individual asset using its unique identifier (UUID) from the Brave New Coin API.",
        "parameters": {
            "is_id": {
                "description": "The unique resource identifier (UUID) of the asset to be retrieved.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_markets",
        "description": "Retrieve markets on different exchanges that trade a specific coin.",
        "parameters": {
            "uuid": {
                "description": "UUID of the coin you want to request markets for.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            },
            "offset": {
                "description": "Offset for pagination. Default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "orderby": {
                "description": "Index to sort results by. Default is '24hVolume'.",
                "type": "str, optional",
                "default": "24hVolume"
            },
            "limit": {
                "description": "Limit on the number of results returned. Default is 50.",
                "type": "int, optional",
                "default": "50"
            },
            "search": {
                "description": "Value to filter search results, e.g., exchange names, currency names, or currency symbols.",
                "type": "str, optional",
                "default": ""
            },
            "referencecurrencyuuid": {
                "description": "UUID of the reference currency used to calculate the volume. Defaults to the US Dollar.",
                "type": "str, optional",
                "default": "yhjMzLPhuIDl"
            },
            "orderdirection": {
                "description": "Order results in ascending ('asc') or descending ('desc') order. Default is 'desc'.",
                "type": "str, optional",
                "default": "desc"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "v1getfundlatestprice",
        "description": "Fetches the latest price of a fund using its ISIN.",
        "parameters": {
            "isin": {
                "description": "The International Securities Identification Number of the fund.",
                "type": "str",
                "default": "LU0690375182"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "recent_exchange_rates",
        "description": "Retrieve the latest exchange rate data between currencies.",
        "parameters": {
            "is_from": {
                "description": "Three-letter currency code of the currency to convert from. Defaults to 'USD'.",
                "type": "str",
                "default": "USD"
            },
            "to": {
                "description": "Comma-separated list of currency codes to convert 'is_from' currency into. Defaults to 'EUR,GBP'.",
                "type": "str",
                "default": "EUR,GBP"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_risk_rating_breakdown",
        "description": "Fetch the risk rating breakdown for a given stock performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock to fetch the risk rating breakdown for.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_statistics",
        "description": "Retrieve statistical information for a given stock.",
        "parameters": {
            "is_id": {
                "description": "The ID of the stock. Use the market/auto-complete API to get the correct values.",
                "type": "str",
                "default": "aapl:us"
            },
            "template": {
                "description": "Specifies the type of statistical template to use. Options include 'COMMODITY', 'CURRENCY', 'INDEX', 'INDEXFUTURE', 'RATE', and 'STOCK'. Defaults to 'STOCK'.",
                "type": "str, optional",
                "default": "STOCK"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "balansheet_financials",
        "description": "Fetches and returns the financial data for a given company symbol using the specified RapidAPI key.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol of the company for which financial data is requested.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "spac_sec_filings",
        "description": "Fetches the latest SPAC SEC filings, optionally filtered by a given SPAC symbol.",
        "parameters": {
            "symbol": {
                "description": "The SPAC symbol to filter the SEC filings by. Defaults to 'ITAC'.",
                "type": "str",
                "default": "ITAC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "straddle",
        "description": "This function retrieves the straddle data for a given stock ticker from the RapidAPI stock and options trading data provider.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve straddle data.",
                "type": "str",
                "default": "intc"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "forex_history_data_deprecated",
        "description": "Fetches historical forex data for a given currency pair using the RapidAPI service.",
        "parameters": {
            "pair_id": {
                "description": "The identifier for the currency pair whose historical data is to be fetched.",
                "type": "str",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_total_revenue",
        "description": "Fetches the total revenue for a given stock symbol from the specified region using the Toolbench RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": ""
            },
            "region": {
                "description": "The region code to fetch the stock data from. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "cci",
        "description": "Fetches the Commodity Channel Index (CCI) for a given symbol at a specified interval from the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The interval between two consecutive points in the time series. Supported intervals are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, and `1month`.",
                "type": "str",
                "default": "1min"
            },
            "outputsize": {
                "description": "The number of data points to retrieve. The default is `30`.",
                "type": "int, optional",
                "default": 30
            },
            "time_period": {
                "description": "The time period for calculating the CCI. The default is `20`.",
                "type": "int, optional",
                "default": 20
            },
            "format": {
                "description": "The format of the returned data. Accepted values are `csv` or `json`. The default is `json`.",
                "type": "str, optional",
                "default": "json"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "transaction",
        "description": "Fetches full data for a specific transaction on the Optimism blockchain.",
        "parameters": {
            "hash": {
                "description": "The hash of the transaction to scan.",
                "type": "str",
                "default": "0xc3f239bae81d78c344f475955801bf2a491430009f171c34a4937dc89ad88d9f"
            },
            "network": {
                "description": "The network to use (mainnet or testnet). Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "dividends",
        "description": "Retrieve the amount of dividends paid out for a given stock symbol within specified dates and other optional parameters.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve dividend information.",
                "type": "str",
                "default": "AAPL"
            },
            "start_date": {
                "description": "The start date for the dividend data in YYYY-MM-DD format. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "end_date": {
                "description": "The end date for the dividend data in YYYY-MM-DD format. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "The country of the stock exchange. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "range": {
                "description": "The range for the dividend data. Example: '6m' for six months. Defaults to '6m'.",
                "type": "str, optional",
                "default": "6m"
            },
            "exchange": {
                "description": "The stock exchange where the symbol is listed. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "query",
        "description": "Queries information about an IP address using the NetDetective API.",
        "parameters": {
            "ipaddress": {
                "description": "The IP address to use for the query. Defaults to None, which uses the IP address of the connecting client.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "year_fractions",
        "description": "Calculates the year fraction between two dates based on the specified day count convention using the RapidAPI service.",
        "parameters": {
            "start_date": {
                "description": "The start date of the period in YYYY-MM-DD format.",
                "type": "str",
                "default": "2021-03-31"
            },
            "end_date": {
                "description": "The end date of the period in YYYY-MM-DD format.",
                "type": "str",
                "default": "2021-04-30"
            },
            "dcc_types": {
                "description": "The day count convention to be used for the calculation (e.g., '30/360', 'ACT/360', etc.).",
                "type": "str",
                "default": "Actual360"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_calendar_events",
        "description": "Fetches calendar events for a specified stock symbol using the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to retrieve calendar events.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_annual_avg_div_yield",
        "description": "Fetches the annual average dividend yield for a given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region code for the stock market. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "currency_time_series",
        "description": "Retrieve forex time series data for a specified period.",
        "parameters": {
            "period": {
                "description": "The period for which the time series data should be returned. Valid periods include:",
                "type": "str",
                "default": ""
            },
            "to_symbol": {
                "description": "A 3-letter currency code representing the target currency (ISO 4217).",
                "type": "str",
                "default": "EUR"
            },
            "from_symbol": {
                "description": "A 3-letter currency code representing the base currency (ISO 4217).",
                "type": "str",
                "default": "USD"
            },
            "language": {
                "description": "The language code (ISO 639-1) for the results. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_2_stockdetails",
        "description": "Fetch detailed information about a specific stock using the StockYAPI Exchange API.",
        "parameters": {
            "keyword": {
                "description": "The stock ticker or keyword to search for. Default is 'GOOG'.",
                "type": "str",
                "default": "GOOG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_exchange_pairs",
        "description": "Retrieves the top 100 exchange pairs for a given exchange ID.",
        "parameters": {
            "is_id": {
                "description": "The ID of the exchange for which to retrieve pairs.",
                "type": "int",
                "default": "5"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "validate_card_number",
        "description": "Validate a credit card number and get the card type by using the Toolbench RapidAPI service.",
        "parameters": {
            "cardnumber": {
                "description": "The credit card number to be validated.",
                "type": "str",
                "default": "4682776017589385"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "tickerdata",
        "description": "Fetches historical ticker data for a given period and date range from the RapidAPI service.",
        "parameters": {
            "period": {
                "description": "The period for which to fetch the ticker data (e.g., 'daily', 'weekly').",
                "type": "str",
                "default": "1h"
            },
            "startdate": {
                "description": "The start date for the data in YYYY-MM-DD format.",
                "type": "str",
                "default": "2010-04-12T14:30"
            },
            "tickername": {
                "description": "The name of the ticker for which to fetch data.",
                "type": "str",
                "default": "gold"
            },
            "enddate": {
                "description": "The end date for the data in YYYY-MM-DD format.",
                "type": "str",
                "default": "2010-04-20T12:30"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getdirectdebitinitiationinstruction",
        "description": "Retrieve a direct debit initiation instruction by UETR ID.",
        "parameters": {
            "uetr": {
                "description": "An RFC4122 UID used as a unique Payment Instruction Identifier.",
                "type": "str",
                "default": "7dca010b-fc3b-496c-b8a4-36ffd78f674d"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_sustainability_get_product_involvement",
        "description": "Fetches product involvement information from the Sustainability tab for a given ETF or fund.",
        "parameters": {
            "type": {
                "description": "One of the following values: 'etf' or 'fund'. Specifies the type of the financial product.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The value of the securityId field returned in the API endpoint ../market/v2/get-returns.",
                "type": "str",
                "default": "F00000O2CG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "sar",
        "description": "Fetches the Parabolic SAR (SAR) data for a specified financial instrument using the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "interval": {
                "description": "The interval between two consecutive points in the time series. Supported values: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "maximum": {
                "description": "Maximum number of data points to retrieve.",
                "type": "int, optional",
                "default": 0.2
            },
            "outputsize": {
                "description": "The size of the data to be returned, with a default of 30.",
                "type": "int, optional",
                "default": 30
            },
            "format": {
                "description": "The format of the returned data. Options are `csv` or `json`. Default is `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "acceleration": {
                "description": "The acceleration factor used in the SAR calculation.",
                "type": "int, optional",
                "default": 0.02
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_individual_bitcoin_news_sources",
        "description": "Fetches information for a specific Bitcoin news resource from RapidAPI.",
        "parameters": {
            "newspaperid": {
                "description": "The unique identifier for the news resource.",
                "type": "str",
                "default": "coindesk"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "userinfo",
        "description": "Fetch user information from Instagram using the RapidAPI service.",
        "parameters": {
            "username": {
                "description": "The Instagram username for which to fetch information.",
                "type": "str",
                "default": "nike"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "tokens_all_market_cap",
        "description": "Fetches market capitalization data for tokens with optional filtering.",
        "parameters": {
            "sortfield": {
                "description": "The specific field to sort by.",
                "type": "str, optional",
                "default": ""
            },
            "sorttype": {
                "description": "The type of sorting to apply (e.g., 'asc' for ascending, 'desc' for descending).",
                "type": "str, optional",
                "default": ""
            },
            "stableonly": {
                "description": "Whether to return only stablecoins.",
                "type": "bool, optional",
                "default": ""
            },
            "skip": {
                "description": "The number of records to skip for pagination.",
                "type": "int, optional",
                "default": ""
            },
            "searchterms": {
                "description": "Specific search terms to filter tokens.",
                "type": "str, optional",
                "default": ""
            },
            "take": {
                "description": "The number of records to take for pagination.",
                "type": "int, optional",
                "default": ""
            },
            "chains": {
                "description": "Comma-separated list of specific blockchains to filter the tokens by.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_short_interest",
        "description": "Fetches the short interest data for a given stock identified by its performance ID from the Morning Star API.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock obtained from endpoints like /auto-complete, /get-summary, or /get-movers.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbols_suggested",
        "description": "Fetch suggested tickers based on a given ticker slug.",
        "parameters": {
            "ticker_slug": {
                "description": "The ticker slug to base the suggestions on.",
                "type": "str",
                "default": "NVDA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "time_zone_converter",
        "description": "Converts a given datetime from one time zone to another, taking into account Daylight Saving Time (DST).",
        "parameters": {
            "datetime": {
                "description": "The date and time in ISO 8601 format.",
                "type": "str",
                "default": "2021-03-21T20:10:00"
            },
            "from_tzname": {
                "description": "The source time zone name. Defaults to 'UTC'.",
                "type": "str, optional",
                "default": "UTC"
            },
            "to_tzname": {
                "description": "The target time zone name. Defaults to 'UTC'.",
                "type": "str, optional",
                "default": "UTC"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "recent_trades_list",
        "description": "Fetches the recent trades for a given cryptocurrency symbol from the RapidAPI crypto markets service.",
        "parameters": {
            "symbol": {
                "description": "The cryptocurrency symbol (e.g., 'BTC' for Bitcoin) for which recent trades are to be fetched.",
                "type": "str",
                "default": "BTCUSDT"
            },
            "limit": {
                "description": "The number of recent trades to retrieve. Default is 500; maximum is 1000.",
                "type": "int, optional",
                "default": "500"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "risk_free_rate",
        "description": "Fetches the risk-free rate for a specific date, duration, and geography using the Toolbench RapidAPI.",
        "parameters": {
            "duration": {
                "description": "Duration for which the risk-free rate is to be fetched. Supported values are '3m' (default), '5y', and '10y'.",
                "type": "str",
                "default": "3m"
            },
            "geography": {
                "description": "Geography for which the risk-free rate is to be fetched. Currently, only 'US' is supported. Default is 'US'.",
                "type": "str",
                "default": "US"
            },
            "date": {
                "description": "Specific date for which the risk-free rate is to be fetched in 'YYYY-MM-DD' format. Default is '2023-05-10'.",
                "type": "str",
                "default": "2023-05-10"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "companies_balance_sheet_statements",
        "description": "Fetches the balance sheet statements of a company using the given symbol.",
        "parameters": {
            "symbol": {
                "description": "The symbol name of the company for which the balance sheet statements are to be fetched.",
                "type": "str",
                "default": "AAPL"
            },
            "apikey": {
                "description": "The API key required for accessing the Financial Modeling Prep service.",
                "type": "str",
                "default": "rapid_api"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_issuance_blockchains",
        "description": "Fetches the issuance blockchains for a given coin using the CoinRanking API.",
        "parameters": {
            "uuid": {
                "description": "UUID of the coin for which the blockchains are being requested.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            },
            "offset": {
                "description": "Pagination offset. Default is 0.",
                "type": "int, optional",
                "default": "0"
            },
            "limit": {
                "description": "Maximum number of results to return. Default is 50, with a valid range of 0-100.",
                "type": "int, optional",
                "default": "50"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "crypto_symbols",
        "description": "Returns a list of all available cryptocurrencies from the RapidAPI service.",
        "parameters": {
            "includenames": {
                "description": "If True, include cryptocurrency names in the response. Defaults to None.",
                "type": "bool, optional",
                "default": "true"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ideas_detail",
        "description": "Fetches detailed information about an ideal post based on the given UUID.",
        "parameters": {
            "uuid": {
                "description": "The UUID of the specific post. This value is obtained from the `image_url` field returned in the `/ideas/list` endpoint.",
                "type": "str",
                "default": "CRK6Iv51"
            },
            "lang": {
                "description": "The language code for the response. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_daily_dividend_data",
        "description": "Fetch and return the daily dividend data for a given stock symbol within a specified date range.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol (e.g., 'AAPL' for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "end_date": {
                "description": "The end date for the data in 'YYYY-MM-DD' format, representing the last day data will be pulled.",
                "type": "str",
                "default": "2022-03-03"
            },
            "start_date": {
                "description": "The start date for the data in 'YYYY-MM-DD' format, representing the first day data will be pulled.",
                "type": "str",
                "default": "2022-03-02"
            },
            "region": {
                "description": "The market region (e.g., 'US', 'BR', 'AU'). Default is 'US'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "financial_income_statement",
        "description": "Fetches the financial income statement for a given company ticker symbol, formatted by the specified style and frequency.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the company to retrieve financial information for.",
                "type": "str",
                "default": "AAPL"
            },
            "formstyle": {
                "description": "The format style of the returned data. Defaults to 'dataframe'.",
                "type": "str, optional",
                "default": "dataframe"
            },
            "freq": {
                "description": "The frequency of the financial data, either 'A' for annual or 'Q' for quarterly. Defaults to 'Q'.",
                "type": "str, optional",
                "default": "Q"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "minmax",
        "description": "Retrieve the lowest and highest values over a specified period (MINMAX) for a given financial instrument.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supports: '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').",
                "type": "str",
                "default": "AAPL"
            },
            "series_type": {
                "description": "Type of series data. Supports: 'open', 'high', 'low', 'close'. Default is 'close'.",
                "type": "str, optional",
                "default": "close"
            },
            "outputsize": {
                "description": "Number of data points to return. Default is 30.",
                "type": "int, optional",
                "default": 30
            },
            "format": {
                "description": "Desired format of the output. Can be 'CSV' or 'JSON'. Default is 'json'.",
                "type": "str, optional",
                "default": "json"
            },
            "time_period": {
                "description": "Time period over which the minmax values are calculated. Default is 9.",
                "type": "int, optional",
                "default": 9
            }
        },
        "domain": "Finance"
    },
    {
        "name": "latest_information_for_symbol",
        "description": "Fetch the latest ticker information for a given symbol from the Bybit API.",
        "parameters": {
            "symbol": {
                "description": "The market symbol to retrieve information for.",
                "type": "str",
                "default": "BTCUSD"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "investor_grades",
        "description": "Fetches investor grades for specified cryptocurrency tokens within a date range.",
        "parameters": {
            "startdate": {
                "description": "The start date for the data in the format 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2023-01-11"
            },
            "enddate": {
                "description": "The end date for the data in the format 'YYYY-MM-DD'.",
                "type": "str",
                "default": "2023-01-10"
            },
            "tokens": {
                "description": "A comma-separated list of cryptocurrency tokens for which to fetch investor grades.",
                "type": "str",
                "default": "3375, 3306"
            },
            "limit": {
                "description": "The maximum number of results to return. Default is '1000'.",
                "type": "str, optional",
                "default": "1000"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "calendar_events",
        "description": "Fetches the calendar events for a particular stock symbol using the Yahoo Finance API via RapidAPI.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to fetch calendar events for.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "symbols_get_peers",
        "description": "Fetches the peer symbols of a given stock symbol using the Seeking Alpha API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to query for peers. Multiple symbols can be queried by separating them with a comma (e.g. 'aapl,tsla').",
                "type": "str",
                "default": "aapl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "daily_sentiment",
        "description": "Gets the daily sentiment score for a given asset symbol and date using the SentiTrade API.",
        "parameters": {
            "symbol": {
                "description": "The asset ticker symbol to query.",
                "type": "str",
                "default": "BTC"
            },
            "date": {
                "description": "The date for which to retrieve the sentiment score in 'YYYY-MM-DD' format.",
                "type": "str",
                "default": "2023-01-01"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "rocr",
        "description": "Calculates the Rate of Change Ratio (ROCR) for a given financial instrument over a specified time period.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supported values include: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "format": {
                "description": "The format of the output, which can either be `csv` or `json`. Default is `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "time_period": {
                "description": "Number of periods to go back for calculating the ROCR. Default is 9.",
                "type": "int, optional",
                "default": 9
            },
            "series_type": {
                "description": "The type of price series to use in the calculation. Supported values include: `open`, `high`, `low`, `close`. Default is `close`.",
                "type": "str, optional",
                "default": "close"
            },
            "outputsize": {
                "description": "Number of data points to retrieve. Default is 30.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_list_flash",
        "description": "Fetches a list of flash news articles using the Webull API.",
        "parameters": {
            "currentnewsid": {
                "description": "For paging purposes, this is the ID of the last news returned by this endpoint. Pass 0 for the first query. Defaults to 0.",
                "type": "int, optional",
                "default": "0"
            },
            "pagesize": {
                "description": "For paging purposes, this parameter specifies the maximum number of news articles to return. The maximum value is 20. Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_other_position",
        "description": "Retrieves the open positions for a trader from the Binance futures leaderboard.",
        "parameters": {
            "encrypteduid": {
                "description": "The encrypted UID of the trader whose open positions are to be retrieved.",
                "type": "str",
                "default": ""
            },
            "tradetype": {
                "description": "The type of trade to search for. Options are \"PERPETUAL\" (USD\u24c8-M) and \"DELIVERY\" (COIN-M). Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_portfolio_get_asset_allocation",
        "description": "Retrieves the asset allocation for a specified security as displayed in the Portfolio tab.",
        "parameters": {
            "type": {
                "description": "The type of asset to retrieve information for. Must be either 'etf' or 'fund'.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The security ID value returned from the market returns endpoint.",
                "type": "str",
                "default": "F00000O2CG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_bank_info",
        "description": "Fetches information about a bank using the provided routing number.",
        "parameters": {
            "routingnumber": {
                "description": "The routing number of the bank to lookup.",
                "type": "str",
                "default": "121000248"
            },
            "format": {
                "description": "Defines the format of the response. Default value is 'json'. Possible values are 'xml' and 'json'.",
                "type": "str, optional",
                "default": "json"
            },
            "paymenttype": {
                "description": "Specifies the type of payment information to retrieve. Default value is 'ach'. Possible values are 'ach' and 'wire'.",
                "type": "str, optional",
                "default": "ach"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "balance_sheet",
        "description": "Fetches the balance sheet of a specific company, including assets, liabilities, and shareholders\u2019 equity, from an external API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol of the company.",
                "type": "str",
                "default": "AAPL"
            },
            "exchange": {
                "description": "The stock exchange where the company is listed.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "The country where the company is located.",
                "type": "str, optional",
                "default": ""
            },
            "start_date": {
                "description": "The start date for the balance sheet data in 'YYYY-MM-DD' format.",
                "type": "str, optional",
                "default": ""
            },
            "end_date": {
                "description": "The end date for the balance sheet data in 'YYYY-MM-DD' format.",
                "type": "str, optional",
                "default": ""
            },
            "period": {
                "description": "The reporting period of the balance sheet data. Defaults to 'annual'.",
                "type": "str, optional",
                "default": "annual"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "recommendation_trends",
        "description": "Fetches recommendation trends for a given stock symbol using the Yahoo Finance API on RapidAPI.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol for which to retrieve recommendation trends.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_fund_profile",
        "description": "Fetch the fund profile information for a given stock using the provided ticker ID and API key.",
        "parameters": {
            "tickerid": {
                "description": "The unique identifier of the stock ticker. This value can be obtained from various stock-related endpoints such as stock search or market rankings.",
                "type": "int",
                "default": "913285171"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_key_statistics_data",
        "description": "Gets key statistics data for a given stock symbol and region using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol for the stock (e.g., 'AAPL' for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region for the stock market. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_index_price_kline",
        "description": "Fetches the index price kline data for a specified symbol and category within a given time range.",
        "parameters": {
            "symbol": {
                "description": "The symbol for which the kline data is to be fetched.",
                "type": "str",
                "default": "BTCUSDT"
            },
            "category": {
                "description": "The derivatives products category. Possible values are 'linear' and 'inverse', including inverse futures.",
                "type": "str",
                "default": "linear"
            },
            "interval": {
                "description": "The interval for the kline data. Possible values are '1', '3', '5', '15', '30', '60', '120', '240', '360', '720', 'D', 'M', and 'W'.",
                "type": "str",
                "default": "D"
            },
            "end": {
                "description": "The end timestamp point for the query results, in milliseconds.",
                "type": "int",
                "default": "1652544000000"
            },
            "start": {
                "description": "The start timestamp point for the query results, in milliseconds.",
                "type": "int",
                "default": "1652112000000"
            },
            "limit": {
                "description": "The limit for the data size per page, with a maximum size of 200. Defaults to None.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "convert_get_symbol",
        "description": "Converts a specified amount from one currency to another and retrieves the symbol of the converted value.",
        "parameters": {
            "amount": {
                "description": "The amount of currency to convert. Defaults to '1'.",
                "type": "str",
                "default": "1"
            },
            "to": {
                "description": "The target currency code. Defaults to 'USD'.",
                "type": "str",
                "default": "USD"
            },
            "is_from": {
                "description": "The source currency code. Defaults to 'EUR'.",
                "type": "str",
                "default": "EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_get_details",
        "description": "This function retrieves detailed news information using the given resource ID.",
        "parameters": {
            "resid": {
                "description": "The value of the resId field returned from the /news/list-top endpoint, used to specify which news details to retrieve.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "yearly_balance_sheets",
        "description": "Fetches the annual balance sheet statements for a given stock symbol using the Toolbench API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch the annual balance sheet statements.",
                "type": "str",
                "default": "MSFT"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "logo",
        "description": "Fetches the logo of a specified company from the Twelve Data API.",
        "parameters": {
            "symbol": {
                "description": "The stock ticker symbol of the company.",
                "type": "str",
                "default": "AAPL"
            },
            "country": {
                "description": "The country where the company is based. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "exchange": {
                "description": "The stock exchange where the company is listed. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_rsi_by_pairs",
        "description": "Fetches the Relative Strength Index (RSI) indicator for specified trading pairs from Binance using the given timeframe.",
        "parameters": {
            "pairs": {
                "description": "Trading pairs to get the RSI for, quoted in USDT, BTC, ETH, or BNB, separated by commas and in uppercase.",
                "type": "str",
                "default": "BTCUSDT,ETHUSDT,LTCBTC,XRPETH"
            },
            "timeframe": {
                "description": "The timeframe to calculate the RSI. Available options are:",
                "type": "str",
                "default": "1h"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "eps_revisions",
        "description": "Fetches analysts\u2019 revisions of a company's future quarterly and annual earnings per share (EPS) from the last week and month.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol of the company.",
                "type": "str",
                "default": ""
            },
            "exchange": {
                "description": "Filter by exchange name or mic code. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "Filter by country name or alpha code. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "company_cash_flow",
        "description": "Fetch public company's quarterly or annual cash flow information.",
        "parameters": {
            "period": {
                "description": "The period for which to retrieve the company's cash flow. Valid values are 'QUARTERLY' or 'ANNUAL'.",
                "type": "str",
                "default": ""
            },
            "symbol": {
                "description": "The stock symbol (ticker) of the company. Examples include 'MSFT', 'AAPL', or 'MSFT:NASDAQ'.",
                "type": "str",
                "default": "AAPL:NASDAQ"
            },
            "language": {
                "description": "The language to use for the results, specified as a 2-letter language code according to ISO 639-1 standards. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "rate_by_id",
        "description": "Fetches the rate for a given cryptocurrency ID using the Crypto Exchanges API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the cryptocurrency to fetch the rate for.",
                "type": "str",
                "default": "bitcoin"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_supply",
        "description": "Fetch the maximum, total, and circulating supply of a cryptocurrency by its UUID.",
        "parameters": {
            "uuid": {
                "description": "The UUID of the coin for which the supply information is requested.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_price_get_other_fees",
        "description": "Fetches other fees information for a specific security type from the Morning Star API.",
        "parameters": {
            "type": {
                "description": "The type of security, either 'etf' or 'fund'.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The unique identifier of the security.",
                "type": "str",
                "default": "F00000O2CG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "latest_retrieve_selected_160_symbols",
        "description": "Fetches the latest real-time prices for the requested metal symbols.",
        "parameters": {
            "requestedsymbols": {
                "description": "A string representing the metal symbols for which the prices are requested.",
                "type": "str",
                "default": "XAU,XAG,PA,PL,GBP,EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_profile_by_slug",
        "description": "Fetch a specific coin profile by its slug, optionally including various additional details.",
        "parameters": {
            "slug": {
                "description": "The slug identifier for the cryptocurrency.",
                "type": "str",
                "default": "bitcoin"
            },
            "explorers": {
                "description": "If True, includes the list of blockchain explorers for the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "community": {
                "description": "If True, includes community metrics related to the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "repo": {
                "description": "If True, includes source code repository stats related to the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "contracts": {
                "description": "If True, includes smart contract and audit details related to the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "news": {
                "description": "If True, includes the latest 5 news stories related to the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "flags": {
                "description": "If True, includes red flags associated with the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "exchanges": {
                "description": "If True, includes the list of exchanges where the coin is traded. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "links": {
                "description": "If True, includes links to social media profiles and project websites. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            },
            "tags": {
                "description": "If True, includes tags related to the coin. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "key_metrics",
        "description": "Fetches either annual or quarterly key metrics for a single stock company.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock company.",
                "type": "str",
                "default": "AAPL"
            },
            "period": {
                "description": "The period for which to fetch metrics, either 'annual' or 'quarterly'.",
                "type": "str",
                "default": "annual"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "options_stock",
        "description": "Fetch option data for a specific stock, ETF, or index.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol to retrieve option data for. Default is 'AAPL'.",
                "type": "str",
                "default": "AAPL"
            },
            "expiration": {
                "description": "The expiration date for the options in UNIX timestamp format. Default is '1705622400'.",
                "type": "str",
                "default": "1705622400"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "latest_in_chosen_currency",
        "description": "Fetches real-time metal prices for the requested symbols in the specified currency using the RapidAPI service.",
        "parameters": {
            "requestedsymbols": {
                "description": "Symbols of the metals for which the prices are requested (e.g., 'gold', 'silver').",
                "type": "str",
                "default": "XAU,XAG,PA,PL,GBP,EUR"
            },
            "requestedcurrency": {
                "description": "The currency in which the metal prices should be returned (e.g., 'USD', 'EUR').",
                "type": "str",
                "default": "EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "generate_litecoin_wallet",
        "description": "Generate a BIP44 compatible Litecoin wallet using a given mnemonic phrase and a RapidAPI key.",
        "parameters": {
            "mnemonic": {
                "description": "A mnemonic phrase consisting of 24 words, up to 500 characters. This phrase is used to generate extended public and private keys. If not provided, a default mnemonic is used.",
                "type": "str",
                "default": "next one hip dutch manage shock glide gospel arch vacuum ski biology hood tip wall invite flame cycle file clinic head among device autumn"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "crypto_convert",
        "description": "Converts a specified amount from one cryptocurrency to another using the RapidAPI service.",
        "parameters": {
            "is_from": {
                "description": "The cryptocurrency to convert from (default is 'ETH').",
                "type": "str, optional",
                "default": "ETH"
            },
            "to": {
                "description": "The cryptocurrency to convert to (default is 'BTC').",
                "type": "str, optional",
                "default": "BTC"
            },
            "amount": {
                "description": "The amount of cryptocurrency to convert (default is '100').",
                "type": "str, optional",
                "default": "100"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getpowerplantbyradiusandgps",
        "description": "Fetches information about power plants within a specified radius from given GPS coordinates.",
        "parameters": {
            "latitude": {
                "description": "The latitude coordinate to search around.",
                "type": "int",
                "default": "27.6"
            },
            "longitude": {
                "description": "The longitude coordinate to search around.",
                "type": "int",
                "default": "78.5"
            },
            "page_number": {
                "description": "The page number for paginated results. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "radius_km": {
                "description": "The radius in kilometers to search within. Defaults to 100 km if not provided.",
                "type": "int, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_news_from_a_specific_source",
        "description": "Fetch news on pollution in African countries from a specified news source.",
        "parameters": {
            "newspaperid": {
                "description": "The identifier of the news source to fetch pollution news from.",
                "type": "str",
                "default": "sei"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "list_transactions",
        "description": "Retrieve a pageable list of transactions for a specified time period from a project.",
        "parameters": {
            "is_from": {
                "description": "The start date of the period to retrieve transactions for, in Unix timestamp format.",
                "type": "int",
                "default": ""
            },
            "to": {
                "description": "The end date of the period to retrieve transactions for, in Unix timestamp format.",
                "type": "str",
                "default": ""
            },
            "projectid": {
                "description": "The ID of the project to retrieve transactions from.",
                "type": "str",
                "default": [
                    "undefined"
                ]
            },
            "pagesize": {
                "description": "The number of transactions to retrieve per page. Maximum value is 500.",
                "type": "int",
                "default": [
                    "10"
                ]
            },
            "page": {
                "description": "The page number to retrieve.",
                "type": "int",
                "default": [
                    "0"
                ]
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_symbols",
        "description": "Fetches and returns a list of all available stock symbols from the real-time-quotes API.",
        "parameters": {
            "includenames": {
                "description": "If True, includes stock names in the returned data. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_ico_calendar",
        "description": "Fetches the ICO (Initial Coin Offering) calendar based on the given parameters.",
        "parameters": {
            "category": {
                "description": "Comma-separated list of categories to filter the ICOs. For example: \"_ico_cat_gaming,_ico_cat_ecomm,_ico_cat_finance,_ico_cat_healthcare\".",
                "type": "str, optional",
                "default": ""
            },
            "time_utc_offset": {
                "description": "UTC offset in seconds. For instance, UTC+8 is represented as 8 * 60 * 60 = 28800.",
                "type": "int, optional",
                "default": "28800"
            },
            "tabname": {
                "description": "The status of the ICOs to retrieve. Options are 'upcoming', 'completed', or 'ongoing'. Default is 'ongoing'.",
                "type": "str, optional",
                "default": "ongoing"
            },
            "sort": {
                "description": "The sorting criterion. Options are 'related_days', 'name', 'funds_raised', or 'completed'. Default is 'related_days'.",
                "type": "str, optional",
                "default": "related_days"
            },
            "lang_id": {
                "description": "Language ID for the response. Default is 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_data",
        "description": "Retrieves a list of daily stock metrics for a given ticker symbol, such as opening, closing, highest, and lowest prices.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve market data.",
                "type": "str",
                "default": "TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v3_get_profile",
        "description": "Fetches the company profile for a given stock using the performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The unique identifier for the stock's performance, which can be obtained from endpoints such as `/auto-complete`, `/get-summary`, or `/get-movers`.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_sec_filings",
        "description": "Fetch the SEC filings for a given stock symbol from the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch SEC filings.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "pair_strength",
        "description": "Fetches the combined strength of currency pairs for a given timeframe from the Currency Quake API.",
        "parameters": {
            "timeframe": {
                "description": "The timeframe for which to retrieve the currency pair strength (e.g., 'h1', 'h4', 'd1', 'w1').",
                "type": "str",
                "default": "h1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_get_compact",
        "description": "Fetch the most informative fields about indices, commodities, currencies, rates, and other market data.",
        "parameters": {
            "is_id": {
                "description": "A comma-separated string of market IDs returned from the `/market/auto-complete` endpoint.",
                "type": "str",
                "default": "adsmi:ind,aex:ind,co1:com,gc1:com"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_5_day_historical_daily_prices",
        "description": "Fetches 5 days of historical daily stock prices including adjusted Open, High, Low, Close prices, daily volume, dividend, and split information for a given ticker symbol.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve historical data.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "forex_intraday",
        "description": "Fetches intraday time series data (Date, Open, High, Low, Close, Volume) for a given currency pair.",
        "parameters": {
            "interval": {
                "description": "Time interval for the data points, e.g., `1` for 1-minute interval, `5` for 5-minute interval.",
                "type": "int",
                "default": "1"
            },
            "symbol": {
                "description": "The symbol of the currency pair to query, e.g., `EUR/USD`, `EUR-USD`, or `EURUSD`.",
                "type": "str",
                "default": "EUR/USD"
            },
            "to": {
                "description": "The query end date and time in the format `YYYY-mm-dd HH:MM` or just `YYYY-mm-dd`.",
                "type": "str",
                "default": "2020-04-21 10:30"
            },
            "is_from": {
                "description": "The query start date and time in the format `YYYY-mm-dd HH:MM` or just `YYYY-mm-dd`.",
                "type": "str",
                "default": "2020-04-21 10:00"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "growth_estimate",
        "description": "Retrieves growth estimate data for a given stock ticker using the Toolbench RapidAPI.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which the growth estimate is requested.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "real_time_price",
        "description": "Retrieves the real-time price of the specified financial instrument.",
        "parameters": {
            "symbol": {
                "description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AMZN"
            },
            "format": {
                "description": "The format of the response. Can be 'CSV' or 'JSON'. Default is 'JSON'.",
                "type": "str, optional",
                "default": "json"
            },
            "outputsize": {
                "description": "The number of data points to return. Default is 30.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "articles_v2_list_trending",
        "description": "Fetches a list of trending articles from the Seeking Alpha API within a specified date range and limits the response size.",
        "parameters": {
            "since": {
                "description": "Unix timestamp to filter articles from this date onwards. Use together with 'until' parameter to specify a date range.",
                "type": "int, optional",
                "default": ""
            },
            "until": {
                "description": "Unix timestamp to filter articles up to this date. Use together with 'since' parameter to specify a date range.",
                "type": "int, optional",
                "default": ""
            },
            "size": {
                "description": "Number of items per response (max 40). Defaults to 20.",
                "type": "int, optional",
                "default": "20"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "asset_markets_by_id",
        "description": "Retrieves asset markets information by given asset ID from the specified API.",
        "parameters": {
            "is_id": {
                "description": "The ID of the asset.",
                "type": "str",
                "default": "bitcoin"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "tokens_all",
        "description": "Fetches data about tokens and optionally filters the results based on provided parameters.",
        "parameters": {
            "take": {
                "description": "The number of fields to retrieve.",
                "type": "int, optional",
                "default": ""
            },
            "walletid": {
                "description": "Identifier for a specific wallet to filter tokens by.",
                "type": "str, optional",
                "default": ""
            },
            "searchterms": {
                "description": "Terms to search for within the token data.",
                "type": "str, optional",
                "default": ""
            },
            "chains": {
                "description": "Specific blockchains to filter tokens by.",
                "type": "str, optional",
                "default": ""
            },
            "skip": {
                "description": "The number of fields to skip before starting to take.",
                "type": "int, optional",
                "default": ""
            },
            "stableonly": {
                "description": "Whether to only include stablecoins.",
                "type": "bool, optional",
                "default": ""
            },
            "ids": {
                "description": "Specific token IDs to retrieve data for.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ideas_get_replies",
        "description": "Fetch replies relating to an idea post and its comments from the trading-view API.",
        "parameters": {
            "is_id": {
                "description": "The ID associated with the idea.",
                "type": "str",
                "default": "9069097"
            },
            "uuid": {
                "description": "The unique identifier for the idea, typically the value of the image_url field returned in the /ideas/list endpoint.",
                "type": "str",
                "default": "jfQJOSwt"
            },
            "lang": {
                "description": "The language code for the response. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_price",
        "description": "Fetches the price of a specified cryptocurrency at a specific time.",
        "parameters": {
            "uuid": {
                "description": "UUID of the cryptocurrency for which the price is needed.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            },
            "timestamp": {
                "description": "Epoch timestamp in seconds for the specific price time. Defaults to the latest price if not provided.",
                "type": "int, optional",
                "default": ""
            },
            "referencecurrencyuuid": {
                "description": "UUID of the reference currency in which the price is shown. Defaults to US Dollar ('yhjMzLPhuIDl').",
                "type": "str, optional",
                "default": "yhjMzLPhuIDl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_get_full",
        "description": "Retrieves comprehensive information about specified stock tickers using the Bloomberg Finance API.",
        "parameters": {
            "is_id": {
                "description": "A comma-separated string of ticker IDs corresponding to the desired stocks. These IDs are returned by the `/market/auto-complete` endpoint.",
                "type": "str",
                "default": "adsmi:ind,aex:ind,co1:com,gc1:com"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_financial_time_series_daily",
        "description": "Fetches synthetic financial time series data (Date, Price Return) for a specified symbol and asset class.",
        "parameters": {
            "symbol": {
                "description": "The symbol identifying the financial instrument (e.g., '0001').",
                "type": "str",
                "default": "0008"
            },
            "asset_class": {
                "description": "The category of the financial instrument (e.g., equity, bond, commodity, mixed).",
                "type": "str",
                "default": "equity"
            },
            "size": {
                "description": "The size of the data set to return. Options are 'compact' for the most recent 252 data points, or 'full' for all available data. Defaults to 'full'.",
                "type": "str, optional",
                "default": "full"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "list_accounts",
        "description": "Fetches a list of accounts from the API, optionally paginated by a specified page number.",
        "parameters": {
            "page": {
                "description": "The page number for paginated results. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_stock_earnings_data",
        "description": "Fetches the stock earnings data for a given symbol and region using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region code for the stock market (default is 'US'). Allowed values include US, BR, AU, CA, FR, DE, HK, IN, IT, ES, GB, and S.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "spac_calendar",
        "description": "Fetch important SPAC dates from the calendar API based on the specified type.",
        "parameters": {
            "type": {
                "description": "The type of SPAC date information desired. Available options are 'merger', 'split', 'deadline', and 'redemption'.",
                "type": "str",
                "default": "redemption"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_asset_allocation",
        "description": "Fetches the asset allocation for a given stock ticker using the Webull API.",
        "parameters": {
            "tickerid": {
                "description": "The unique identifier for the stock ticker.",
                "type": "int",
                "default": "913285171"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_individual_bank",
        "description": "Fetches exchange rates from a specified central bank using a given bank ID and API key.",
        "parameters": {
            "bankid": {
                "description": "The identifier for the desired central bank (e.g., 'dkk' for Denmark National Bank, 'pln' for National Bank Of Poland, 'eur' for European Central Bank, 'usd' for USD base rate by the European Central Bank, 'sek' for Swedish Central Bank).",
                "type": "str",
                "default": "eur"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "specific_transactions",
        "description": "Fetch detailed information about a specific cryptocurrency transaction using the provided hash and symbol.",
        "parameters": {
            "hash": {
                "description": "The transaction hash used to uniquely identify the cryptocurrency transaction.",
                "type": "str",
                "default": "ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310"
            },
            "symbol": {
                "description": "The symbol of the cryptocurrency (e.g., BTC, ETH) for which the transaction information is to be retrieved.",
                "type": "str",
                "default": "btc"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_7_latest",
        "description": "Gets the 7 latest updates for a specified stock keyword.",
        "parameters": {
            "keyword": {
                "description": "The stock symbol or keyword to search for. Defaults to 'GOOG'.",
                "type": "str",
                "default": "GOOG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "price_all",
        "description": "Fetches the latest stock price from the RapidAPI service.",
        "parameters": {
            "identifier": {
                "description": "The stock identifier (e.g., ticker symbol) to query. If not provided, fetches a general stock price update.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "convert_currency",
        "description": "Converts a specified amount from one currency to another using the RapidAPI currency converter.",
        "parameters": {
            "amount": {
                "description": "The amount of money to convert.",
                "type": "int",
                "default": "100"
            },
            "is_from": {
                "description": "The source currency code.",
                "type": "str",
                "default": "USD"
            },
            "to": {
                "description": "The target currency code.",
                "type": "str",
                "default": "EUR"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getportfolioinfo",
        "description": "Retrieves portfolio information for a given portfolio ID from the Trader Wagon API.",
        "parameters": {
            "portfolioid": {
                "description": "The portfolio ID of the trader.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "mfs_list",
        "description": "Fetch a list of mutual funds from the Twelve Data API with various filter options.",
        "parameters": {
            "apikey": {
                "description": "API key for authentication. Defaults to 'demo'.",
                "type": "str, optional",
                "default": "demo"
            },
            "performance_rating": {
                "description": "Filter by performance rating. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "fund_type": {
                "description": "Filter by type of fund. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "outputsize": {
                "description": "Specifies the number of records to return. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "country": {
                "description": "Filter funds by country. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "fund_family": {
                "description": "Filter by fund family. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "symbol": {
                "description": "Filter by specific symbol. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "risk_rating": {
                "description": "Filter by risk rating. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "screeners_details",
        "description": "Fetch detailed information about a specified stock screener using the Seeking Alpha API.",
        "parameters": {
            "screener_id": {
                "description": "The unique identifier of the screener from the Screeners list and Screeners filters.",
                "type": "str",
                "default": "96793299"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ideas_list",
        "description": "Fetches a list of ideas/posts with various filtering and sorting options.",
        "parameters": {
            "locale": {
                "description": "The language code for the ideas/posts. Default is 'en'.",
                "type": "str",
                "default": "en"
            },
            "category": {
                "description": "Filter by category. Options are 'picked', 'newest', 'popular'.",
                "type": "str, optional",
                "default": ""
            },
            "stock_country": {
                "description": "The country code for stock-related ideas. Only applicable if the market is 'stock'. Default is 'us'.",
                "type": "str",
                "default": "us"
            },
            "page": {
                "description": "The page index for pagination. Default is 1.",
                "type": "int",
                "default": "1"
            },
            "per_page": {
                "description": "The number of items per page for pagination. Default is 20.",
                "type": "int",
                "default": "20"
            },
            "market": {
                "description": "The market type. Options are 'bond', 'futures', 'index', 'forex', 'bitcoin', 'stock'.",
                "type": "str, optional",
                "default": ""
            },
            "symbol": {
                "description": "Filter ideas/posts related to the specified symbol (e.g., 'NASDAQ:AAPL').",
                "type": "str, optional",
                "default": ""
            },
            "sort": {
                "description": "Sorting option. Options are 'latest_popular', 'recent', 'picked_time'. Default is 'latest_popular'.",
                "type": "str",
                "default": "latest_popular"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_histories",
        "description": "Fetches historical stock market data for a given performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The PerformanceId field retrieved from the /market/auto-complete or /market/get-summary APIs.",
                "type": "str",
                "default": "0P00001GJH"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_6_daily",
        "description": "Fetches daily stock data for a given keyword from a specified start date using the Toolbench RapidAPI.",
        "parameters": {
            "startdate": {
                "description": "The start date for the stock data in 'YYYY-MM-DD' format. Defaults to '2023-02-01'.",
                "type": "str",
                "default": "2023-02-01"
            },
            "keyword": {
                "description": "The stock symbol or keyword to query. Defaults to 'GOOG'.",
                "type": "str",
                "default": "GOOG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "history_prices",
        "description": "Fetches historical stock prices including Date, Open, High, Low, Close, Adj Close, and Volume for a given stock symbol over a specified range.",
        "parameters": {
            "range": {
                "description": "The time period for which to fetch stock prices. Choices are ['1y', '5y', 'max']. Defaults to '1y'.",
                "type": "str",
                "default": "1y"
            },
            "symbol": {
                "description": "The ticker symbol of the company. Defaults to 'TSLA'.",
                "type": "str",
                "default": "TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "ticker_changes",
        "description": "Fetches ticker values and price changes for a specified market and symbol using the RapidAPI service.",
        "parameters": {
            "market": {
                "description": "The market to query. Possible values include 'global' and 'local'.",
                "type": "str",
                "default": "local"
            },
            "symbol": {
                "description": "The trading pair symbol to query. Possible values include 'ETH<fiat>', where <fiat> is a valid ISO currency code (e.g., 'ETHUSD').",
                "type": "str",
                "default": "ETHUSD"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_quote_price",
        "description": "Fetches the real-time stock price for a given stock symbol using the Financial Modeling Prep API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which to fetch the real-time price.",
                "type": "str",
                "default": "AAPL"
            },
            "apikey": {
                "description": "The API key for authenticating with the Financial Modeling Prep API. Default is 'rapidapi'.",
                "type": "str",
                "default": "rapidapi"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_dividend_yield",
        "description": "Fetches the dividend yield for a given stock symbol from the specified region using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "The region code for the stock market (default is 'US'). Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', and 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_analysis",
        "description": "Fetches expert analysis opinion for a specific cryptocurrency pair from the Investing Cryptocurrency Markets API.",
        "parameters": {
            "pair_id": {
                "description": "The identifier for the cryptocurrency pair. This value can be obtained from endpoints like coins/list, coins/search, and coins/list-pairs.",
                "type": "int",
                "default": "1057391"
            },
            "time_utc_offset": {
                "description": "The UTC offset in seconds, e.g., UTC+8 hours is 28800 seconds. Default is 28800 (UTC+8).",
                "type": "int, optional",
                "default": "28800"
            },
            "lang_id": {
                "description": "The language identifier, as returned from the get-meta-data endpoint. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "page": {
                "description": "The page number for pagination. Default is 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_country_info",
        "description": "Fetches country information based on specified criteria.",
        "parameters": {
            "value": {
                "description": "The value to query by, such as an ISO code (e.g., 'DE') or a country name (e.g., 'Germany'). Defaults to 'DE'.",
                "type": "str, optional",
                "default": "DE"
            },
            "param": {
                "description": "The parameter type for the query, such as 'ISO' for ISO codes or 'countryName' for country names. Defaults to 'ISO'.",
                "type": "str, optional",
                "default": "ISO"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "account_transaction_count",
        "description": "Retrieves the number of transactions performed by a specified address on the Binance Smart Chain.",
        "parameters": {
            "address": {
                "description": "The blockchain address to be scanned.",
                "type": "str",
                "default": "0x0000000000000000000000000000000000000123"
            },
            "network": {
                "description": "The network to use, either 'mainnet' or 'testnet'. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "fx",
        "description": "Converts a specified `amount` of currency from one type to another using the ForexGo API, with an optional historical date.",
        "parameters": {
            "amount": {
                "description": "The amount of currency to be converted.",
                "type": "int",
                "default": "10"
            },
            "is_from": {
                "description": "The source currency code (e.g., 'USD', 'EUR').",
                "type": "str",
                "default": "EUR"
            },
            "to": {
                "description": "The target currency code to convert to.",
                "type": "str",
                "default": "USD"
            },
            "date": {
                "description": "The date for historical conversion rates in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ). Defaults to None for real-time rates.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_mini_chart_realtime_data",
        "description": "Fetch realtime mini chart data for a given stock performance ID from the Morningstar API.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock for which realtime mini chart data is requested. This value can be obtained from the /auto-complete, /get-summary, or /get-movers endpoints.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "list_all_platforms",
        "description": "Fetches a list of platforms from the \"Is This Coin A Scam\" API based on various search criteria.",
        "parameters": {
            "symbol": {
                "description": "Search all platform symbols. Wildcard searches can be performed using the * character (e.g., symbol=*TH). Multiple items can be searched at once by sending a comma-separated list (e.g., symbol=TOK,*TH). Default is 'ETH'.",
                "type": "str, optional",
                "default": "ETH"
            },
            "limit": {
                "description": "Limit the number of records returned. Default is 10.",
                "type": "int, optional",
                "default": 10
            },
            "name": {
                "description": "Search all platform names. Wildcard searches can be performed using the * character (e.g., name=*platform). Multiple items can be searched at once by sending a comma-separated list (e.g., name=ethereum,*token). Default is 'ethereum'.",
                "type": "str, optional",
                "default": "ethereum"
            },
            "page": {
                "description": "The page number to start from. Default is 10.",
                "type": "int, optional",
                "default": 10
            },
            "slug": {
                "description": "Search all platform slugs. Wildcard searches can be performed using the * character (e.g., slug=*token). Multiple items can be searched at once by sending a comma-separated list (e.g., slug=ethereum,*token). Default is 'ethereum'.",
                "type": "str, optional",
                "default": "ethereum"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_overview",
        "description": "Fetches overview information of a specific cryptocurrency pair from the RapidAPI cryptocurrency market service.",
        "parameters": {
            "pair_id": {
                "description": "The identifier for the cryptocurrency pair, obtained from endpoints like coins/list, coins/search, etc.",
                "type": "int",
                "default": "33"
            },
            "time_utc_offset": {
                "description": "UTC offset in seconds. Defaults to 28800 (UTC+8).",
                "type": "int, optional",
                "default": "28800"
            },
            "lang_id": {
                "description": "Language identifier for the response, typically obtained from /get-meta-data endpoint. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "generate_cc_number",
        "description": "Generates a fake credit card number using the specified brand and API key.",
        "parameters": {
            "brand": {
                "description": "The desired card brand (e.g., 'Visa', 'MasterCard'). Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "streams_symbol",
        "description": "Fetches the most recent messages for a specified stock symbol from the StockTwits API.",
        "parameters": {
            "is_id": {
                "description": "Ticker symbol, Stock ID, or RIC code of the symbol.",
                "type": "str",
                "default": "AAPL"
            },
            "since": {
                "description": "Returns results with an ID greater than (more recent than) the specified ID.",
                "type": "int, optional",
                "default": ""
            },
            "max": {
                "description": "Returns results with an ID less than (older than) or equal to the specified ID.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of messages to retrieve, with a default of 20. The maximum allowed value is 30.",
                "type": "int, optional",
                "default": "20"
            },
            "callback": {
                "description": "Custom callback function name for the request.",
                "type": "str, optional",
                "default": ""
            },
            "filter": {
                "description": "Filter messages by links, charts, videos, or top.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_the_yield",
        "description": "Fetches the yield information for a given stock ticker using the SundayFinance API.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve the yield information.",
                "type": "str",
                "default": "agnc"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "api_assetinfo",
        "description": "Fetches information about a single asset using the given symbol.",
        "parameters": {
            "symbol": {
                "description": "The symbol representing the asset to fetch information for.",
                "type": "str",
                "default": "eur"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "institutional_holders",
        "description": "Fetches the percentage of a company's stock owned by institutional holders such as pension funds, insurance companies, and investment firms.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol of the company.",
                "type": "str",
                "default": "AAPL"
            },
            "country": {
                "description": "The country in which the company is located. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "exchange": {
                "description": "The stock exchange where the company's shares are traded. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_portfolio_get_credit_quality",
        "description": "Retrieves the credit quality for a given security as displayed in the Portfolio tab using the Morningstar API.",
        "parameters": {
            "type": {
                "description": "The type of the security. Acceptable values are 'etf' or 'fund'.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The security ID field value returned from the API endpoint .../market/v2/get-returns.",
                "type": "str",
                "default": "F00000O2CG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_news",
        "description": "Fetches news related to a specific cryptocurrency pair.",
        "parameters": {
            "pair_id": {
                "description": "The ID of the cryptocurrency pair.",
                "type": "int",
                "default": "1057391"
            },
            "lang_id": {
                "description": "The language ID for the news articles. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "page": {
                "description": "The page number for paginated results. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "time_utc_offset": {
                "description": "The UTC offset in seconds. Example: UTC+8 would be 28800 seconds. Defaults to 28800.",
                "type": "int, optional",
                "default": "28800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "revenue_estimate",
        "description": "Fetches the revenue estimate for a given stock ticker using the Toolbench RapidAPI.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to fetch the revenue estimate.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "earnings_estimate",
        "description": "Fetches the earnings estimate for a given stock ticker using the specified RapidAPI key.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which the earnings estimate is to be fetched.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "companies_profile",
        "description": "Fetch the profile of a company from the Financial Modeling Prep API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol of the company.",
                "type": "str",
                "default": "AAPL"
            },
            "apikey": {
                "description": "API key for the Financial Modeling Prep API.",
                "type": "str",
                "default": "rapid_api"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getbystock",
        "description": "Fetches earnings data for a given stock symbol using the RapidAPI service.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which earnings data is to be retrieved.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_metrics_by_ticker",
        "description": "Retrieve real-time social media metrics for a cryptocurrency by its ticker symbol.",
        "parameters": {
            "securityticker": {
                "description": "The ticker symbol of the cryptocurrency for which you want to retrieve metrics.",
                "type": "str",
                "default": "eth"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_5_history",
        "description": "Fetches historical stock data including open, high, low, close prices, and trading volume.",
        "parameters": {
            "startdate": {
                "description": "The start date for fetching historical data in 'YYYY-MM-DD' format. Default is '2023-02-01'.",
                "type": "str",
                "default": "2023-02-01"
            },
            "keyword": {
                "description": "The stock symbol for which to fetch historical data. Default is 'GOOG'.",
                "type": "str",
                "default": "GOOG"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "mfs_family_list",
        "description": "Fetch a list of mutual fund families from the Twelve Data API, optionally filtering by country and fund family.",
        "parameters": {
            "country": {
                "description": "Filter results by country name or alpha code. Defaults to None.",
                "type": "str, optional",
                "default": ""
            },
            "fund_family": {
                "description": "Filter results by the investment company that manages the fund. Defaults to None.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_key_stats_get_overview",
        "description": "Fetch key statistics overview for a given stock performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock, which can be obtained from the /auto-complete, /get-summary, or /get-movers endpoints.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_6_month_historical_daily_prices",
        "description": "Retrieves 6 months of historical daily stock prices for the given ticker, including adjusted Open, High, Low, and Close prices, as well as Daily Volume, Dividend, and Split information.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which to retrieve the historical prices.",
                "type": "str",
                "default": "AAPL"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_search_suggestions",
        "description": "Fetches search suggestions for cryptocurrencies, exchanges, and markets based on a query.",
        "parameters": {
            "query": {
                "description": "The search term to look for. Can be a currency name, symbol, exchange, or market.",
                "type": "str, optional",
                "default": ""
            },
            "referencecurrencyuuid": {
                "description": "UUID of the reference currency for price calculations. Defaults to 'yhjMzLPhuIDl' (US Dollar).",
                "type": "str, optional",
                "default": "yhjMzLPhuIDl"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "adosc",
        "description": "Fetches the Chaikin A/D Oscillator (ADOSC) indicator data for a given financial instrument.",
        "parameters": {
            "interval": {
                "description": "Interval between two consecutive points in the time series. Supports `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.",
                "type": "str",
                "default": "1min"
            },
            "symbol": {
                "description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).",
                "type": "str",
                "default": "AAPL"
            },
            "slow_period": {
                "description": "Length of the slow EMA period. Defaults to 26.",
                "type": "int, optional",
                "default": 26
            },
            "fast_period": {
                "description": "Length of the fast EMA period. Defaults to 12.",
                "type": "int, optional",
                "default": 12
            },
            "format": {
                "description": "Output format, can be either `CSV` or `JSON`. Defaults to `json`.",
                "type": "str, optional",
                "default": "json"
            },
            "outputsize": {
                "description": "Number of data points to return. Defaults to 30.",
                "type": "int, optional",
                "default": 30
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_valuation",
        "description": "Fetches the valuation data for a given stock using its performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The value of the performanceId field from endpoints like /auto-complete, /get-summary, or /get-movers. It specifies the stock for which to fetch the valuation data.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_historical_data",
        "description": "Fetch historical data for a specific cryptocurrency pair from a given date range.",
        "parameters": {
            "date_from": {
                "description": "Start date in ddmmyyyy format.",
                "type": "str",
                "default": "20012020"
            },
            "date_to": {
                "description": "End date in ddmmyyyy format.",
                "type": "str",
                "default": "19022020"
            },
            "pair_id": {
                "description": "ID of the cryptocurrency pair.",
                "type": "int",
                "default": "33"
            },
            "lang_id": {
                "description": "Language ID as returned by the get-meta-data endpoint. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "time_utc_offset": {
                "description": "Time offset from UTC in seconds. Default is 28800 (UTC+8).",
                "type": "int, optional",
                "default": "28800"
            },
            "interval": {
                "description": "Interval of the data points. Allowed values are 'day', 'week', or 'month'. Default is 'day'.",
                "type": "str, optional",
                "default": "day"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "eomonth",
        "description": "Computes and returns the date of the last day of a given month based on a specified start date and the number of months to adjust.",
        "parameters": {
            "months": {
                "description": "The number of months before or after the start date. A positive value results in a future date, while a negative value results in a past date.",
                "type": "int",
                "default": 1
            },
            "start_date": {
                "description": "The start date in ISO 8601 format (YYYY-MM-DD), with or without time information.",
                "type": "str",
                "default": "2021-09-21"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_exchange_rate",
        "description": "Fetches the exchange rate between two currency codes using the RapidAPI service.",
        "parameters": {
            "to": {
                "description": "The target currency code for which you want to get the exchange rate.",
                "type": "str",
                "default": ""
            },
            "is_from": {
                "description": "The base currency code from which you are converting.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "cashflow",
        "description": "Fetches either annual or quarterly cash flow statements for a given stock symbol.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol of the company (e.g., 'AAPL' for Apple Inc.).",
                "type": "str",
                "default": "TSLA"
            },
            "period": {
                "description": "The reporting period for the cash flow statement. Typically 'annual' or 'quarterly'.",
                "type": "str",
                "default": "quarter"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "list_of_available_currencies",
        "description": "Retrieve the list of available currencies from the API, with optional filters for fixed-rate and active currencies.",
        "parameters": {
            "fixedrate": {
                "description": "Set to 'true' to return only currencies available on a fixed-rate flow. Defaults to 'true'.",
                "type": "str, optional",
                "default": "true"
            },
            "active": {
                "description": "Set to 'true' to return only active currencies. Defaults to 'true'.",
                "type": "str, optional",
                "default": "true"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "equity_intraday",
        "description": "Retrieve intraday time series data (Date, Open, High, Low, Close, Volume) for a specific symbol based on given parameters.",
        "parameters": {
            "interval": {
                "description": "The time interval in minutes for the data points, such as `1` (1 min) or `5` (5 min).",
                "type": "int",
                "default": "1"
            },
            "to": {
                "description": "The end date and time of the query in formats like **YYYY-mm-dd HH:MM** or **YYYY-mm-dd**.",
                "type": "str",
                "default": "2020-04-21 10:30"
            },
            "is_from": {
                "description": "The start date and time of the query in formats like **YYYY-mm-dd HH:MM** or **YYYY-mm-dd**.",
                "type": "str",
                "default": "2020-04-21 10:00"
            },
            "symbol": {
                "description": "The stock symbol for the queried asset, e.g., `AAPL` for Apple Inc or `MSFT` for Microsoft.",
                "type": "str",
                "default": "AAPL"
            },
            "adjust": {
                "description": "Indicates if the price data should be adjusted. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "equity_daily",
        "description": "Fetch end-of-day (daily) time series data for a specified asset within a given date range.",
        "parameters": {
            "is_from": {
                "description": "The query start date in the format 'YYYY-mm-dd', e.g. '2018-04-01'.",
                "type": "str",
                "default": "2018-04-01"
            },
            "to": {
                "description": "The query end date in the format 'YYYY-mm-dd', e.g. '2020-04-21'.",
                "type": "str",
                "default": "2020-04-21"
            },
            "symbol": {
                "description": "The symbol of the asset to look for, e.g. 'AAPL' for Apple Inc, 'MSFT' for Microsoft.",
                "type": "str",
                "default": "AAPL"
            },
            "adjust": {
                "description": "Indicates whether prices should be adjusted. Defaults to None.",
                "type": "bool, optional",
                "default": "false"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_key_stats_get_operating_efficiency",
        "description": "Fetch operating efficiency key stats from the provided performance ID using the Morningstar API.",
        "parameters": {
            "performanceid": {
                "description": "The value of the performanceId field obtained from the /auto-complete, /get-summary, or /get-movers endpoints.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_financial_data",
        "description": "Fetches financial data for a given stock symbol from the Yahoo Finance API.",
        "parameters": {
            "symbol": {
                "description": "Ticker symbol for the stock (e.g., \"AAPL\" for Apple Inc.).",
                "type": "str",
                "default": "AAPL"
            },
            "region": {
                "description": "Region code where the stock is listed. Defaults to 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.",
                "type": "str, optional",
                "default": "US"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "financial_cash_statement",
        "description": "Fetches financial cash statement data for the given ticker symbol over the past 10 years.",
        "parameters": {
            "symbol": {
                "description": "The ticker symbol to retrieve financial statements for.",
                "type": "str",
                "default": "AMZN"
            },
            "formstyle": {
                "description": "The format in which to return the data. Default is 'dataframe'.",
                "type": "str, optional",
                "default": "dataframe"
            },
            "freq": {
                "description": "The frequency of the data. Use 'A' for annual or 'Q' for quarterly. Default is 'Q'.",
                "type": "str, optional",
                "default": "Q"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "currency_exchange_rate",
        "description": "Fetches exchange rates between two currencies or cryptocurrencies.",
        "parameters": {
            "from_symbol": {
                "description": "A 3-letter currency code (ISO 4217) representing the currency to convert from (e.g., 'USD').",
                "type": "str",
                "default": "USD"
            },
            "to_symbol": {
                "description": "A 3-letter currency code (ISO 4217) representing the currency to convert to (e.g., 'EUR').",
                "type": "str",
                "default": "EUR"
            },
            "language": {
                "description": "A 2-letter code (ISO 639-1) representing the language for the results. Default is 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_analysis_data",
        "description": "Fetch analysis data for a specific stock using Morningstar API.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock, obtained from endpoints such as auto-complete, get-summary, or get-movers.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "streams_user",
        "description": "Fetches and returns the most recent messages for a specified user from the StockTwits API.",
        "parameters": {
            "is_id": {
                "description": "User ID or username of the stream's user you want to show.",
                "type": "str",
                "default": "zerobeta"
            },
            "since": {
                "description": "Returns results with an ID greater than (more recent than) the specified ID.",
                "type": "int, optional",
                "default": ""
            },
            "max": {
                "description": "Returns results with an ID less than (older than) or equal to the specified ID.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of messages to return. This limit must be a number under 30. Default and max limit is 30.",
                "type": "int, optional",
                "default": ""
            },
            "callback": {
                "description": "Define your own callback function name, add this parameter as the value.",
                "type": "str, optional",
                "default": ""
            },
            "filter": {
                "description": "Filter messages by links, charts, or videos.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_financials",
        "description": "Fetches financial data for a given stock based on performance ID, report type, and interval.",
        "parameters": {
            "performanceid": {
                "description": "Value of the performanceId field obtained from endpoints like /auto-complete, /get-summary, or /get-movers.",
                "type": "str",
                "default": "0P0000OQN8"
            },
            "reporttype": {
                "description": "Type of report to retrieve. 'R' for Restated, 'A' for As originally reported. Defaults to 'A'.",
                "type": "str, optional",
                "default": "A"
            },
            "interval": {
                "description": "Interval for the financial data. Choices are 'quarterly' or 'annual'. Defaults to 'annual'.",
                "type": "str, optional",
                "default": "annual"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_get_press_releases",
        "description": "Retrieves press releases for a given stock ticker.",
        "parameters": {
            "tickerid": {
                "description": "The value of the tickerId field returned by other endpoints, such as .../stock/search or .../market/get-common-ranking.",
                "type": "int",
                "default": "913256135"
            },
            "lastannouncementid": {
                "description": "For paging purposes, the last announcement ID returned by this endpoint. Leave empty for the first query.",
                "type": "int, optional",
                "default": ""
            },
            "limit": {
                "description": "The number of items per response. Default is 20.",
                "type": "int, optional",
                "default": "20"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stories_detail",
        "description": "Fetches full story information based on the given internal ID.",
        "parameters": {
            "internalid": {
                "description": "The internal ID of the story. This can be obtained from the /stories/list or /news/list or /news/list-by-region endpoints.",
                "type": "str",
                "default": "QFY0Y6T0AFB501"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_history",
        "description": "Retrieves paginated history data from a web image storage service.",
        "parameters": {
            "pagesize": {
                "description": "The number of items per page.",
                "type": "int",
                "default": "20"
            },
            "page": {
                "description": "The page number to retrieve, starting from 0.",
                "type": "int",
                "default": "0"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "market_get_chart",
        "description": "Fetches chart data from the specified market endpoint using given parameters.",
        "parameters": {
            "interval": {
                "description": "One of the following intervals for the chart data: 'd1', 'd3', 'ytd', 'm1', 'm3', 'm6', 'y1', 'y5'.",
                "type": "str",
                "default": "y1"
            },
            "is_id": {
                "description": "The id of the market instrument, typically obtained from the market auto-complete endpoint.",
                "type": "str",
                "default": "inmex:ind"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "upgrade_downgrade_history",
        "description": "Fetches the upgrade and downgrade history for a given stock symbol from the Yahoo Finance Complete API.",
        "parameters": {
            "symbol": {
                "description": "The stock symbol for which the upgrade and downgrade history is to be fetched.",
                "type": "str",
                "default": ""
            },
            "is_from": {
                "description": "The starting date for the history in the format 'YYYY-MM-DD'.",
                "type": "str",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_ohlc_data",
        "description": "Fetches OHLC (Open, High, Low, Close) data for a specified coin over a given time interval.",
        "parameters": {
            "uuid": {
                "description": "UUID of the cryptocurrency for which to fetch the OHLC data.",
                "type": "str",
                "default": "Qwsogvtv82FCd"
            },
            "referencecurrencyuuid": {
                "description": "UUID of the reference currency in which prices are calculated. Defaults to 'yhjMzLPhuIDl' (US Dollar).",
                "type": "str, optional",
                "default": "yhjMzLPhuIDl"
            },
            "limit": {
                "description": "Number of time periods for which the OHLC data is retrieved. When `interval` is 'hour' and `limit` is 10, data will be returned for the last 10 hours. Defaults to None.",
                "type": "int, optional",
                "default": ""
            },
            "interval": {
                "description": "Time period over which each OHLC item is determined. Allowed values are 'minute', '5minutes', 'hour', '8hours', 'day', 'week', 'month'. Defaults to 'day'.",
                "type": "str, optional",
                "default": "day"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_get_strategy",
        "description": "Fetches the strategy for a given security ID and type from the Morningstar API.",
        "parameters": {
            "securityid": {
                "description": "The security ID used to query the API.",
                "type": "str",
                "default": "F00000O2CG"
            },
            "type": {
                "description": "The type of investment, one of the following values: etf or fund.",
                "type": "str",
                "default": "etf"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "type_performance_get_trailing_returns",
        "description": "Fetches the trailing returns in the Performance tab for a specified ETF or FUND.",
        "parameters": {
            "type": {
                "description": "The type of security. Must be one of 'etf' or 'fund'.",
                "type": "str",
                "default": "etf"
            },
            "securityid": {
                "description": "The security ID obtained from the .../market/v2/get-returns endpoint.",
                "type": "str",
                "default": "F00000O2CG"
            },
            "duration": {
                "description": "The time duration for the returns. Must be one of 'daily', 'monthly', or 'quarterly'. Defaults to 'daily'.",
                "type": "str, optional",
                "default": "daily"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "gettraderpositions",
        "description": "Gets the trader positions for a given portfolio ID using the Trader Wagon API.",
        "parameters": {
            "portfolioid": {
                "description": "The portfolio ID of the trader.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "equity_splits",
        "description": "Fetches the splits history data for a given security from the Quotient API.",
        "parameters": {
            "symbol": {
                "description": "The symbol of the asset to look for, e.g., `AAPL` (Apple Inc), `MSFT` (Microsoft Corporation).",
                "type": "str",
                "default": "MSFT"
            },
            "is_from": {
                "description": "The query start date (supported format is **YYYY-mm-dd**), e.g., `2019-01-01`.",
                "type": "str",
                "default": "1991-01-01"
            },
            "to": {
                "description": "The query end date (supported format is **YYYY-mm-dd**), e.g., `2020-04-17`.",
                "type": "str",
                "default": "2020-04-17"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "api_v2_minimal_exchange_amount",
        "description": "Fetch the minimal payment amount required to perform a cryptocurrency exchange using the ChangeNow API v2.",
        "parameters": {
            "flow": {
                "description": "Type of exchange flow. Options are 'standard' or 'fixed-rate'. Default is 'standard'.",
                "type": "str",
                "default": "standard"
            },
            "tocurrency": {
                "description": "Ticker of the currency to receive.",
                "type": "str",
                "default": "usdt"
            },
            "fromcurrency": {
                "description": "Ticker of the currency to exchange.",
                "type": "str",
                "default": "btc"
            },
            "fromnetwork": {
                "description": "Network of the currency to exchange.",
                "type": "str",
                "default": "btc"
            },
            "tonetwork": {
                "description": "Network of the currency to receive.",
                "type": "str",
                "default": "eth"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "bridges",
        "description": "Fetch data about cross-chain bridges using the Bridges API from DeFi Watch.",
        "parameters": {
            "take": {
                "description": "The number of bridges to retrieve.",
                "type": "int, optional",
                "default": ""
            },
            "skip": {
                "description": "The number of bridges to skip from the start.",
                "type": "int, optional",
                "default": ""
            },
            "is_from": {
                "description": "The name of the blockchain from which you want to send.",
                "type": "str, optional",
                "default": ""
            },
            "to": {
                "description": "The name of the blockchain to which you want to send.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getclimatescorebygps",
        "description": "Fetches the climate score for a given GPS position based on specific disaster and activity types.",
        "parameters": {
            "latitude": {
                "description": "The latitude coordinate of the location.",
                "type": "int",
                "default": "48.856613"
            },
            "longitude": {
                "description": "The longitude coordinate of the location.",
                "type": "int",
                "default": "2.352222"
            },
            "disaster_type_number": {
                "description": "The disaster type identifier.",
                "type": "int",
                "default": ""
            },
            "activity_type_number": {
                "description": "The activity type identifier.",
                "type": "int",
                "default": ""
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_company_quote_price_data",
        "description": "Retrieve updated quote and pricing data for a specified company.",
        "parameters": {
            "ticker": {
                "description": "The ticker symbol of the company to retrieve data for.",
                "type": "str",
                "default": "amzn"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "volume_weighted_average_price_vwap",
        "description": "Returns the Volume Weighted Average Price (VWAP) indicator for a given financial instrument.",
        "parameters": {
            "exchange": {
                "description": "The exchange on which the symbol is traded.",
                "type": "str",
                "default": "binance"
            },
            "symbol": {
                "description": "The symbol for which the VWAP is to be calculated.",
                "type": "str",
                "default": "btcusdt"
            },
            "interval": {
                "description": "The interval for the VWAP calculation (e.g., \"1m\", \"5m\", \"1h\").",
                "type": "str",
                "default": "1m"
            },
            "market": {
                "description": "The type of market. Available options are 'spot', 'usdt-perpetual', 'inverse-perpetual'.",
                "type": "str",
                "default": "spot"
            },
            "backtracks": {
                "description": "The number of periods to include in the calculation for historical data. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            },
            "is_from": {
                "description": "The starting timestamp for the data retrieval. Defaults to '1683895800'.",
                "type": "str, optional",
                "default": "1683895800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "news_sentiment_data",
        "description": "Fetches news articles and their sentiment scores for a given stock ticker using the RapidAPI Stock Sentiment API.",
        "parameters": {
            "ticker": {
                "description": "The stock ticker symbol for which news articles and sentiment scores are to be retrieved.",
                "type": "str",
                "default": "TSLA"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_brief_chart",
        "description": "Fetches and returns a brief information chart for a specific cryptocurrency pair.",
        "parameters": {
            "pair_id": {
                "description": "The ID of the cryptocurrency pair, typically obtained from endpoints like coins/list, coins/search, or coins/list-pairs.",
                "type": "int",
                "default": "33"
            },
            "lang_id": {
                "description": "The language ID for the response, usually obtained from the get-meta-data endpoint. Default is 1.",
                "type": "int, optional",
                "default": "1"
            },
            "range": {
                "description": "The time range for the chart. Allowed values are 'd' for day, 'w' for week, '1m' for one month, '1y' for one year, '5y' for five years, and 'max' for the maximum available range. Default is 'p'.",
                "type": "str, optional",
                "default": "p"
            },
            "time_utc_offset": {
                "description": "The UTC offset in seconds. For example, utc+8 translates to 8 * 60 * 60 = 28800 seconds. Default is 28800.",
                "type": "int, optional",
                "default": "28800"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "equity_related_indices",
        "description": "Fetches and returns equity-related indices for a given stock slug.",
        "parameters": {
            "slug": {
                "description": "The stock identifier used to fetch related indices.",
                "type": "str",
                "default": "saudi-aramco"
            },
            "lang": {
                "description": "The language code for the response. Defaults to 'en'.",
                "type": "str, optional",
                "default": "en"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_analysis_report",
        "description": "Fetches detailed information about a stock based on the provided performance ID.",
        "parameters": {
            "performanceid": {
                "description": "Value of the performance ID field, typically obtained from endpoints such as /auto-complete, /get-summary, or /get-movers.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "getnfts_metadata",
        "description": "Fetches the metadata, attributes, and enclosed media of a specific NFT.",
        "parameters": {
            "contractaddress": {
                "description": "Address of the NFT contract (e.g., \"0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb\" for Bored Apes).",
                "type": "str",
                "default": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D"
            },
            "tokenid": {
                "description": "The ID of the NFT token.",
                "type": "int",
                "default": "4671"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "coins_get_markets",
        "description": "Fetches market information for a specific cryptocurrency pair in a specified currency.",
        "parameters": {
            "cur2": {
                "description": "The ID of the currency to get market information for. This value is returned from the /get-meta-data endpoint.",
                "type": "int",
                "default": "12"
            },
            "pair_id": {
                "description": "The ID of the cryptocurrency pair. This value is obtained from endpoints like coins/list, coins/search, or coins/list-pairs.",
                "type": "int",
                "default": "1057391"
            },
            "time_utc_offset": {
                "description": "The UTC offset in seconds. For example, UTC+8 corresponds to 28800 seconds. Defaults to 28800.",
                "type": "int, optional",
                "default": "28800"
            },
            "lang_id": {
                "description": "The ID of the language. This value is returned from the /get-meta-data endpoint. Defaults to 1.",
                "type": "int, optional",
                "default": "1"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "stock_v2_get_competitors",
        "description": "Fetches the competitors of a stock based on its performance ID.",
        "parameters": {
            "performanceid": {
                "description": "The performance ID of the stock, typically retrieved from /auto-complete, /get-summary, or /get-movers endpoints.",
                "type": "str",
                "default": "0P0000OQN8"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_coin_historical_metrics_by_ticker",
        "description": "Retrieve historical social media metrics for a cryptocurrency by its ticker.",
        "parameters": {
            "securityticker": {
                "description": "Ticker symbol of the cryptocurrency.",
                "type": "str",
                "default": "btc"
            },
            "date": {
                "description": "Date and time in the format 'MM/DD/YYYY HH:MM AM/PM' for which to retrieve the metrics.",
                "type": "str",
                "default": "04/26/2022 06:00 PM"
            },
            "timeframe": {
                "description": "Timeframe for the metrics. Default is '1D'. Other options include '1h' and '8h'.",
                "type": "str, optional",
                "default": "1D"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "historical_prices",
        "description": "Fetches a list of the high and low prices for the specified item at the given time interval.",
        "parameters": {
            "timestep": {
                "description": "The interval at which to fetch price data (e.g., 'daily', 'hourly').",
                "type": "str",
                "default": "5m"
            },
            "itemid": {
                "description": "The unique identifier for the item.",
                "type": "int",
                "default": "565"
            }
        },
        "domain": "Finance"
    },
    {
        "name": "get_leaderboard_rank",
        "description": "Retrieves the leaderboard rank from the Binance Futures Leaderboard API.",
        "parameters": {
            "statisticstype": {
                "description": "The type of statistics to search for.",
                "type": "str, optional",
                "default": ""
            },
            "isshared": {
                "description": "Whether to include shared positions.",
                "type": "bool, optional",
                "default": "true"
            },
            "tradetype": {
                "description": "The trade type to search for. \"PERPETUAL\" for USD\u24c8-M and \"DELIVERY\" for COIN-M.",
                "type": "str, optional",
                "default": ""
            },
            "periodtype": {
                "description": "The period type to search for.",
                "type": "str, optional",
                "default": ""
            }
        },
        "domain": "Finance"
    }
]